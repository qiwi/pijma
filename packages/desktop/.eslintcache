[{"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/actions/Actions.tsx":"1","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/actions/index.ts":"2","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/alert/Alert.tsx":"3","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/alert/index.ts":"4","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/alert-block/AlertBlock.tsx":"5","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/alert-block/index.ts":"6","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/annotation/Annotation.tsx":"7","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/annotation/index.ts":"8","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/block-accordion/BlockAccordion.tsx":"9","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/block-accordion/index.ts":"10","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/block-content/BlockContent.tsx":"11","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/block-content/index.ts":"12","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/block-tabs/BlockTabs.tsx":"13","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/block-tabs/index.ts":"14","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/breadcrumbs/Breadcrumbs.tsx":"15","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/breadcrumbs/index.ts":"16","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/button/Button.tsx":"17","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/button/index.ts":"18","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/checkbox/Checkbox.tsx":"19","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/checkbox/CheckboxProps.ts":"20","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/checkbox/index.ts":"21","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/checkbox-field/CheckboxField.tsx":"22","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/checkbox-field/CheckboxFieldOptionModel.ts":"23","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/checkbox-field/CheckboxFieldProps.ts":"24","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/checkbox-field/index.ts":"25","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/code-field/CodeField.tsx":"26","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/code-field/CodeFieldProps.ts":"27","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/code-field/index.ts":"28","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/content-suggest/ContentSuggest.tsx":"29","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/content-suggest/ContentSuggestOptionModel.ts":"30","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/content-suggest/ContentSuggestProps.ts":"31","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/content-suggest/index.ts":"32","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/details/Details.tsx":"33","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/details/index.ts":"34","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/drop-down/DropDown.tsx":"35","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/drop-down/index.ts":"36","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/extended-progress-bar/ExtendedProgressBar.tsx":"37","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/extended-progress-bar/index.ts":"38","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/footer-app/FooterApp.tsx":"39","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/footer-app/index.ts":"40","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/footer-nav/FooterNav.tsx":"41","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/footer-nav/index.ts":"42","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/footer-out/FooterOut.tsx":"43","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/footer-out/index.ts":"44","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/glossary/Glossary.tsx":"45","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/glossary/index.ts":"46","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header/Header.tsx":"47","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header/index.ts":"48","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-bank-card-link/HeaderBankCardLink.tsx":"49","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-bank-card-link/index.ts":"50","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-drop-down/HeaderDropDown.tsx":"51","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-drop-down/index.ts":"52","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-menu/HeaderMenu.tsx":"53","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-menu/HeaderMenuItem.tsx":"54","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-menu/index.ts":"55","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-suggest/HeaderSuggest.tsx":"56","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-suggest/HeaderSuggestOptionModel.ts":"57","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-suggest/HeaderSuggestProps.ts":"58","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-suggest/index.ts":"59","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/hint/Hint.tsx":"60","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/hint/index.ts":"61","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/index.ts":"62","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/link/BlockLink.tsx":"63","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/link/FileLink.tsx":"64","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/link/Link.tsx":"65","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/link/SectionLink.tsx":"66","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/link/index.ts":"67","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/list/List.tsx":"68","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/list/index.ts":"69","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/logo-block-link/LogoBlockLink.tsx":"70","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/logo-block-link/index.ts":"71","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/logo-link/LogoLink.tsx":"72","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/logo-link/index.ts":"73","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/markdown/Markdown.tsx":"74","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/markdown/index.ts":"75","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/menu/MenuItem.tsx":"76","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/menu/MenuLink.tsx":"77","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/menu/index.ts":"78","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/modal/SimpleModal.tsx":"79","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/modal/index.ts":"80","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/nav-link/NavLink.tsx":"81","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/nav-link/index.ts":"82","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/notice/Notice.tsx":"83","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/notice/index.ts":"84","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/oops/Oops.tsx":"85","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/oops/index.ts":"86","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/pagination/Pagination.tsx":"87","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/pagination/PaginationLink.tsx":"88","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/pagination/index.ts":"89","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/password-field/PasswordField.tsx":"90","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/password-field/PasswordFieldProps.ts":"91","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/password-field/index.ts":"92","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/phone-field/PhoneField.tsx":"93","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/phone-field/PhoneFieldProps.ts":"94","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/phone-field/index.ts":"95","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/progress-bar/ProgressBar.tsx":"96","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/progress-bar/index.ts":"97","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/radio-field/RadioField.tsx":"98","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/radio-field/RadioFieldOptionModel.ts":"99","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/radio-field/RadioFieldProps.ts":"100","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/radio-field/index.ts":"101","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/rating/Rating.tsx":"102","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/rating/index.ts":"103","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/select-field/SelectField.tsx":"104","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/select-field/index.ts":"105","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/status/Status.tsx":"106","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/status/index.ts":"107","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/suggest-field/SuggestField.tsx":"108","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/suggest-field/SuggestFieldOptionModel.ts":"109","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/suggest-field/SuggestFieldProps.ts":"110","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/suggest-field/index.ts":"111","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/switch/Switch.tsx":"112","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/switch/SwitchProps.ts":"113","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/switch/index.ts":"114","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/switch-field/SwitchField.tsx":"115","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/switch-field/SwitchFieldOptionModel.ts":"116","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/switch-field/SwitchFieldProps.ts":"117","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/switch-field/index.ts":"118","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/tabs/Tabs.tsx":"119","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/tabs/index.ts":"120","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/text-area-field/TextAreaField.tsx":"121","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/text-area-field/index.tsx":"122","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/text-field/TextField.tsx":"123","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/text-field/TextFieldProps.ts":"124","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/text-field/index.ts":"125","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/typography/Caption.tsx":"126","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/typography/Heading.tsx":"127","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/typography/Paragraph.tsx":"128","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/typography/Text.tsx":"129","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/typography/Title.tsx":"130","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/typography/index.ts":"131","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/ComponentsListRenderer.tsx":"132","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/ExamplesRenderer.tsx":"133","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/Heading.tsx":"134","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/Link.tsx":"135","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/Markdown/MarkdownHeading.tsx":"136","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/Para.tsx":"137","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/ReactComponentRenderer.tsx":"138","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/SectionHeadingRenderer.tsx":"139","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/SectionRenderer.tsx":"140","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/StyleGuideRenderer.tsx":"141","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/TableOfContentsRenderer.tsx":"142","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/Wrapper.tsx":"143","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/slots/IsolateButton.tsx":"144","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/require.js":"145"},{"hash":"146","results":"147","hashOfConfig":"148"},{"hash":"149","results":"150","hashOfConfig":"148"},{"hash":"151","results":"152","hashOfConfig":"148"},{"hash":"153","results":"154","hashOfConfig":"148"},{"hash":"155","results":"156","hashOfConfig":"148"},{"hash":"157","results":"158","hashOfConfig":"148"},{"hash":"159","results":"160","hashOfConfig":"148"},{"hash":"161","results":"162","hashOfConfig":"148"},{"hash":"163","results":"164","hashOfConfig":"148"},{"hash":"165","results":"166","hashOfConfig":"148"},{"hash":"167","results":"168","hashOfConfig":"148"},{"hash":"169","results":"170","hashOfConfig":"148"},{"hash":"171","results":"172","hashOfConfig":"148"},{"hash":"173","results":"174","hashOfConfig":"148"},{"hash":"175","results":"176","hashOfConfig":"148"},{"hash":"177","results":"178","hashOfConfig":"148"},{"hash":"179","results":"180","hashOfConfig":"148"},{"hash":"181","results":"182","hashOfConfig":"148"},{"hash":"183","results":"184","hashOfConfig":"148"},{"hash":"185","results":"186","hashOfConfig":"148"},{"hash":"187","results":"188","hashOfConfig":"148"},{"hash":"189","results":"190","hashOfConfig":"148"},{"hash":"191","results":"192","hashOfConfig":"148"},{"hash":"193","results":"194","hashOfConfig":"148"},{"hash":"195","results":"196","hashOfConfig":"148"},{"hash":"197","results":"198","hashOfConfig":"148"},{"hash":"199","results":"200","hashOfConfig":"148"},{"hash":"201","results":"202","hashOfConfig":"148"},{"hash":"203","results":"204","hashOfConfig":"148"},{"hash":"205","results":"206","hashOfConfig":"148"},{"hash":"207","results":"208","hashOfConfig":"148"},{"hash":"209","results":"210","hashOfConfig":"148"},{"hash":"211","results":"212","hashOfConfig":"148"},{"hash":"213","results":"214","hashOfConfig":"148"},{"hash":"215","results":"216","hashOfConfig":"148"},{"hash":"217","results":"218","hashOfConfig":"148"},{"hash":"219","results":"220","hashOfConfig":"148"},{"hash":"221","results":"222","hashOfConfig":"148"},{"hash":"223","results":"224","hashOfConfig":"148"},{"hash":"225","results":"226","hashOfConfig":"148"},{"hash":"227","results":"228","hashOfConfig":"148"},{"hash":"229","results":"230","hashOfConfig":"148"},{"hash":"231","results":"232","hashOfConfig":"148"},{"hash":"233","results":"234","hashOfConfig":"148"},{"hash":"235","results":"236","hashOfConfig":"148"},{"hash":"237","results":"238","hashOfConfig":"148"},{"hash":"239","results":"240","hashOfConfig":"148"},{"hash":"241","results":"242","hashOfConfig":"148"},{"hash":"243","results":"244","hashOfConfig":"148"},{"hash":"245","results":"246","hashOfConfig":"148"},{"hash":"247","results":"248","hashOfConfig":"148"},{"hash":"249","results":"250","hashOfConfig":"148"},{"hash":"251","results":"252","hashOfConfig":"148"},{"hash":"253","results":"254","hashOfConfig":"148"},{"hash":"255","results":"256","hashOfConfig":"148"},{"hash":"257","results":"258","hashOfConfig":"148"},{"hash":"259","results":"260","hashOfConfig":"148"},{"hash":"261","results":"262","hashOfConfig":"148"},{"hash":"263","results":"264","hashOfConfig":"148"},{"hash":"265","results":"266","hashOfConfig":"148"},{"hash":"267","results":"268","hashOfConfig":"148"},{"hash":"269","results":"270","hashOfConfig":"148"},{"hash":"271","results":"272","hashOfConfig":"148"},{"hash":"273","results":"274","hashOfConfig":"148"},{"hash":"275","results":"276","hashOfConfig":"148"},{"hash":"277","results":"278","hashOfConfig":"148"},{"hash":"279","results":"280","hashOfConfig":"148"},{"hash":"281","results":"282","hashOfConfig":"148"},{"hash":"283","results":"284","hashOfConfig":"148"},{"hash":"285","results":"286","hashOfConfig":"148"},{"hash":"287","results":"288","hashOfConfig":"148"},{"hash":"289","results":"290","hashOfConfig":"148"},{"hash":"291","results":"292","hashOfConfig":"148"},{"hash":"293","results":"294","hashOfConfig":"148"},{"hash":"295","results":"296","hashOfConfig":"148"},{"hash":"297","results":"298","hashOfConfig":"148"},{"hash":"299","results":"300","hashOfConfig":"148"},{"hash":"301","results":"302","hashOfConfig":"148"},{"hash":"303","results":"304","hashOfConfig":"148"},{"hash":"305","results":"306","hashOfConfig":"148"},{"hash":"307","results":"308","hashOfConfig":"148"},{"hash":"309","results":"310","hashOfConfig":"148"},{"hash":"311","results":"312","hashOfConfig":"148"},{"hash":"313","results":"314","hashOfConfig":"148"},{"hash":"315","results":"316","hashOfConfig":"148"},{"hash":"317","results":"318","hashOfConfig":"148"},{"hash":"319","results":"320","hashOfConfig":"148"},{"hash":"321","results":"322","hashOfConfig":"148"},{"hash":"323","results":"324","hashOfConfig":"148"},{"hash":"325","results":"326","hashOfConfig":"148"},{"hash":"327","results":"328","hashOfConfig":"148"},{"hash":"329","results":"330","hashOfConfig":"148"},{"hash":"331","results":"332","hashOfConfig":"148"},{"hash":"333","results":"334","hashOfConfig":"148"},{"hash":"335","results":"336","hashOfConfig":"148"},{"hash":"337","results":"338","hashOfConfig":"148"},{"hash":"339","results":"340","hashOfConfig":"148"},{"hash":"341","results":"342","hashOfConfig":"148"},{"hash":"343","results":"344","hashOfConfig":"148"},{"hash":"345","results":"346","hashOfConfig":"148"},{"hash":"347","results":"348","hashOfConfig":"148"},{"hash":"349","results":"350","hashOfConfig":"148"},{"hash":"351","results":"352","hashOfConfig":"148"},{"hash":"353","results":"354","hashOfConfig":"148"},{"hash":"355","results":"356","hashOfConfig":"148"},{"hash":"357","results":"358","hashOfConfig":"148"},{"hash":"359","results":"360","hashOfConfig":"148"},{"hash":"361","results":"362","hashOfConfig":"148"},{"hash":"363","results":"364","hashOfConfig":"148"},{"hash":"365","results":"366","hashOfConfig":"148"},{"hash":"367","results":"368","hashOfConfig":"148"},{"hash":"369","results":"370","hashOfConfig":"148"},{"hash":"371","results":"372","hashOfConfig":"148"},{"hash":"373","results":"374","hashOfConfig":"148"},{"hash":"375","results":"376","hashOfConfig":"148"},{"hash":"377","results":"378","hashOfConfig":"148"},{"hash":"379","results":"380","hashOfConfig":"148"},{"hash":"381","results":"382","hashOfConfig":"148"},{"hash":"383","results":"384","hashOfConfig":"148"},{"hash":"385","results":"386","hashOfConfig":"148"},{"hash":"387","results":"388","hashOfConfig":"148"},{"hash":"389","results":"390","hashOfConfig":"148"},{"hash":"391","results":"392","hashOfConfig":"148"},{"hash":"393","results":"394","hashOfConfig":"148"},{"hash":"395","results":"396","hashOfConfig":"148"},{"hash":"397","results":"398","hashOfConfig":"148"},{"hash":"399","results":"400","hashOfConfig":"148"},{"hash":"401","results":"402","hashOfConfig":"148"},{"hash":"403","results":"404","hashOfConfig":"148"},{"hash":"405","results":"406","hashOfConfig":"148"},{"hash":"407","results":"408","hashOfConfig":"148"},{"hash":"409","results":"410","hashOfConfig":"148"},{"hash":"411","results":"412","hashOfConfig":"148"},{"hash":"413","results":"414","hashOfConfig":"148"},{"hash":"415","results":"416","hashOfConfig":"148"},{"hash":"417","results":"418","hashOfConfig":"148"},{"hash":"419","results":"420","hashOfConfig":"148"},{"hash":"421","results":"422","hashOfConfig":"148"},{"hash":"423","results":"424","hashOfConfig":"148"},{"hash":"425","results":"426","hashOfConfig":"148"},{"hash":"427","results":"428","hashOfConfig":"148"},{"hash":"429","results":"430","hashOfConfig":"148"},{"hash":"431","results":"432","hashOfConfig":"148"},{"hash":"433","results":"434","hashOfConfig":"148"},{"hash":"435","results":"436","hashOfConfig":"148"},"2d71bdfe7a6ea124523094130949a4f2",{"filePath":"437","messages":"438","suppressedMessages":"439","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440"},"191yp0g","3b1f7a9bb021f3a61a4c4fa994e6ed87",{"filePath":"441","messages":"442","suppressedMessages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9d717ef795fcebc75baceeb6a145c9ea",{"filePath":"444","messages":"445","suppressedMessages":"446","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447"},"15817cca6108965908a80cf52c7ef54a",{"filePath":"448","messages":"449","suppressedMessages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"733f86bf7b382315e3fbe02e142b9404",{"filePath":"451","messages":"452","suppressedMessages":"453","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454"},"025cd622aaf9e387f2807096601e18be",{"filePath":"455","messages":"456","suppressedMessages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16f1b65f36bb5d8a5eae5a3175c718e5",{"filePath":"458","messages":"459","suppressedMessages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461"},"80c2ce97597835719ee0776db2e5464c",{"filePath":"462","messages":"463","suppressedMessages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cd69cc280577a1541ba836a13c689ad",{"filePath":"465","messages":"466","suppressedMessages":"467","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468"},"e197473e4cf0185fb7a60ec18c432648",{"filePath":"469","messages":"470","suppressedMessages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"73acffa12d660f931e5e4cc5d66c7a4e",{"filePath":"472","messages":"473","suppressedMessages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475"},"c4eb719764c6f0447f5c89a0e451347f",{"filePath":"476","messages":"477","suppressedMessages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"31d6b88498eeeb632da7d3c2211330d2",{"filePath":"479","messages":"480","suppressedMessages":"481","errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482"},"3ce4984047a1da9a8f1ce19b7c67f912",{"filePath":"483","messages":"484","suppressedMessages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f6ce5e960261677ad39260f7e7dfdca4",{"filePath":"486","messages":"487","suppressedMessages":"488","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489"},"95dba653f8fcd5ada5d11952710d006d",{"filePath":"490","messages":"491","suppressedMessages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e5890469426cd01ab08665b4a1bcf618",{"filePath":"493","messages":"494","suppressedMessages":"495","errorCount":7,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496"},"ee5dcacc2f6945472c7e752c2b9bdc8e",{"filePath":"497","messages":"498","suppressedMessages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fd043777e2186fff522bc37dadf74eed",{"filePath":"500","messages":"501","suppressedMessages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503"},"bf43ad63f7b276f4e0f1ec206c6d6bb6",{"filePath":"504","messages":"505","suppressedMessages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"db5fed49c88fde93f89d3e20067e2f74",{"filePath":"507","messages":"508","suppressedMessages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9a2c5227ad1129c34ac2732f7a91b037",{"filePath":"510","messages":"511","suppressedMessages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513"},"8e5dc94abaa8c81d52df391b3e5d43ae",{"filePath":"514","messages":"515","suppressedMessages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4e3723cf79eeb1d8d7a0a5983e07cfea",{"filePath":"517","messages":"518","suppressedMessages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"70fa5f6cbf6849efeef8333cfa067731",{"filePath":"520","messages":"521","suppressedMessages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ee48f37bf281f3691f92bda661fa4537",{"filePath":"523","messages":"524","suppressedMessages":"525","errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526"},"6de065df22e4f3340554ba824d6219fd",{"filePath":"527","messages":"528","suppressedMessages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"da0281cd3025eccb5f280e2cee4d0a44",{"filePath":"530","messages":"531","suppressedMessages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bec5c9fa588ba533074b71595d9968e9",{"filePath":"533","messages":"534","suppressedMessages":"535","errorCount":6,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536"},"ef546274dfb1c2e516f5d6eebbccb882",{"filePath":"537","messages":"538","suppressedMessages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"db08df742b4243a59cde202ecaad1633",{"filePath":"540","messages":"541","suppressedMessages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cdec08af88c2e14a0b5895a65de49691",{"filePath":"543","messages":"544","suppressedMessages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"650bc26e763edc54db8176c56a54247b",{"filePath":"546","messages":"547","suppressedMessages":"548","errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549"},"fa6a0ac2168e4349a6859650e2e9bfce",{"filePath":"550","messages":"551","suppressedMessages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a3ee7e041b5831c49f910cc10c2e4b52",{"filePath":"553","messages":"554","suppressedMessages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556"},"9eaa8ff438834aeecbb65ece143aaf99",{"filePath":"557","messages":"558","suppressedMessages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bb3fad34568e0c80aaef20651c6ff43f",{"filePath":"560","messages":"561","suppressedMessages":"562","errorCount":7,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563"},"d98274e3d46c0f79a67782e40bac57b8",{"filePath":"564","messages":"565","suppressedMessages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7b266686302ee16fad100d202a3b9770",{"filePath":"567","messages":"568","suppressedMessages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570"},"1bc016acaf30707f544aef30b63b88d4",{"filePath":"571","messages":"572","suppressedMessages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9002875c8e0a11d62e0389af5a939e70",{"filePath":"574","messages":"575","suppressedMessages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"577"},"dea0d38e1aff17801b8d89c026b60fe1",{"filePath":"578","messages":"579","suppressedMessages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"303af2ec65b6fa78241e14901ce03ad7",{"filePath":"581","messages":"582","suppressedMessages":"583","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584"},"5ae18affe8da528bfc25b347031ff5a0",{"filePath":"585","messages":"586","suppressedMessages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e74e40ea51f9e636fe29c48666c6ec7c",{"filePath":"588","messages":"589","suppressedMessages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591"},"908f48e1dbf7c66a8a98ca8cdacb1204",{"filePath":"592","messages":"593","suppressedMessages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6c724cd2daa9d8324e13389eca9f75f1",{"filePath":"595","messages":"596","suppressedMessages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598"},"4ab4642aad8fe53a0f461efacb6acb66",{"filePath":"599","messages":"600","suppressedMessages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"74c936bfdc1a0272eec2185155cdfa96",{"filePath":"602","messages":"603","suppressedMessages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605"},"d94c2d41c8ab1566a4e02f1eecde381c",{"filePath":"606","messages":"607","suppressedMessages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fa7cb34b4a6c306f6057f99778073438",{"filePath":"609","messages":"610","suppressedMessages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612"},"82b88c3160ebe28f7e3d32339f593d5e",{"filePath":"613","messages":"614","suppressedMessages":"615","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b4530f17fbce2c959e9a071a567f465b",{"filePath":"616","messages":"617","suppressedMessages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"619"},"c13c76073f6786dd423f491469683a8b",{"filePath":"620","messages":"621","suppressedMessages":"622","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623"},"bbc24a7fad72d1eaad921ad2aefa8fde",{"filePath":"624","messages":"625","suppressedMessages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"977b97b1e19566e87b013f5876b2f317",{"filePath":"627","messages":"628","suppressedMessages":"629","errorCount":6,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630"},"57fb67de98a656b58e6fa14b3bbd2346",{"filePath":"631","messages":"632","suppressedMessages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bd3957fbf4e457019261b9ebd38c041e",{"filePath":"634","messages":"635","suppressedMessages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"637"},"9650669334ea72b6f412c62beda618ab",{"filePath":"638","messages":"639","suppressedMessages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"50b954401e7295a38126dd4247182140",{"filePath":"641","messages":"642","suppressedMessages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"644"},"3f3999b00ffd9bbc917aa97a98e91b78",{"filePath":"645","messages":"646","suppressedMessages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f4acafbbfb4f757a5e69b75eb245668a",{"filePath":"648","messages":"649","suppressedMessages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"32ff4238f7f16426f8e35c895b3b09f4",{"filePath":"651","messages":"652","suppressedMessages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"654"},"8e554ddd7ada87e9c9a281acf2f32c6b",{"filePath":"655","messages":"656","suppressedMessages":"657","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"658"},"1a44d5ecb762ae2e697d4edd16e852d1",{"filePath":"659","messages":"660","suppressedMessages":"661","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662"},"f2885917b4be0a4113ce60887ec58ce8",{"filePath":"663","messages":"664","suppressedMessages":"665","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666"},"2ef2a4fa153d7e9de8653965818e108a",{"filePath":"667","messages":"668","suppressedMessages":"669","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d7f211ec2b0945dd29b885f1bd2fb72a",{"filePath":"670","messages":"671","suppressedMessages":"672","errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673"},"09d4462a4a5e2ccc32650d392eac1fd6",{"filePath":"674","messages":"675","suppressedMessages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"40cf842f369c907ae97baa0f9a1fb6f1",{"filePath":"677","messages":"678","suppressedMessages":"679","errorCount":7,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680"},"dc47eef1e600b82d9c0648706840ec77",{"filePath":"681","messages":"682","suppressedMessages":"683","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"39ba93642d557e6b586e6b3723d26e21",{"filePath":"684","messages":"685","suppressedMessages":"686","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687"},"a26f2557632fffeab428efb2de05302c",{"filePath":"688","messages":"689","suppressedMessages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d9ebce1150a77b3a8b1e8f48fd9d5efd",{"filePath":"691","messages":"692","suppressedMessages":"693","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"694"},"8f5841f38d53d4f59151468e648efb5e",{"filePath":"695","messages":"696","suppressedMessages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ff3917323d251dfc9e015e8ec9c66126",{"filePath":"698","messages":"699","suppressedMessages":"700","errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"701"},"deabb835f68e4dc4ff17a4c1d62c0e4f",{"filePath":"702","messages":"703","suppressedMessages":"704","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705"},"d2eba24aaa2fedbd106400ffea759e8e",{"filePath":"706","messages":"707","suppressedMessages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"896dc02a0a9274a669a51c3085cc6c65",{"filePath":"709","messages":"710","suppressedMessages":"711","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712"},"7d43eb66bc001d1604eae658aceeebcd",{"filePath":"713","messages":"714","suppressedMessages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ca9adb74dfc9ec8ff45145e869428e56",{"filePath":"716","messages":"717","suppressedMessages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"719"},"0f774cf558e82bd5cdbfe133e600fd3a",{"filePath":"720","messages":"721","suppressedMessages":"722","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c1cb5746504d8dfebd8102f76098b2cb",{"filePath":"723","messages":"724","suppressedMessages":"725","errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726"},"644e15f69d80c88755520146477e323c",{"filePath":"727","messages":"728","suppressedMessages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ac7e675b63b00fc9a107b250ead1601f",{"filePath":"730","messages":"731","suppressedMessages":"732","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"733"},"aea5c8701d0fc0de3e39b38f1ca22051",{"filePath":"734","messages":"735","suppressedMessages":"736","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2e46b17cbf5a910a60cad5f4cd516bf9",{"filePath":"737","messages":"738","suppressedMessages":"739","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740"},"7b2b47bb0f4bd2e7ce9cf06d44dd6695",{"filePath":"741","messages":"742","suppressedMessages":"743","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"744"},"740febf6c1349240e4d0a3847b5af810",{"filePath":"745","messages":"746","suppressedMessages":"747","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3c70db6a7ab9c0dbfb5a02cdb672924d",{"filePath":"748","messages":"749","suppressedMessages":"750","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"751"},"50c46143f276e39641d104acbe6063c9",{"filePath":"752","messages":"753","suppressedMessages":"754","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5e6b97e0488a7f72b6f1bed425b052e1",{"filePath":"755","messages":"756","suppressedMessages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a22f3eaa39868c83411c9d43edc8a0be",{"filePath":"758","messages":"759","suppressedMessages":"760","errorCount":1,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761"},"e75fa8c241037eea47ed41ab93b585b6",{"filePath":"762","messages":"763","suppressedMessages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"94e454f0093772eb4aa74381628e497d",{"filePath":"765","messages":"766","suppressedMessages":"767","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11f31ea941b8929b89acfda64b8f56f0",{"filePath":"768","messages":"769","suppressedMessages":"770","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"771"},"e8530d4b6cfe4c4bb1579f32a759472a",{"filePath":"772","messages":"773","suppressedMessages":"774","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"74e45f4c0f7925cd016bbbd5c8d09dd8",{"filePath":"775","messages":"776","suppressedMessages":"777","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778"},"f62a5436db83c23a4d5ba9c082874533",{"filePath":"779","messages":"780","suppressedMessages":"781","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a95836cda5d01d1f39735e2f405ca2a4",{"filePath":"782","messages":"783","suppressedMessages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"114df1c2d0a02ebeff087a68d95d8efd",{"filePath":"785","messages":"786","suppressedMessages":"787","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"03b2848d6bbdcb0e84e97ba9efe60476",{"filePath":"788","messages":"789","suppressedMessages":"790","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"791"},"e923bcf0ba25d469f12087549da1457a",{"filePath":"792","messages":"793","suppressedMessages":"794","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"0ce25a124a22d0a7055a67b8ed6d513a",{"filePath":"795","messages":"796","suppressedMessages":"797","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"798"},"b3ab509bd9f223f77431c9d599add5fd",{"filePath":"799","messages":"800","suppressedMessages":"801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"05f9915495413bfae000b1c2c08fab7a",{"filePath":"802","messages":"803","suppressedMessages":"804","errorCount":5,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"805"},"3de1248991db0530b8d5469019181ff4",{"filePath":"806","messages":"807","suppressedMessages":"808","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c0f6e7d8dee372b96b69b9690e69d7dd",{"filePath":"809","messages":"810","suppressedMessages":"811","errorCount":5,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"812"},"4c6df85b333c1f697a0acafb6f45bf77",{"filePath":"813","messages":"814","suppressedMessages":"815","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3fe4c5f2a3f0426d28a43806d1dd2a65",{"filePath":"816","messages":"817","suppressedMessages":"818","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a9bc6a13f5ba16781f61a779f36d05e7",{"filePath":"819","messages":"820","suppressedMessages":"821","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4a00ac2e5a6f5672a6e191f8edb6ff68",{"filePath":"822","messages":"823","suppressedMessages":"824","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"825"},"510064722da2f888008fbe2d4c723de2",{"filePath":"826","messages":"827","suppressedMessages":"828","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4a2903a6f67a8039825cf85cf0d9b94a",{"filePath":"829","messages":"830","suppressedMessages":"831","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15e7b9fe18c065aaa47be4a2bbba0c8a",{"filePath":"832","messages":"833","suppressedMessages":"834","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"835"},"eb9bb2986e16393053d561241acf7a2b",{"filePath":"836","messages":"837","suppressedMessages":"838","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"03353c4049c26e8ee434b311e1aecd6e",{"filePath":"839","messages":"840","suppressedMessages":"841","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b7408e59f79ec1755d11be525178a71f",{"filePath":"842","messages":"843","suppressedMessages":"844","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8fc2c9b55faa4df16ba5806587dd6d0c",{"filePath":"845","messages":"846","suppressedMessages":"847","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"848"},"1c2a87ada0cd25b634be417e2eafc9e0",{"filePath":"849","messages":"850","suppressedMessages":"851","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6c514303356889842d96918288639b2d",{"filePath":"852","messages":"853","suppressedMessages":"854","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"855"},"6253111666c2517e94568a9e459368fb",{"filePath":"856","messages":"857","suppressedMessages":"858","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6d2b1f938d2d06571f3a6d02b646585f",{"filePath":"859","messages":"860","suppressedMessages":"861","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"862"},"5902e8e7d99f9edebe9d9b60f5353838",{"filePath":"863","messages":"864","suppressedMessages":"865","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e7ad1fa3e26ea344fcf606c37bad426c",{"filePath":"866","messages":"867","suppressedMessages":"868","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"0fbdb4a29746908a76cdbc5a16ee3e3f",{"filePath":"869","messages":"870","suppressedMessages":"871","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"872"},"ed1290171626490b509cb0d2636ea68f",{"filePath":"873","messages":"874","suppressedMessages":"875","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"876"},"b05cfc30c02e52cb03a396841314ef6e",{"filePath":"877","messages":"878","suppressedMessages":"879","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"880"},"b1730332dd243b0d4674e4397e4389b9",{"filePath":"881","messages":"882","suppressedMessages":"883","errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"884"},"cb947715576a4b4db3cfb8557effc7a3",{"filePath":"885","messages":"886","suppressedMessages":"887","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"888"},"357259131e2e3f5e549d3109e348fde3",{"filePath":"889","messages":"890","suppressedMessages":"891","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c5270035253818992644280078ba51ce",{"filePath":"892","messages":"893","suppressedMessages":"894","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"895"},"20f60ade205e53341c7b2703737e06c0",{"filePath":"896","messages":"897","suppressedMessages":"898","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"899"},"b66e504786b3c148cdb4dbd3d2a9f24b",{"filePath":"900","messages":"901","suppressedMessages":"902","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903"},"c464ac5944f04e71ee4834313aa5026b",{"filePath":"904","messages":"905","suppressedMessages":"906","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"907"},"9e513870d45e60321fd860d93675a820",{"filePath":"908","messages":"909","suppressedMessages":"910","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"911"},"c639ce51c2bb47cf7447acc6e7c38113",{"filePath":"912","messages":"913","suppressedMessages":"914","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"915"},"b3462fc23a06a120c4188143910708dd",{"filePath":"916","messages":"917","suppressedMessages":"918","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"919"},"f643517d430ffb4392efe8c1a3dbaf9d",{"filePath":"920","messages":"921","suppressedMessages":"922","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"923"},"4ce961570c2e6f4da3327e1068abeee3",{"filePath":"924","messages":"925","suppressedMessages":"926","errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"927"},"5b2417f91edc7e2ca70efc91f8925913",{"filePath":"928","messages":"929","suppressedMessages":"930","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"931"},"a42b3c0af4de93ed596fe5bcb473fd98",{"filePath":"932","messages":"933","suppressedMessages":"934","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"935"},"ffa5760cb02df167a721d0472f20789e",{"filePath":"936","messages":"937","suppressedMessages":"938","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"939"},"b6df47a1bbed512008766e18d03f0f5f",{"filePath":"940","messages":"941","suppressedMessages":"942","errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"943"},"6383f2253350f3b1255053fb340865a9",{"filePath":"944","messages":"945","suppressedMessages":"946","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/actions/Actions.tsx",["947","948"],[],"import { Box, Flex } from '@qiwi/pijma-core'\nimport React, { Children, FC, ReactNode } from 'react'\n\nexport interface ActionsProps {\n  size: 'accent' | 'normal' | 'minor'\n  vertical?: boolean\n  children?: ReactNode\n}\n\nconst margin: { [size in ActionsProps['size']]: number } = {\n  accent: 6,\n  normal: 5,\n  minor: 4,\n}\n\nexport const Actions: FC<ActionsProps> = (props) => {\n  const elements = Children.toArray(props.children).filter((child) => !!child)\n  if (elements.length === 0) {\n    return null\n  }\n  const content = Children.map(elements, (child: ReactNode, key: number) => (\n    <Box\n      key={key}\n      width={1}\n      maxWidth={1}\n      mt={key === 0 || !props.vertical ? undefined : margin[props.size]}\n      ml={key === 0 || props.vertical ? undefined : margin[props.size]}\n      children={child}\n    />\n  ))\n  if (props.vertical) {\n    return <Box display=\"inline-block\" maxWidth={1} children={content} />\n  }\n  return (\n    <Flex\n      display=\"inline-flex\"\n      align=\"center\"\n      maxWidth={1}\n      children={content}\n    />\n  )\n}\n\nActions.displayName = 'Actions'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/actions/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/alert/Alert.tsx",["949","950","951"],[],"import {\n  AlertControl,\n  Box,\n  Flex,\n  FlexItem,\n  Icon,\n  IconProps,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { Link } from '../link'\nimport { Paragraph } from '../typography'\n\nexport interface AlertProps {\n  text: string\n  type: 'success' | 'warning' | 'failure' | 'general'\n  action?: string\n  onHide?: () => void\n  onClick?: () => void\n}\n\nconst AlertIconColor: Record<NonNullable<AlertProps['type']>, string> = {\n  success: '#4bbd5c',\n  warning: '#ff8c00',\n  failure: '#d0021b',\n  general: '#666666',\n}\n\nconst AlertIconName: Record<\n  NonNullable<AlertProps['type']>,\n  IconProps['name']\n> = {\n  success: 'success',\n  warning: 'warning',\n  failure: 'attention',\n  general: 'info',\n}\n\nexport const Alert: FC<AlertProps> = ({\n  type = 'general',\n  text,\n  action,\n  onHide,\n  onClick,\n}) => (\n  <AlertControl\n    onHide={onHide}\n    children={(renderProps) => (\n      <Flex minHeight={16} py={5}>\n        <FlexItem>\n          <Icon name={AlertIconName[type]} color={AlertIconColor[type]} />\n        </FlexItem>\n        <FlexItem overflow=\"hidden\" mx={4}>\n          <Paragraph children={text} />\n          {action ? (\n            <Box mt={1}>\n              <Paragraph>\n                <Link bold onClick={onClick} children={action} />\n              </Paragraph>\n            </Box>\n          ) : null}\n        </FlexItem>\n        {onHide ? (\n          <FlexItem\n            ml=\"auto\"\n            cursor=\"pointer\"\n            opacity={renderProps.hover ? 0.7 : 1}\n            transition=\"all 300ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n            onClick={renderProps.onClick}\n            onMouseMove={renderProps.onMouseEnter}\n            onMouseOut={renderProps.onMouseLeave}\n          >\n            <Icon name=\"cross-small\" color=\"#666666\" />\n          </FlexItem>\n        ) : null}\n      </Flex>\n    )}\n  />\n)\n\nAlert.displayName = 'Alert'\n\nAlert.defaultProps = {\n  type: 'general',\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/alert/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/alert-block/AlertBlock.tsx",["952","953","954"],[],"import {\n  AlertBlockControl,\n  Block,\n  Breaker,\n  Card,\n  FlexItem,\n  FlexPos,\n  Icon,\n  IconProps,\n  Pos,\n} from '@qiwi/pijma-core'\nimport React, { FC, isValidElement, ReactNode } from 'react'\n\nimport { Paragraph } from '../typography'\n\nexport interface AlertBlockProps {\n  type: 'success' | 'warning' | 'waiting' | 'failure' | 'info' | 'promo'\n  icon?: ReactNode\n  children?: ReactNode\n  onHide?: () => void\n}\n\nconst AlertBlockBackground: Record<\n  NonNullable<AlertBlockProps['type']>,\n  string\n> = {\n  success: '#EDF8EF',\n  waiting: '#FFF8E6',\n  warning: '#FF8C001A',\n  failure: '#FAE6E8',\n  info: '#F5F5F5',\n  promo: '#2D3540',\n}\n\nconst AlertBlockIcon: Record<\n  NonNullable<AlertBlockProps['type']>,\n  IconProps & { bg: string }\n> = {\n  success: { name: 'success', color: '#4BBD5C', bg: '#fff' },\n  waiting: { name: 'clock-solid', color: '#FFB800', bg: '#fff' },\n  warning: { name: 'attention', color: '#FF8C00', bg: '#fff' },\n  failure: { name: 'attention', color: '#D0021B', bg: '#fff' },\n  info: { name: 'info', color: '#E6E6E6', bg: '#666666' },\n  promo: { name: 'success', color: '#4BBD5C', bg: '#fff' },\n}\n\nexport const AlertBlock: FC<AlertBlockProps> = ({\n  children,\n  icon,\n  type,\n  onHide,\n}) => {\n  const iconComponent = isValidElement(icon) ? (\n    icon\n  ) : (icon === undefined ? (\n    <Pos type=\"relative\">\n      <Pos type=\"absolute\" top=\"4px\" left=\"4px\">\n        <Card bg={AlertBlockIcon[type].bg} width={4} height={4} r={8} />\n      </Pos>\n      <Pos type=\"relative\">\n        <Icon\n          name={AlertBlockIcon[type].name}\n          size={6}\n          color={AlertBlockIcon[type].color}\n        />\n      </Pos>\n    </Pos>\n  ) : null)\n  return (\n    <AlertBlockControl\n      onHide={onHide}\n      children={(renderProps) => (\n        <Block bg={AlertBlockBackground[type]}>\n          <FlexPos\n            display=\"flex\"\n            type=\"relative\"\n            py={5}\n            pl={6}\n            pr={onHide === undefined ? 6 : 18}\n          >\n            <FlexItem mr={3}>{iconComponent}</FlexItem>\n            <FlexItem>\n              <Paragraph bold color={type === 'promo' ? 'inverse' : 'default'}>\n                <Breaker children={children} />\n              </Paragraph>\n            </FlexItem>\n            {onHide === undefined ? null : (\n              <Pos\n                cursor=\"pointer\"\n                type=\"absolute\"\n                right={6}\n                top={5}\n                onClick={renderProps.onCloseClick}\n                onMouseEnter={renderProps.onCloseMouseEnter}\n                onMouseLeave={renderProps.onCloseMouseLeave}\n                children={\n                  <Icon\n                    size={6}\n                    color={type === 'promo' ? '#999' : '#666'}\n                    name=\"cross-small\"\n                  />\n                }\n              />\n            )}\n          </FlexPos>\n        </Block>\n      )}\n    />\n  )\n}\n\nAlertBlock.displayName = 'AlertBlock'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/alert-block/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/annotation/Annotation.tsx",["955"],[],"import { Card } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nexport interface AnnotationProps {\n  children?: ReactNode\n}\n\nexport const Annotation: FC<AnnotationProps> = ({ children }) => (\n  <Card px={11} pt={11} pb={12} r={10} b=\"solid 1px #e6e6e6\">\n    {children}\n  </Card>\n)\n\nAnnotation.displayName = 'Annotation'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/annotation/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/block-accordion/BlockAccordion.tsx",["956","957"],[],"import {\n  AccordionControl,\n  Box,\n  Card,\n  Flex,\n  FlexItem,\n  Icon,\n} from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { Paragraph } from '../typography'\n\nexport interface BlockAccordionProps<I> {\n  items: I[]\n  opened: number[]\n  indent?: 's' | 'm' | 'l'\n  tabIndex?: number\n  onChange: (opened: number[]) => void\n}\n\nexport interface BlockAccordionItemModel {\n  title: string\n  content: ReactNode\n}\n\nconst BlockAccordionIndent: {\n  [indent in NonNullable<\n    BlockAccordionProps<BlockAccordionItemModel>['indent']\n  >]: number\n} = {\n  s: 8,\n  m: 11,\n  l: 17,\n}\n\nexport const BlockAccordion: FC<\n  BlockAccordionProps<BlockAccordionItemModel>\n> = ({ items, indent = 'm', tabIndex = 0, opened, onChange }) => (\n  <AccordionControl<BlockAccordionItemModel>\n    items={items}\n    opened={opened}\n    onChange={onChange}\n    children={(renderProps) => (\n      <Box py={3}>\n        {renderProps.items.map((item, index) => (\n          <Card\n            key={index}\n            s={\n              item.hovered || item.focused\n                ? '0 0 16px 0 rgba(0, 0, 0, 0.12)'\n                : (index > 0 &&\n                  !(\n                    renderProps.items[index - 1].hovered ||\n                    renderProps.items[index - 1].focused\n                  )\n                ? '0 -1px 0 #e6e6e6'\n                : undefined)\n            }\n            transition=\"box-shadow 100ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n            onMouseEnter={item.onMouseEnter}\n            onMouseLeave={item.onMouseLeave}\n          >\n            <Flex\n              tabIndex={tabIndex}\n              wrap=\"nowrap\"\n              justify=\"space-between\"\n              align=\"start\"\n              cursor=\"pointer\"\n              px={BlockAccordionIndent[indent]}\n              pt={4}\n              pb={item.opened ? 2 : 4}\n              onClick={item.onClick}\n              onFocus={item.onFocus}\n              onBlur={item.onBlur}\n              onKeyDown={renderProps.onKeyDown}\n            >\n              <Paragraph bold size=\"m\">\n                {item.title}\n              </Paragraph>\n              <FlexItem\n                shrink={0}\n                width={6}\n                height={6}\n                ml={3}\n                transform={`rotate(${item.opened ? 180 : 0}deg)`}\n                transition=\"transform 0.3s ease-in-out\"\n              >\n                <Icon name=\"angle-small-down\" />\n              </FlexItem>\n            </Flex>\n            <Box\n              px={BlockAccordionIndent[indent]}\n              pb={4}\n              display={item.opened ? 'block' : 'none'}\n            >\n              {typeof item.content === 'string' ? (\n                <Paragraph size=\"m\">{item.content}</Paragraph>\n              ) : (\n                item.content\n              )}\n            </Box>\n          </Card>\n        ))}\n      </Box>\n    )}\n  />\n)\n\nBlockAccordion.displayName = 'BlockAccordion'\n\nBlockAccordion.defaultProps = {\n  indent: 'm',\n  tabIndex: 0,\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/block-accordion/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/block-content/BlockContent.tsx",["958"],[],"import { Box } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nexport interface BlockContentProps {\n  indent?: 's' | 'm' | 'l'\n  children?: ReactNode\n}\n\nconst BlockContentIdent: {\n  [indent in NonNullable<BlockContentProps['indent']>]: string | number\n} = {\n  s: 8,\n  m: '44px 44px 48px',\n  l: '44px 68px 48px',\n}\n\nexport const BlockContent: FC<BlockContentProps> = ({\n  indent = 'm',\n  children,\n}) => <Box p={BlockContentIdent[indent]} children={children} />\n\nBlockContent.displayName = 'BlockContent'\n\nBlockContent.defaultProps = {\n  indent: 'm',\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/block-content/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/block-tabs/BlockTabs.tsx",["959","960","961","962"],[],"import {\n  Card,\n  Flex,\n  FlexItem,\n  IconProps,\n  Pos,\n  styled,\n  TabBorder,\n  TabHeader,\n  TabsControl,\n  Value,\n} from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { Paragraph } from '../typography'\n\nexport interface BlockTabsProps {\n  items: {\n    title: string\n    icon?: IconProps['name']\n    content?: ReactNode\n  }[]\n  select?: number\n  tabIndex?: number\n  vertical?: boolean\n  centered?: boolean\n  hr?: boolean\n  indent?: 's' | 'm' | 'l'\n  pt?: Value\n  pb?: Value\n  stub?: boolean | boolean[]\n  onChange?: (selected: number) => void\n}\n\nconst BlockTabsIndent: Record<\n  NonNullable<BlockTabsProps['indent']>,\n  [Value, Value, Value, Value]\n> = {\n  s: [8, 8, 8, 8],\n  m: [11, 11, 12, 11],\n  l: [11, 17, 12, 17],\n}\n\nconst ContentIndent: Record<NonNullable<BlockTabsProps['indent']>, Value> = {\n  s: 4,\n  m: 6,\n  l: 6,\n}\n\nconst FlexOverflow = styled(Flex)({\n  '&::-webkit-scrollbar': {\n    display: 'none',\n  },\n  scrollbarWidth: 'none',\n  msOverflowStyle: 'none',\n  position: 'relative',\n})\n\nFlexOverflow.displayName = 'FlexOverflow'\n\nconst TabContent = styled(FlexItem)()\n\nTabContent.displayName = 'TabContent'\n\nexport const BlockTabs: FC<BlockTabsProps> = ({\n  items,\n  select = 0,\n  tabIndex = 0,\n  vertical = false,\n  centered = false,\n  stub = false,\n  hr = true,\n  indent = 'm',\n  pt,\n  pb,\n  onChange,\n}) =>\n  stub ? (\n    <Pos type=\"relative\">\n      <Flex\n        direction=\"column\"\n        pt={pt === undefined ? BlockTabsIndent[indent][0] : pt}\n        pr={BlockTabsIndent[indent][1]}\n        pb={pb === undefined ? BlockTabsIndent[indent][2] : pb}\n        pl={BlockTabsIndent[indent][3]}\n      >\n        <FlexOverflow\n          direction=\"row\"\n          overflow=\"auto\"\n          justify={centered ? 'space-between' : 'flex-start'}\n        >\n          {(Array.isArray(stub) ? stub : [true, true, true]).map(\n            (icon, index, arr) => (\n              <TabHeader\n                key={index}\n                title=\"stub\"\n                indent={index === arr.length - 1 ? 0 : 5}\n                wrap={!centered}\n                tabIndex={-1}\n                icon={icon ? 'qiwi' : undefined}\n                vertical={vertical}\n                select={false}\n                width={centered ? 1 : undefined}\n                stub\n              />\n            ),\n          )}\n          <TabBorder\n            width={centered ? 'calc(33% - 20px)' : (vertical ? 13 : 21)}\n            left={0}\n            radius={hr}\n            stub\n          />\n        </FlexOverflow>\n        <FlexItem>\n          {hr ? (\n            <Pos type=\"absolute\" width={1} left={0} zIndex={0}>\n              <Card mt=\"-1px\" bg=\"#e6e6e6\" width={1} height=\"1px\" />\n            </Pos>\n          ) : null}\n        </FlexItem>\n        <FlexItem mt={4}>\n          <Paragraph stub />\n        </FlexItem>\n      </Flex>\n    </Pos>\n  ) : (\n    <TabsControl\n      select={select}\n      length={items.length}\n      onChange={onChange}\n      children={(renderProps) => (\n        <Pos type=\"relative\">\n          <Flex\n            direction=\"column\"\n            pt={pt === undefined ? BlockTabsIndent[indent][0] : pt}\n            pr={BlockTabsIndent[indent][1]}\n            pb={pb === undefined ? BlockTabsIndent[indent][2] : pb}\n            pl={BlockTabsIndent[indent][3]}\n          >\n            <FlexOverflow\n              direction=\"row\"\n              overflow=\"auto\"\n              justify={centered ? 'space-between' : 'flex-start'}\n            >\n              {renderProps.items.map((item, index) => (\n                <TabHeader\n                  key={index}\n                  title={items[index].title}\n                  indent={index === items.length - 1 ? 0 : 5}\n                  wrap={!centered}\n                  tabIndex={tabIndex}\n                  icon={items[index].icon}\n                  vertical={vertical}\n                  select={item.select}\n                  focus={item.focus}\n                  width={centered ? 1 : undefined}\n                  ref={item.ref}\n                  onFocus={item.onFocus}\n                  onBlur={item.onBlur}\n                  onMouseEnter={item.onMouseEnter}\n                  onMouseLeave={item.onMouseLeave}\n                  onKeyDown={renderProps.onKeyDown}\n                  onClick={item.onClick}\n                />\n              ))}\n              <TabBorder\n                width={`${renderProps.borderWidth}px`}\n                left={`${renderProps.borderLeft}px`}\n                radius={hr}\n              />\n            </FlexOverflow>\n            {hr ? (\n              <FlexItem>\n                <Pos type=\"absolute\" width={1} left={0} zIndex={0}>\n                  <Card mt=\"-1px\" bg=\"#e6e6e6\" width={1} height=\"1px\" />\n                </Pos>\n              </FlexItem>\n            ) : null}\n            {items.map(({ content }, index) => (\n              <TabContent\n                key={index}\n                display={select === index ? 'block' : 'none'}\n                pt={ContentIndent[indent]}\n                children={content}\n              />\n            ))}\n          </Flex>\n        </Pos>\n      )}\n    />\n  )\n\nBlockTabs.displayName = 'BlockTabs'\n\nBlockTabs.defaultProps = {\n  select: 0,\n  tabIndex: 0,\n  vertical: false,\n  centered: false,\n  stub: false,\n  hr: true,\n  indent: 'm',\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/block-tabs/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/breadcrumbs/Breadcrumbs.tsx",["963","964"],[],"import { Box } from '@qiwi/pijma-core'\nimport React, { FC, Fragment } from 'react'\n\nimport { NavLink, NavLinkProps } from '../nav-link'\nimport { Paragraph } from '../typography'\n\nexport interface BreadcrumbsProps {\n  children?: NavLinkProps[]\n  stub?: boolean\n}\n\nexport const Breadcrumbs: FC<BreadcrumbsProps> = ({\n  children = [],\n  stub = false,\n}) =>\n  stub ? (\n    <Box maxWidth={12} width={1}>\n      <NavLink stub />\n    </Box>\n  ) : (\n    <Paragraph size=\"s\" color=\"support\">\n      {children.map((item, i) => (\n        <Fragment key={i}>\n          {i > 0 ? (\n            <Fragment>\n              <Box as=\"span\" mx={2} display=\"inline\">\n                &#8226;\n              </Box>\n              &shy;\n            </Fragment>\n          ) : null}\n          <NavLink {...item} />\n        </Fragment>\n      ))}\n    </Paragraph>\n  )\n\nBreadcrumbs.displayName = 'Breadcrumbs'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/breadcrumbs/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/button/Button.tsx",["965","966","967","968","969","970","971","972"],[],"import {\n  Btn,\n  ButtonControl,\n  Card,\n  Flex,\n  FlexItem,\n  Pos,\n  Spinner,\n  Stub,\n  Typo,\n  useTheme,\n} from '@qiwi/pijma-core'\nimport React, { cloneElement, FC, Fragment, ReactElement } from 'react'\n\nexport interface ButtonProps {\n  onClick?: () => void\n  onFocus?: () => void\n  onBlur?: () => void\n  tabIndex?: number\n  disabled?: boolean\n  kind: 'brand' | 'simple'\n  size: 'accent' | 'normal' | 'minor'\n  type: 'button' | 'submit'\n  text?: string\n  icon?: ReactElement\n  loading?: boolean\n  stub?: boolean\n  radius?: number\n}\n\nconst buttonRadius: { [size in ButtonProps['size']]: number } = {\n  accent: 30,\n  normal: 24,\n  minor: 20,\n}\n\nconst buttonSize: { [size in ButtonProps['size']]: number } = {\n  accent: 15,\n  normal: 12,\n  minor: 10,\n}\n\nconst buttonMinWith: { [size in ButtonProps['size']]: number } = {\n  accent: 50,\n  normal: 37.5,\n  minor: 25,\n}\n\nconst contextPaddingX: { [size in ButtonProps['size']]: number } = {\n  accent: 9,\n  normal: 8,\n  minor: 7,\n}\n\nconst textSize: { [size in ButtonProps['size']]: number } = {\n  accent: 5,\n  normal: 4,\n  minor: 3.5,\n}\n\nconst textHeight: { [size in ButtonProps['size']]: number } = {\n  accent: 7,\n  normal: 5,\n  minor: 4,\n}\n\nconst stubHeight: { [size in ButtonProps['size']]: number } = {\n  accent: 3,\n  normal: 2,\n  minor: 2,\n}\n\nconst stubWidth: { [size in ButtonProps['size']]: number } = {\n  accent: 23,\n  normal: 21,\n  minor: 19,\n}\n\nexport const Button: FC<ButtonProps> = (props) => {\n  const theme = useTheme()\n\n  return props.stub ? (\n    <Card\n      width={!props.icon || props.text ? 1 : buttonSize[props.size]}\n      height={buttonSize[props.size]}\n      minWidth={props.text ? buttonMinWith[props.size] : undefined}\n      bg={theme.button.bg.kind.simple}\n      b={theme.button.border.kind.simple}\n      r={props.radius ?? buttonRadius[props.size]}\n    >\n      <Flex\n        align=\"center\"\n        justify=\"center\"\n        width={1}\n        height={1}\n        px={props.icon && !props.text ? 0 : contextPaddingX[props.size]}\n      >\n        <Fragment>\n          {props.icon ? (\n            <FlexItem shrink={0} mr={props.text ? 3 : 0} width={6} height={6}>\n              <Stub\n                top={0.5}\n                right={0.5}\n                bottom={0.5}\n                left={0.5}\n                width={5}\n                height={5}\n                r={10}\n              />\n            </FlexItem>\n          ) : null}\n          {props.text || !props.icon ? (\n            <Stub\n              width={stubWidth[props.size] - (props.icon ? 9 : 0)}\n              height={stubHeight[props.size]}\n            />\n          ) : null}\n        </Fragment>\n      </Flex>\n    </Card>\n  ) : (\n    <ButtonControl\n      onClick={props.onClick}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      children={(renderProps) => (\n        <Btn\n          disabled={props.disabled}\n          type={props.type}\n          width={!props.icon || props.text ? 1 : buttonSize[props.size]}\n          height={buttonSize[props.size]}\n          minWidth={props.text ? buttonMinWith[props.size] : undefined}\n          bg={\n            props.disabled\n              ? '#e6e6e6'\n              : (renderProps.hover || renderProps.focus\n              ? theme.button.bg.hover[props.kind]\n              : props.size === 'accent'\n              ? theme.button.bg.accent[props.kind]\n              : theme.button.bg.kind[props.kind])\n          }\n          b={\n            props.disabled\n              ? 'none'\n              : (renderProps.hover || renderProps.focus\n              ? theme.button.border.hover[props.kind]\n              : theme.button.border.kind[props.kind])\n          }\n          r={props.radius ?? buttonRadius[props.size]}\n          s={\n            props.disabled\n              ? 'none'\n              : ((renderProps.hover || renderProps.focus) &&\n                props.size === 'accent'\n              ? theme.button.shadow.hover[props.kind]\n              : props.size === 'accent'\n              ? theme.button.shadow.kind[props.kind]\n              : 'none')\n          }\n          transition=\"box-shadow 300ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n          onClick={renderProps.onClick}\n          onFocus={renderProps.onFocus}\n          onBlur={renderProps.onBlur}\n          onMouseEnter={renderProps.onMouseEnter}\n          onMouseLeave={renderProps.onMouseLeave}\n          children={\n            <Pos\n              type=\"relative\"\n              width={1}\n              height={1}\n              cursor={props.disabled ? 'not-allowed' : 'pointer'}\n              children={\n                <Flex\n                  align=\"center\"\n                  justify=\"center\"\n                  width={1}\n                  height={1}\n                  px={\n                    props.icon && !props.text ? 0 : contextPaddingX[props.size]\n                  }\n                  transition=\"all 300ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n                  children={\n                    <Fragment>\n                      <Pos\n                        type=\"absolute\"\n                        top={0}\n                        right={0}\n                        bottom={0}\n                        left={0}\n                        opacity={\n                          props.loading\n                            ? (renderProps.hover ||\n                              renderProps.active ||\n                              renderProps.focus\n                              ? 0.9\n                              : 1)\n                            : 0\n                        }\n                        transition=\"all 300ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n                        children={\n                          <Flex\n                            align=\"center\"\n                            justify=\"center\"\n                            width={1}\n                            height={1}\n                            children={\n                              <Spinner\n                                paused={!props.loading}\n                                width={6}\n                                height={6}\n                                color={\n                                  props.disabled\n                                    ? '#666'\n                                    : theme.button.text.color[props.kind]\n                                }\n                              />\n                            }\n                          />\n                        }\n                      />\n                      {props.icon ? (\n                        <FlexItem\n                          shrink={0}\n                          opacity={\n                            props.loading\n                              ? 0\n                              : (renderProps.hover ||\n                                renderProps.active ||\n                                renderProps.focus\n                              ? 0.9\n                              : 1)\n                          }\n                          mr={props.text ? 3 : 0}\n                          width={6}\n                          height={6}\n                          transition=\"all 300ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n                          transform=\"translateZ(0)\"\n                          children={cloneElement(props.icon, {\n                            color: props.disabled\n                              ? '#666'\n                              : (props.kind === 'brand'\n                              ? '#fff'\n                              : '#000'),\n                            size: 1,\n                          })}\n                        />\n                      ) : null}\n                      {props.text || !props.icon ? (\n                        <FlexItem\n                          opacity={\n                            props.loading\n                              ? 0\n                              : (renderProps.hover ||\n                                renderProps.active ||\n                                renderProps.focus\n                              ? 0.9\n                              : 1)\n                          }\n                          overflow=\"hidden\"\n                          transition=\"all 300ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n                          children={\n                            <Typo\n                              nowrap={true}\n                              display=\"block\"\n                              weight={500}\n                              color={\n                                props.disabled\n                                  ? '#666'\n                                  : theme.button.text.color[props.kind]\n                              }\n                              size={textSize[props.size]}\n                              height={textHeight[props.size]}\n                              transition=\"all 300ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n                              children={props.text}\n                            />\n                          }\n                        />\n                      ) : null}\n                    </Fragment>\n                  }\n                />\n              }\n            />\n          }\n        />\n      )}\n    />\n  )\n}\n\nButton.displayName = 'Button'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/button/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/checkbox/Checkbox.tsx",["973"],[],"import {\n  Box,\n  Check,\n  OptionField,\n  OptionFieldItem,\n  SwitchControl,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { CheckboxProps } from './CheckboxProps'\n\nexport const Checkbox: FC<CheckboxProps> = (props) => (\n  <SwitchControl\n    disabled={props.disabled}\n    checked={props.checked}\n    onChange={props.onChange}\n    children={(renderProps) => (\n      <OptionField\n        tabIndex={props.tabIndex}\n        onFocus={renderProps.onFocus}\n        onBlur={renderProps.onBlur}\n        onKeyDown={renderProps.onKeyDown}\n        children={\n          <OptionFieldItem\n            disabled={props.disabled}\n            label={props.label}\n            description={props.description}\n            icon={\n              <Box width={6}>\n                <Check\n                  disabled={props.disabled}\n                  checked={props.checked}\n                  focused={renderProps.focused}\n                />\n              </Box>\n            }\n            onClick={renderProps.onClick}\n            onMouseEnter={renderProps.onMouseEnter}\n            onMouseLeave={renderProps.onMouseLeave}\n          />\n        }\n      />\n    )}\n  />\n)\n\nCheckbox.displayName = 'Checkbox'\n\nCheckbox.defaultProps = {\n  tabIndex: 0,\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/checkbox/CheckboxProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/checkbox/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/checkbox-field/CheckboxField.tsx",["974","975","976","977","978","979"],[],"import {\n  Box,\n  Check,\n  CheckboxControl,\n  Flex,\n  OptionControl,\n  OptionField,\n  OptionFieldItem,\n  Spacer,\n  Stub,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { CheckboxFieldOptionModel } from './CheckboxFieldOptionModel'\nimport { CheckboxFieldProps } from './CheckboxFieldProps'\n\nexport const CheckboxField: FC<\n  CheckboxFieldProps<CheckboxFieldOptionModel<any>, any>\n> = (props) =>\n  props.stub ? (\n    <Box maxWidth={1}>\n      <Stub width={24} height={3} top={2} bottom={4} />\n      <Spacer size=\"s\">\n        {[33, 38, 30].map((width: number, id: number) => (\n          <Flex key={id} align=\"center\">\n            <Stub width={5} height={5} right={3} left={0.5} />\n            <Box width={width} maxWidth={1}>\n              <Stub width={1} height={2} top={2} bottom={2} />\n            </Box>\n          </Flex>\n        ))}\n      </Spacer>\n    </Box>\n  ) : (\n    <CheckboxControl<CheckboxFieldOptionModel<any>, any>\n      tabIndex={props.tabIndex}\n      options={props.options}\n      values={props.values}\n      equals={props.equals}\n      onChange={props.onChange}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      children={(renderProps) => (\n        <OptionField\n          title={props.title}\n          hint={props.hint}\n          help={props.help}\n          tabIndex={renderProps.tabIndex}\n          autoFocus={props.autoFocus}\n          onFocus={renderProps.onFocus}\n          onBlur={renderProps.onBlur}\n          onKeyDown={renderProps.onKeyDown}\n          children={renderProps.options.map((option, index) => (\n            <OptionControl<any>\n              key={index}\n              disabled={option.disabled}\n              value={option.value}\n              onClick={option.onClick}\n              onMouseEnter={option.onMouseEnter}\n              onMouseLeave={renderProps.onMouseLeave}\n              children={(renderOptionProps) => (\n                <OptionFieldItem\n                  disabled={option.disabled}\n                  icon={\n                    <Box width={6}>\n                      <Check\n                        disabled={option.disabled}\n                        checked={option.checked}\n                        focused={option.focused}\n                      />\n                    </Box>\n                  }\n                  label={option.label}\n                  description={option.description}\n                  onClick={renderOptionProps.onClick}\n                  onMouseLeave={renderOptionProps.onMouseLeave}\n                  onMouseEnter={renderOptionProps.onMouseEnter}\n                />\n              )}\n            />\n          ))}\n        />\n      )}\n    />\n  )\n\nCheckboxField.displayName = 'CheckboxField'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/checkbox-field/CheckboxFieldOptionModel.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/checkbox-field/CheckboxFieldProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/checkbox-field/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/code-field/CodeField.tsx",["980","981","982","983"],[],"import {\n  Box,\n  CodeFieldControl,\n  Flex,\n  FlexItem,\n  Input,\n  keyframes,\n  Stub,\n  Typo,\n} from '@qiwi/pijma-core'\nimport React, { FC, Fragment } from 'react'\n\nimport { CodeFieldProps } from './CodeFieldProps'\n\nconst animation = (count: number) =>\n  keyframes({\n    '0%': {\n      height: '48px',\n    },\n    [`${(1 / count) * 50}%`]: {\n      height: '40px',\n    },\n    [`${(1 / count) * 100}%`]: {\n      height: '48px',\n    },\n  })\n\nexport const CodeField: FC<CodeFieldProps> = ({\n  length = 4,\n  autoFocus = false,\n  loading = false,\n  type = 'tel',\n  ...props\n}) =>\n  props.stub ? (\n    <Fragment>\n      {new Array(length).fill('').map((_, index) => (\n        <Box ml={index === 0 ? 0 : 3} display=\"inline-block\" key={index}>\n          <Stub width={8} height={12} r={8} />\n        </Box>\n      ))}\n    </Fragment>\n  ) : (\n    <CodeFieldControl\n      value={props.value}\n      type={type}\n      autoFocus={autoFocus}\n      loading={loading}\n      onChange={props.onChange}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      onReady={props.onReady}\n      children={(renderProps) => (\n        <Box width={1} minHeight={12}>\n          <Flex>\n            {renderProps.values.map((item, index) => (\n              <FlexItem ml={index === 0 ? 0 : 3} align=\"top\" key={index}>\n                <Input\n                  name={props.name}\n                  tabIndex={index === 0 ? 0 : -1}\n                  cursor={props.disabled ? 'not-allowed' : undefined}\n                  animation={\n                    loading\n                      ? `${animation(props.value.length)} ${\n                          450 * props.value.length\n                        }ms ease-in-out ${450 * index}ms infinite`\n                      : undefined\n                  }\n                  autoFocus={autoFocus && index === 0}\n                  css={{ textAlign: 'center' }}\n                  bg=\"#F2F2F2\"\n                  b={item.focused && !loading ? '1px solid #CCCCCC' : undefined}\n                  autoComplete=\"off\"\n                  valueSize={5}\n                  valueWeight={400}\n                  width={8}\n                  height={12}\n                  r={8}\n                  type={type}\n                  disabled={props.disabled || loading}\n                  ref={item.ref}\n                  value={loading ? '' : props.value[index]}\n                  onChange={item.onChange}\n                  onClick={item.onClick}\n                  onFocus={item.onFocus}\n                  onBlur={item.onBlur}\n                  onKeyDown={item.onKeyDown}\n                />\n              </FlexItem>\n            ))}\n          </Flex>\n          {props.error ? (\n            <Box mt={5}>\n              <Typo\n                display=\"block\"\n                color=\"#d0021b\"\n                weight={300}\n                size={3.5}\n                height={5}\n                children={props.error}\n              />\n            </Box>\n          ) : null}\n        </Box>\n      )}\n    />\n  )\n\nCodeField.displayName = 'CodeField'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/code-field/CodeFieldProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/code-field/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/content-suggest/ContentSuggest.tsx",["984","985","986","987","988","989","990","991","992","993"],[],"import {\n  Box,\n  Card,\n  CardPos,\n  ContentInput,\n  Icon,\n  Image,\n  MenuControl,\n  Pos,\n  Spacer,\n  styled,\n  SuggestControl,\n} from '@qiwi/pijma-core'\nimport React, { Fragment } from 'react'\n\nimport { DropDown } from '../drop-down'\nimport { Link } from '../link'\nimport { MenuItem } from '../menu'\nimport { Paragraph } from '../typography'\nimport { ContentSuggestOptionModel } from './ContentSuggestOptionModel'\nimport { ContentSuggestProps } from './ContentSuggestProps'\n\nconst CardMenuItem = styled(Card)().withComponent(MenuItem)\n\nCardMenuItem.displayName = 'CardMenuItem'\n\nexport const ContentSuggest = <V extends {}>({\n  equals = (a: V, b: V) => a === b,\n  ...props\n}: ContentSuggestProps<ContentSuggestOptionModel<V>, V>) => (\n  <SuggestControl<V, ContentSuggestOptionModel<V>>\n    value={props.value}\n    suggest={props.suggest}\n    items={props.items}\n    total={props.total}\n    empty={props.empty}\n    equals={equals}\n    onRequest={props.onRequest}\n    onChange={props.onChange}\n    onBlur={props.onBlur}\n    onFocus={props.onFocus}\n    onSubmit={props.onSubmit}\n    onCancel={props.onCancel}\n    children={(renderProps) => (\n      <MenuControl\n        count={renderProps.items.length}\n        selected={renderProps.selected}\n        onSelect={renderProps.onItemSelect}\n        onKeyDown={renderProps.onItemKeyDown}\n        children={(menuRenderProps) => (\n          <CardPos\n            type=\"relative\"\n            ref={renderProps.containerRef}\n            width={1}\n            transition={`box-shadow ${\n              renderProps.focused ? 300 : 200\n            }ms cubic-bezier(0.4, 0.0, 0.2, 1)`}\n            s={\n              renderProps.focused ? '0 20px 64px 0 rgba(0, 0, 0, 0.16)' : 'none'\n            }\n            r={10}\n          >\n            <Box\n              width={1}\n              onMouseEnter={renderProps.onInputMouseEnter}\n              onMouseLeave={renderProps.onInputMouseLeave}\n            >\n              <ContentInput\n                value={props.suggest || ''}\n                tabIndex={props.tabIndex}\n                autoComplete={props.autoComplete}\n                autoFocus={props.autoFocus}\n                placeholder={props.placeholder}\n                maxLength={props.maxLength}\n                ref={renderProps.inputRef}\n                pr={14}\n                error={!!props.error}\n                focused={renderProps.focused}\n                norb={\n                  props.items !== undefined &&\n                  renderProps.focused &&\n                  (props.items.length > 0 ||\n                    props.empty !== undefined ||\n                    props.loading)\n                }\n                hovered={renderProps.hovered}\n                onChange={renderProps.onRequest}\n                onFocus={renderProps.onInputFocus}\n                onBlur={renderProps.onInputBlur}\n                onKeyDown={\n                  props.items !== undefined &&\n                  renderProps.focused &&\n                  (props.items.length > 0 || props.empty !== undefined)\n                    ? menuRenderProps.onKeyDown\n                    : renderProps.onItemKeyDown\n                }\n              />\n              <Pos\n                type=\"absolute\"\n                cursor=\"pointer\"\n                right={4}\n                top={3}\n                onClick={renderProps.onSearchClick}\n                children={<Icon name=\"search\" color=\"#666\" />}\n              />\n            </Box>\n            <DropDown\n              minWidth={1}\n              show={\n                props.items !== undefined &&\n                renderProps.focused &&\n                (props.items.length > 0 ||\n                  props.empty !== undefined ||\n                  props.loading === true)\n              }\n              rootClose={false}\n              container={() => renderProps.containerRef.current}\n              target={() => renderProps.inputRef.current!}\n              onHide={renderProps.onHide}\n            >\n              <Card\n                height={1}\n                minWidth={1}\n                r={10}\n                s=\"0 20px 20px 0 rgba(0, 0, 0, 0.16)\"\n              >\n                <CardPos\n                  type=\"relative\"\n                  width={1}\n                  height={1}\n                  maxHeight={98}\n                  bg=\"#fff\"\n                  r=\"0 0 10px 10px\"\n                  bt=\"solid 1px #e6e6e6\"\n                  ref={menuRenderProps.containerRef}\n                  overflow=\"auto\"\n                  py={3}\n                  onMouseDown={renderProps.onResultItemsMouseDown}\n                >\n                  {props.loading ? (\n                    Array.from({length: 4})\n                      .fill(1)\n                      .map((_item, key) => (\n                        <CardMenuItem\n                          key={key}\n                          icon={true}\n                          stub\n                          text=\"stub\"\n                          notes=\"stub\"\n                        />\n                      ))\n                  ) : (\n                    <Spacer size=\"s\">\n                      {menuRenderProps.items.length > 0 ? (\n                        <Fragment>\n                          {menuRenderProps.items.map((item, key) => (\n                            <CardMenuItem\n                              key={key}\n                              ref={item.ref}\n                              onClick={item.onClick}\n                              onMouseDown={item.onMouseDown}\n                              onMouseEnter={item.onMouseEnter}\n                              cursor=\"pointer\"\n                              text={renderProps.items[key].title}\n                              notes={renderProps.items[key].description}\n                              icon={\n                                <Image\n                                  width={6}\n                                  height={6}\n                                  src={renderProps.items[key].logo}\n                                />\n                              }\n                              hover={item.focused}\n                              active={item.selected}\n                              focus={item.selected}\n                            />\n                          ))}\n                        </Fragment>\n                      ) : null}\n                      {props.total && menuRenderProps.items.length > 0 ? (\n                        <Box px={4}>\n                          <Paragraph>\n                            {props.total.text}\n                            {props.total.link ? (\n                              <Fragment>\n                                {' '}\n                                <Link\n                                  onClick={renderProps.onTotalClick}\n                                  children={props.total.link.text}\n                                />\n                              </Fragment>\n                            ) : null}\n                          </Paragraph>\n                        </Box>\n                      ) : (props.empty && menuRenderProps.items.length === 0 ? (\n                        <Box px={4}>\n                          <Paragraph>\n                            {props.empty.text}\n                            {props.empty.link ? (\n                              <Fragment>\n                                {' '}\n                                <Link\n                                  onClick={renderProps.onEmptyClick}\n                                  children={props.empty.link.text}\n                                />\n                              </Fragment>\n                            ) : null}\n                          </Paragraph>\n                        </Box>\n                      ) : null)}\n                    </Spacer>\n                  )}\n                </CardPos>\n              </Card>\n            </DropDown>\n          </CardPos>\n        )}\n      />\n    )}\n  />\n)\n\nContentSuggest.displayName = 'ContentSuggest'\n\nContentSuggest.defaultProps = {\n  equals: (a: any, b: any) => a === b,\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/content-suggest/ContentSuggestOptionModel.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/content-suggest/ContentSuggestProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/content-suggest/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/details/Details.tsx",["994","995","996","997","998"],[],"import { Box, Pos, Value } from '@qiwi/pijma-core'\nimport React, { FC, ReactElement } from 'react'\n\nimport { Text } from '../typography'\n\ntype DetailsText = ReactElement | string\n\nexport interface DetailsProps {\n  children: {\n    title: DetailsText\n    content: DetailsText | DetailsText[]\n  }[]\n  dots?: boolean\n  titleWidth?: Value\n  contentWidth?: Value\n  size?: 's' | 'm' | 'l'\n  stub?: boolean | number[]\n}\n\nconst indentDots: { [size in NonNullable<DetailsProps['size']>]: string } = {\n  s: '6px',\n  m: '8px',\n  l: '8px',\n}\n\nconst bottomDots: { [size in NonNullable<DetailsProps['size']>]: string } = {\n  s: '5px',\n  m: '7px',\n  l: '9px',\n}\n\nexport const Details: FC<DetailsProps> = ({\n  children,\n  dots,\n  titleWidth,\n  contentWidth,\n  size = 'm',\n  stub = false,\n}) =>\n  stub ? (\n    <Box as=\"dl\" width=\"100%\" display=\"table\">\n      {(Array.isArray(stub) ? stub : [0.4, 0.5, 0.3]).map((width, i) => (\n        <Box css={{ display: 'table-row' }} key={`${i}`}>\n          <Box\n            as=\"dt\"\n            width={titleWidth || 0.5}\n            pt={i === 0 ? undefined : 4}\n            css={{\n              display: 'table-cell',\n              verticalAlign: 'bottom',\n            }}\n          >\n            {dots ? (\n              <Pos\n                type=\"relative\"\n                overflow=\"hidden\"\n                css={{\n                  ':after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    bottom: bottomDots[size],\n                    borderBottom: 'dashed 1px #e6e6e6',\n                    width: '100%',\n                    marginLeft: width * 100 + '%',\n                  },\n                }}\n              >\n                <Box width={width} pr={indentDots[size]}>\n                  <Text display=\"block\" size={size} stub />\n                </Box>\n              </Pos>\n            ) : (\n              <Box width={width}>\n                <Text display=\"block\" size={size} stub />\n              </Box>\n            )}\n          </Box>\n          <Box\n            as=\"dd\"\n            width={contentWidth || 0.5}\n            pt={i === 0 ? undefined : 4}\n            css={{\n              display: 'table-cell',\n              verticalAlign: 'bottom',\n            }}\n            pl={indentDots[size]}\n          >\n            <Box width={1 - width}>\n              <Text display=\"block\" size={size} stub />\n            </Box>\n          </Box>\n        </Box>\n      ))}\n    </Box>\n  ) : (\n    <Box as=\"dl\" width=\"100%\" display=\"table\">\n      {children.map((item, i) =>\n        ([] as DetailsText[]).concat(item.content).map((content, j) => (\n          <Box css={{ display: 'table-row' }} key={`${i}.${j}`}>\n            <Box\n              as=\"dt\"\n              width={titleWidth}\n              pt={j === 0 ? (i === 0 ? undefined : 4) : 2}\n              css={{\n                display: 'table-cell',\n                verticalAlign: 'bottom',\n              }}\n            >\n              {j === 0 ? (\n                dots ? (\n                  <Pos\n                    type=\"relative\"\n                    overflow=\"hidden\"\n                    css={{\n                      ':after': {\n                        content: '\"\"',\n                        position: 'absolute',\n                        bottom: bottomDots[size],\n                        borderBottom: 'dashed 1px #e6e6e6',\n                        width: '100%',\n                        marginLeft: indentDots[size],\n                      },\n                    }}\n                  >\n                    <Text\n                      bold={false}\n                      size={size}\n                      color=\"support\"\n                      children={item.title}\n                    />\n                  </Pos>\n                ) : (\n                  <Text\n                    color=\"support\"\n                    bold={false}\n                    size={size}\n                    children={item.title}\n                  />\n                )\n              ) : null}\n            </Box>\n            <Box\n              as=\"dd\"\n              width={contentWidth}\n              pt={j === 0 ? (i === 0 ? undefined : 4) : 2}\n              css={{\n                display: 'table-cell',\n                verticalAlign: 'bottom',\n              }}\n              pl={indentDots[size]}\n            >\n              <Text bold={false} size={size} children={content} />\n            </Box>\n          </Box>\n        )),\n      )}\n    </Box>\n  )\n\nDetails.displayName = 'Details'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/details/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/drop-down/DropDown.tsx",["999"],[],"import {\n  Box,\n  css,\n  Overlay,\n  OverlayProps,\n  Pos,\n  SimpleTransition,\n  Value,\n} from '@qiwi/pijma-core'\nimport React, { FC, ReactElement } from 'react'\n\nexport interface DropDownProps {\n  show: boolean\n  offset?: number\n  width?: Value\n  minWidth?: Value\n  maxWidth?: Value\n  rootClose?: boolean\n  stub?: boolean\n  target: OverlayProps['target']\n  container: OverlayProps['container']\n  children: ReactElement\n  onHide: () => void\n}\n\nconst Transition: OverlayProps['transition'] = (props) => (\n  <SimpleTransition\n    {...props}\n    timeout={{\n      enter: 300,\n      exit: 200,\n    }}\n    enterClassName={(timeout: number) =>\n      css({\n        opacity: 1,\n        transition: `opacity ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1)`,\n      })\n    }\n    exitClassName={(timeout: number) =>\n      css({\n        opacity: 0,\n        transition: `opacity ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1)`,\n      })\n    }\n  />\n)\n\nTransition.displayName = 'Transition'\n\nexport const DropDown: FC<DropDownProps> = ({\n  show,\n  offset,\n  width,\n  minWidth,\n  maxWidth,\n  rootClose = true,\n  stub = false,\n  target,\n  container,\n  onHide,\n  children,\n}) =>\n  stub ? (\n    <Box display=\"none\">{children}</Box>\n  ) : (\n    <Overlay\n      show={show}\n      placement=\"bottom\"\n      target={target}\n      container={container}\n      rootClose={rootClose}\n      onHide={onHide}\n      transition={Transition}\n      popperConfig={{\n        modifiers: [\n          {\n            name: 'preventOverflow',\n            enabled: false,\n          },\n        ],\n      }}\n      children={(renderProps) => (\n        <Pos\n          role=\"listbox\"\n          type=\"absolute\"\n          width={width}\n          minWidth={minWidth}\n          maxWidth={maxWidth}\n          zIndex={999}\n          ref={renderProps.props.ref}\n          mt={offset}\n          css={renderProps.props.style}\n        >\n          {children}\n        </Pos>\n      )}\n    />\n  )\n\nDropDown.displayName = 'DropDown'\n\nDropDown.defaultProps = {\n  rootClose: true,\n  stub: false,\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/drop-down/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/extended-progress-bar/ExtendedProgressBar.tsx",["1000","1001","1002","1003","1004","1005","1006","1007"],[],"import { Card, Flex, FlexItem, Spacer, Stub } from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { Paragraph, Text } from '../typography'\n\nexport interface ExtendedProgressBarProps {\n  value: number\n  maxValue?: number\n  titleStart?: string\n  titleEnd?: string\n  stub?: boolean\n  disabled?: boolean\n  formatValue?: (value: number) => string\n}\n\nexport const ExtendedProgressBar: FC<ExtendedProgressBarProps> = ({\n  value,\n  maxValue = 1,\n  titleStart,\n  titleEnd,\n  stub = false,\n  disabled = false,\n  formatValue,\n}) => (\n  <Spacer size=\"xs\">\n    <Flex>\n      <FlexItem\n        width={stub || disabled || maxValue === 0 ? 1 : value / maxValue}\n        minWidth={2}\n        transition=\"width 300ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n        children={\n          stub ? (\n            <Stub height={2} width={1} r={4} />\n          ) : (\n            <Card\n              height={2}\n              width={1}\n              r={4}\n              bg={disabled ? '#E6E6E6' : (maxValue === 0 ? '#F5F5F5' : '#FF8C00')}\n            />\n          )\n        }\n      />\n      {!stub && !disabled && value < maxValue ? (\n        <FlexItem ml={1} grow={1} minWidth={2}>\n          <Card height={2} width={1} r={4} bg=\"#F5F5F5\" />\n        </FlexItem>\n      ) : null}\n    </Flex>\n    {titleStart || titleEnd ? (\n      <Flex mt={2} justify=\"space-between\">\n        <FlexItem width={stub ? 0.15 : undefined}>\n          {stub && titleStart ? (\n            <Text size=\"s\" display=\"block\" compact stub />\n          ) : (titleStart ? (\n            <Paragraph size=\"s\" compact>\n              <Text color=\"support\">\n                {titleStart}\n                {value === undefined ? '' : ': '}\n              </Text>\n              {value === undefined ? null : (\n                <Text>\n                  {formatValue === undefined ? value : formatValue(value)}\n                </Text>\n              )}\n            </Paragraph>\n          ) : null)}\n        </FlexItem>\n        <FlexItem width={stub ? 0.15 : undefined}>\n          {stub && titleEnd ? (\n            <Text size=\"s\" display=\"block\" compact stub />\n          ) : (titleEnd ? (\n            <Paragraph size=\"s\" compact>\n              <Text color=\"support\">\n                {titleEnd}\n                {value !== undefined && maxValue !== undefined ? ': ' : ''}\n              </Text>\n              {value !== undefined && maxValue !== undefined ? (\n                <Text>\n                  {formatValue === undefined\n                    ? maxValue - value\n                    : formatValue(maxValue - value)}\n                </Text>\n              ) : null}\n            </Paragraph>\n          ) : null)}\n        </FlexItem>\n      </Flex>\n    ) : null}\n  </Spacer>\n)\n\nExtendedProgressBar.displayName = 'ExtendedProgressBar'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/extended-progress-bar/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/footer-app/FooterApp.tsx",["1008"],[],"import { BoxLnk, Flex, FlexItem, LinkControl, Stub } from '@qiwi/pijma-core'\nimport React, { FC, ReactElement } from 'react'\n\ntype FooterAppLinkProps =\n  | {\n      stub?: false\n      href: string\n      target?: string\n      download?: string | boolean\n      rel?: string\n      title?: string\n      icon: ReactElement\n      onClick?: (\n        href?: string,\n        target?: string,\n        download?: string | boolean,\n        rel?: string,\n      ) => void\n      onFocus?: () => void\n      onBlur?: () => void\n    }\n  | {\n      stub: true\n    }\n\nconst FooterAppLink: FC<FooterAppLinkProps> = (props) =>\n  props.stub ? (\n    <Stub width={1} height={1} r={8} />\n  ) : (\n    <LinkControl\n      href={props.href}\n      target={props.target}\n      download={props.download}\n      rel={props.rel}\n      onClick={props.onClick}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      children={(renderProps) => (\n        <BoxLnk\n          display=\"block\"\n          href={props.href}\n          rel={props.rel}\n          target={props.target}\n          title={props.title}\n          download={props.download}\n          width={1}\n          height={1}\n          onClick={renderProps.onClick}\n          onFocus={renderProps.onFocus}\n          onBlur={renderProps.onBlur}\n          onMouseEnter={renderProps.onMouseEnter}\n          onMouseLeave={renderProps.onMouseLeave}\n          onMouseUp={renderProps.onMouseUp}\n          onMouseDown={renderProps.onMouseDown}\n          children={props.icon}\n        />\n      )}\n    />\n  )\n\nFooterAppLink.displayName = 'FooterAppLink'\n\nexport interface FooterAppProps {\n  stub?: boolean\n  children: FooterAppLinkProps[]\n}\n\nexport const FooterApp: FC<FooterAppProps> = ({ children, stub = false }) => (\n  <Flex>\n    {(stub\n      ? Array.from<FooterAppLinkProps>({ length: 3 }).fill({\n          stub,\n        })\n      : children\n    ).map((item, i) => (\n      <FlexItem\n        key={i}\n        width={32}\n        height={10}\n        ml={i > 0 ? 4 : 0}\n        children={<FooterAppLink stub={stub} {...item} />}\n      />\n    ))}\n  </Flex>\n)\n\nFooterApp.displayName = 'FooterApp'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/footer-app/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/footer-nav/FooterNav.tsx",["1009"],[],"import { Box, Flex, FlexItem } from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { NavLink, NavLinkProps } from '../nav-link'\n\nexport interface FooterNavProps {\n  children?: NavLinkProps[]\n  stub?: Array<number> | boolean\n}\n\nexport const FooterNav: FC<FooterNavProps> = ({\n  children = [],\n  stub = false,\n}) => (\n  <Box overflow=\"hidden\">\n    <Flex wrap=\"wrap\" mx={-2} my={-2.5}>\n      {stub\n        ? (typeof stub === 'boolean' ? [32, 40, 26] : stub).map(\n            (width, index) => (\n              <FlexItem px={2} py={2.5} key={index} width={width}>\n                <NavLink stub />\n              </FlexItem>\n            ),\n          )\n        : children.map((item, i) => (\n            <FlexItem px={2} py={2.5} key={i}>\n              <NavLink {...item} />\n            </FlexItem>\n          ))}\n    </Flex>\n  </Box>\n)\n\nFooterNav.displayName = 'FooterNav'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/footer-nav/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/footer-out/FooterOut.tsx",["1010","1011"],[],"import {\n  Box,\n  Card,\n  CardLnk,\n  Flex,\n  FlexItem,\n  Icon,\n  IconProps,\n  LinkControl,\n  Stub,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\ninterface FooterOutLinkProps {\n  href: string\n  target?: string\n  download?: string | boolean\n  rel?: string\n  title?: string\n  icon: IconProps['name']\n  stub?: boolean\n  onClick?: (\n    href?: string,\n    target?: string,\n    download?: string | boolean,\n    rel?: string,\n  ) => void\n  onFocus?: () => void\n  onBlur?: () => void\n}\n\nconst FooterOutLink: FC<FooterOutLinkProps> = (props) =>\n  props.stub ? (\n    <Card width={10} height={10} r={20} b=\"solid 1px #ccc\" p={1.75}>\n      <Stub height={5} width={5} r={10} top={0.5} left={0.5} />\n    </Card>\n  ) : (\n    <LinkControl\n      href={props.href}\n      target={props.target}\n      download={props.download}\n      rel={props.rel}\n      onClick={props.onClick}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      children={(renderProps) => (\n        <CardLnk\n          display=\"block\"\n          width={10}\n          height={10}\n          r={40}\n          p={1.75}\n          b={\n            renderProps.hover || renderProps.focus || renderProps.active\n              ? 'solid 1px #999'\n              : 'solid 1px #ccc'\n          }\n          href={props.href}\n          rel={props.rel}\n          target={props.target}\n          title={props.title}\n          download={props.download}\n          onClick={renderProps.onClick}\n          onFocus={renderProps.onFocus}\n          onBlur={renderProps.onBlur}\n          onMouseEnter={renderProps.onMouseEnter}\n          onMouseLeave={renderProps.onMouseLeave}\n          onMouseUp={renderProps.onMouseUp}\n          onMouseDown={renderProps.onMouseDown}\n          children={\n            <Icon\n              name={props.icon}\n              color={\n                renderProps.hover || renderProps.focus || renderProps.active\n                  ? '#666'\n                  : '#999'\n              }\n            />\n          }\n        />\n      )}\n    />\n  )\n\nFooterOutLink.displayName = 'FooterOutLink'\n\nexport interface FooterOutProps {\n  children: FooterOutLinkProps[]\n  stub?: number | boolean\n}\n\nexport const FooterOut: FC<FooterOutProps> = ({ children, stub = false }) => (\n  <Box overflow=\"hidden\">\n    <Flex wrap=\"wrap\" justify=\"space-between\" m={-1.5}>\n      {(stub\n        ? new Array(typeof stub === 'number' ? stub : 6).fill({\n            href: '',\n            icon: 'qiwi',\n          })\n        : children\n      ).map((item, i) => (\n        <FlexItem key={i} m={1.5}>\n          <FooterOutLink stub={stub} {...item} />\n        </FlexItem>\n      ))}\n    </Flex>\n  </Box>\n)\n\nFooterOut.displayName = 'FooterOut'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/footer-out/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/glossary/Glossary.tsx",["1012"],[],"import { Box, Spacer } from '@qiwi/pijma-core'\nimport React, { FC, ReactElement } from 'react'\n\nimport { Text } from '../typography'\n\ntype GlossaryText = ReactElement | string\n\nexport interface GlossaryProps {\n  children: { title: GlossaryText; content: GlossaryText | GlossaryText[] }[]\n  stub?: boolean\n}\n\nexport const Glossary: FC<GlossaryProps> = ({ children, stub }) =>\n  stub ? (\n    <Box as=\"dl\">\n      {children.map((item, i) => (\n        <Box key={i} mt={i === 0 ? undefined : 5}>\n          <Box as=\"dt\" mr={16}>\n            <Text stub display=\"block\" bold={false} compact size=\"s\" />\n          </Box>\n          <Box mt={1} as=\"dd\">\n            <Spacer size=\"xs\">\n              {(Array.isArray(item.content)\n                ? item.content\n                : [item.content]\n              ).map((_content, j) => (\n                <Text\n                  key={`${i}.${j}`}\n                  stub\n                  bold={false}\n                  compact\n                  display=\"block\"\n                  size=\"m\"\n                />\n              ))}\n            </Spacer>\n          </Box>\n        </Box>\n      ))}\n    </Box>\n  ) : (\n    <Box as=\"dl\">\n      {children.map((item, i) => (\n        <Box key={i} mt={i === 0 ? undefined : 5}>\n          <Box as=\"dt\">\n            <Text\n              bold={false}\n              compact\n              display=\"block\"\n              size=\"s\"\n              color=\"support\"\n              children={item.title}\n            />\n          </Box>\n          <Box mt={1} as=\"dd\">\n            <Spacer size=\"xs\">\n              {(Array.isArray(item.content)\n                ? item.content\n                : [item.content]\n              ).map((content, j) => (\n                <Text\n                  key={`${i}.${j}`}\n                  bold={false}\n                  compact\n                  display=\"block\"\n                  size=\"m\"\n                  children={content}\n                />\n              ))}\n            </Spacer>\n          </Box>\n        </Box>\n      ))}\n    </Box>\n  )\n\nGlossary.displayName = 'Glossary'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/glossary/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header/Header.tsx",["1013"],[],"import { Card } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nexport interface HeaderProps {\n  underline?: boolean\n  children?: ReactNode\n}\n\nexport const Header: FC<HeaderProps> = (props) => (\n  <Card\n    bg=\"#fff\"\n    s={props.underline ? 'inset 0px -1px 0px 0px #e6e6e6' : undefined}\n    width={1}\n    height={20}\n    children={props.children}\n  />\n)\n\nHeader.displayName = 'Header'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-bank-card-link/HeaderBankCardLink.tsx",["1014"],[],"import {\n  BoxLnk,\n  Card,\n  Image,\n  LinkControl,\n  LinkControlProps,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { Text } from '../typography'\n\nexport interface HeaderBankCardLinkProps {\n  src: string\n  srcSet?: string\n  text: string\n  tabIndex?: number\n  href: LinkControlProps['href']\n  target?: LinkControlProps['target']\n  download?: LinkControlProps['download']\n  rel?: LinkControlProps['rel']\n  title?: string\n  onClick?: LinkControlProps['onClick']\n  onFocus?: LinkControlProps['onFocus']\n  onBlur?: LinkControlProps['onBlur']\n}\n\nexport const HeaderBankCardLink: FC<HeaderBankCardLinkProps> = (props) => (\n  <LinkControl\n    href={props.href}\n    target={props.target}\n    download={props.download}\n    rel={props.rel}\n    onClick={props.onClick}\n    onFocus={props.onFocus}\n    onBlur={props.onBlur}\n    children={(renderProps) => (\n      <BoxLnk\n        display=\"block\"\n        width={56}\n        tabIndex={props.tabIndex}\n        href={props.href}\n        target={props.target}\n        download={props.download}\n        title={props.title}\n        onClick={renderProps.onClick}\n        onFocus={renderProps.onFocus}\n        onBlur={renderProps.onBlur}\n        onMouseEnter={renderProps.onMouseEnter}\n        onMouseLeave={renderProps.onMouseLeave}\n        onMouseUp={renderProps.onMouseUp}\n        onMouseDown={renderProps.onMouseDown}\n      >\n        <Card\n          mb={5}\n          r={10}\n          width={56}\n          height={35}\n          overflow=\"hidden\"\n          transform={\n            renderProps.hover || renderProps.active || renderProps.focus\n              ? 'translateY(-4px)'\n              : undefined\n          }\n          transition=\"all 300ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n          s={\n            renderProps.hover || renderProps.active || renderProps.focus\n              ? '0 8px 16px 0 rgba(0, 0, 0, 0.12)'\n              : '0 0 16px 0 rgba(0, 0, 0, 0.12)'\n          }\n        >\n          <Image width={56} height={35} src={props.src} srcSet={props.srcSet} />\n        </Card>\n        <Text\n          bold\n          display=\"block\"\n          align=\"center\"\n          color={\n            renderProps.hover || renderProps.active || renderProps.focus\n              ? 'warning'\n              : 'default'\n          }\n          transition=\"all 100ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n          children={props.text}\n        />\n      </BoxLnk>\n    )}\n  />\n)\n\nHeaderBankCardLink.displayName = 'HeaderBankCardLink'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-bank-card-link/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-drop-down/HeaderDropDown.tsx",["1015"],[],"import {\n  Card,\n  css,\n  Icon,\n  Overlay,\n  OverlayProps,\n  Pos,\n  SimpleTransition,\n} from '@qiwi/pijma-core'\nimport React, { FC, ReactElement } from 'react'\n\nexport interface HeaderDropDownProps {\n  show: boolean\n  target: OverlayProps['target']\n  container: OverlayProps['container']\n  children: ReactElement\n  onHide: () => void\n}\n\nconst Transition: OverlayProps['transition'] = (props) => (\n  <SimpleTransition\n    {...props}\n    timeout={{\n      enter: 300,\n      exit: 200,\n    }}\n    enterClassName={(timeout: number) =>\n      css({\n        opacity: 1,\n        transition: `opacity ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1)`,\n      })\n    }\n    exitClassName={(timeout: number) =>\n      css({\n        opacity: 0,\n        transition: `opacity ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1)`,\n      })\n    }\n  />\n)\n\nTransition.displayName = 'Transition'\n\nexport const HeaderDropDown: FC<HeaderDropDownProps> = ({\n  show,\n  target,\n  container,\n  onHide,\n  children,\n}) => (\n  <Overlay\n    show={show}\n    placement=\"bottom\"\n    target={target}\n    container={container}\n    rootClose={true}\n    onHide={onHide}\n    transition={Transition}\n    popperConfig={{\n      modifiers: [\n        {\n          name: 'preventOverflow',\n          enabled: false,\n        },\n      ],\n    }}\n    children={(renderProps) => (\n      <Pos\n        role=\"listbox\"\n        type=\"absolute\"\n        zIndex={600}\n        ref={renderProps.props.ref}\n        width={1}\n        css={renderProps.props.style}\n      >\n        <Pos type=\"relative\">\n          <Card\n            bg=\"#fff\"\n            width={1}\n            pt={12}\n            pb={12}\n            s=\"0 0 16px 0 rgba(0, 0, 0, 0.12)\"\n          >\n            {children}\n          </Card>\n          <Pos\n            aria-label=\"close\"\n            mb=\"auto\"\n            type=\"absolute\"\n            width={6}\n            height={6}\n            top={6}\n            right={6}\n            cursor=\"pointer\"\n            onClick={onHide}\n          >\n            <Icon name=\"cross\" color=\"#666\" />\n          </Pos>\n        </Pos>\n      </Pos>\n    )}\n  />\n)\n\nHeaderDropDown.displayName = 'HeaderDropDown'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-drop-down/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-menu/HeaderMenu.tsx",["1016"],[],"import { Flex, FlexItem } from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { Link } from '../link'\nimport { HeaderMenuItem, HeaderMenuItemProps } from './HeaderMenuItem'\n\nexport interface HeaderMenuProps {\n  children: HeaderMenuItemProps[]\n  stub?: Array<number> | boolean\n}\n\nexport const HeaderMenu: FC<HeaderMenuProps> = (props) => (\n  <Flex height={1} width={1} justify=\"flex-start\" role=\"menu\">\n    {props.stub\n      ? (typeof props.stub === 'boolean' ? [32, 44, 26] : props.stub).map(\n          (width, index) => (\n            <FlexItem\n              key={index}\n              ml={index > 0 ? 5 : 0}\n              width={width}\n              align=\"center\"\n            >\n              <Link size=\"m\" stub />\n            </FlexItem>\n          ),\n        )\n      : props.children.map((item, i) => (\n          <FlexItem key={i} ml={i > 0 ? 5 : 0}>\n            <HeaderMenuItem {...item} />\n          </FlexItem>\n        ))}\n  </Flex>\n)\n\nHeaderMenu.displayName = 'HeaderMenu'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-menu/HeaderMenuItem.tsx",["1017","1018","1019"],[],"import {\n  Card,\n  Flex,\n  LinkControl,\n  LinkControlProps,\n  Pos,\n  PosLnk,\n  Typo,\n} from '@qiwi/pijma-core'\nimport React, { forwardRef } from 'react'\n\nimport { Text } from '../typography'\n\nexport interface HeaderMenuItemProps {\n  tabIndex?: number\n  href?: LinkControlProps['href']\n  target?: LinkControlProps['target']\n  download?: LinkControlProps['target']\n  rel?: LinkControlProps['rel']\n  title?: string\n  active?: boolean\n  attention?: boolean\n  onClick?: LinkControlProps['onClick']\n  onFocus?: LinkControlProps['onFocus']\n  onBlur?: LinkControlProps['onBlur']\n}\n\nexport const HeaderMenuItem = forwardRef<\n  HTMLDivElement & HTMLAnchorElement,\n  HeaderMenuItemProps\n>((props, ref) => (\n  <LinkControl\n    href={props.href}\n    target={props.target}\n    download={props.download}\n    rel={props.rel}\n    onClick={props.onClick}\n    onFocus={props.onFocus}\n    onBlur={props.onBlur}\n    children={(renderProps) => (\n      <PosLnk\n        role=\"menuitem\"\n        as={props.href ? 'a' : 'div'}\n        ref={ref}\n        height={1}\n        type=\"relative\"\n        display=\"block\"\n        cursor=\"pointer\"\n        tabIndex={props.tabIndex}\n        href={props.href}\n        target={props.href ? props.target : undefined}\n        download={props.href ? props.download : undefined}\n        rel={props.href ? props.rel : undefined}\n        title={props.href ? props.title : undefined}\n        onClick={renderProps.onClick}\n        onFocus={renderProps.onFocus}\n        onBlur={renderProps.onBlur}\n        onMouseEnter={renderProps.onMouseEnter}\n        onMouseLeave={renderProps.onMouseLeave}\n        onMouseUp={renderProps.onMouseUp}\n        onMouseDown={renderProps.onMouseDown}\n      >\n        <Flex height={1} direction=\"column\" align=\"middle\" justify=\"center\">\n          <Text\n            bold\n            color={\n              renderProps.hover || renderProps.focus ? 'warning' : 'default'\n            }\n            transition=\"all 100ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n            decoration=\"none\"\n          >\n            {props.title}\n            {props.attention ? (\n              <Typo\n                as=\"span\"\n                css={{ marginLeft: '2px' }}\n                size={4}\n                color=\"#ed4848\"\n                height={2}\n              >\n                &bull;\n              </Typo>\n            ) : null}\n          </Text>\n        </Flex>\n        {props.active ? (\n          <Pos type=\"absolute\" height=\"4px\" bottom={0} right={0} left={0}>\n            <Card bg=\"#ff8c00\" height={1} width={1} rtr={4} rtl={4} />\n          </Pos>\n        ) : null}\n      </PosLnk>\n    )}\n  />\n))\n\nHeaderMenuItem.displayName = 'HeaderMenuItem'\n\nHeaderMenuItem.defaultProps = {\n  active: false,\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-menu/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-suggest/HeaderSuggest.tsx",["1020","1021","1022","1023","1024","1025","1026"],[],"import {\n  Box,\n  Card,\n  css,\n  Flex,\n  FlexItem,\n  Icon,\n  Image,\n  Input,\n  MenuControl,\n  Overlay,\n  OverlayProps,\n  Pos,\n  SimpleTransition,\n  Spacer,\n  styled,\n  SuggestControl,\n} from '@qiwi/pijma-core'\nimport React, { Fragment, isValidElement } from 'react'\n\nimport { Link } from '../link'\nimport { Markdown } from '../markdown'\nimport { MenuItem } from '../menu'\nimport { Paragraph } from '../typography'\nimport { HeaderSuggestOptionModel } from './HeaderSuggestOptionModel'\nimport { HeaderSuggestProps } from './HeaderSuggestProps'\n\nconst CardItem = styled(Card)().withComponent(MenuItem)\n\nCardItem.displayName = 'CardItem'\n\nconst ContentTransition: OverlayProps['transition'] = (props) => (\n  <SimpleTransition\n    {...props}\n    timeout={{\n      enter: 150,\n      exit: 150,\n    }}\n    enterClassName={(timeout: number) =>\n      css({\n        opacity: 1,\n        transition: `opacity ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1)`,\n      })\n    }\n    exitClassName={(timeout: number) =>\n      css({\n        opacity: 0,\n        transition: `opacity ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1)`,\n      })\n    }\n  />\n)\n\nContentTransition.displayName = 'ContentTransition'\n\nexport const HeaderSuggest = <V extends {}>({\n  equals = (a: V, b: V) => a === b,\n  placeholder = 'Текстовое поле',\n  ...props\n}: HeaderSuggestProps<HeaderSuggestOptionModel<V>, V>) => (\n  <SuggestControl<V, HeaderSuggestOptionModel<V>>\n    value={props.value}\n    suggest={props.suggest}\n    items={props.items}\n    total={\n      isValidElement(props.total) || typeof props.total === 'string'\n        ? undefined\n        : props.total\n    }\n    empty={\n      isValidElement(props.empty) || typeof props.empty === 'string'\n        ? undefined\n        : props.empty\n    }\n    equals={equals}\n    onRequest={props.onRequest}\n    onChange={props.onChange}\n    onBlur={props.onBlur}\n    onFocus={props.onFocus}\n    onCancel={props.onCancel}\n    onSubmit={props.onSubmit}\n    children={(renderProps) => (\n      <MenuControl\n        count={renderProps.items.length}\n        selected={renderProps.selected}\n        onSelect={renderProps.onItemSelect}\n        onKeyDown={renderProps.onModalItemKeyDown}\n        children={(menuRenderProps) => (\n          <Fragment>\n            <Box width={6} height={6} onClick={renderProps.onShowClick}>\n              <Icon name=\"search\" />\n            </Box>\n            <Overlay\n              target={props.target.current}\n              container={props.container.current}\n              show={renderProps.show}\n              rootClose={true}\n              transition={ContentTransition}\n              onHide={renderProps.onHide}\n              popperConfig={{\n                modifiers: [\n                  {\n                    name: 'preventOverflow',\n                    enabled: false,\n                  },\n                ],\n              }}\n              children={(overlayRenderProps) => (\n                <Pos\n                  type=\"absolute\"\n                  top={0}\n                  zIndex={10_050}\n                  width={1}\n                  ref={overlayRenderProps.props.ref}\n                >\n                  <Card\n                    height={20}\n                    bg=\"#fff\"\n                    bb={props.error ? 'solid 2px #d0021b' : 'none'}\n                    s=\"0 0 25px 0 rgba(0, 0, 0, 0.08)\"\n                  >\n                    <Box width={295} mx=\"auto\">\n                      <Flex\n                        align=\"center\"\n                        width={295}\n                        mx=\"auto\"\n                        height={20}\n                        py={4}\n                        px={6}\n                      >\n                        <FlexItem\n                          cursor=\"pointer\"\n                          shrink={0}\n                          mr={4}\n                          onClick={renderProps.onBack}\n                        >\n                          <Icon name=\"arrow-left\" />\n                        </FlexItem>\n                        <FlexItem grow={1}>\n                          <Input\n                            ref={renderProps.inputRef}\n                            tabIndex={props.tabIndex}\n                            type=\"search\"\n                            autoComplete={props.autoComplete ? 'on' : 'off'}\n                            value={props.suggest || ''}\n                            valueWeight={300}\n                            width={1}\n                            autoFocus\n                            valueSize={5}\n                            placeholder={placeholder}\n                            placeholderSize={5}\n                            placeholderWeight={300}\n                            onChange={renderProps.onRequest}\n                            onBlur={renderProps.onModalInputBlur}\n                            onKeyDown={\n                              renderProps.show\n                                ? menuRenderProps.onKeyDown\n                                : renderProps.onModalItemKeyDown\n                            }\n                            onFocus={renderProps.onShowFocus}\n                          />\n                        </FlexItem>\n                        <FlexItem\n                          shrink={0}\n                          ml={4}\n                          onClick={renderProps.onSearchClick}\n                        >\n                          <Box cursor=\"pointer\" width={6} height={6}>\n                            <Icon name=\"search\" color=\"#666\" />\n                          </Box>\n                        </FlexItem>\n                      </Flex>\n                    </Box>\n                  </Card>\n                  <Card\n                    ref={menuRenderProps.containerRef}\n                    overflow=\"auto\"\n                    maxHeight={84}\n                    s=\"0 0 25px 0 rgba(0, 0, 0, 0.08)\"\n                    bg=\"#fff\"\n                  >\n                    <Box width={295} mx=\"auto\">\n                      {props.loading && props.items !== undefined ? (\n                        <Box pt={4}>\n                          {Array.from({length: 4}).fill(1).map((_item, key) => (\n                            <CardItem\n                              key={key}\n                              icon={true}\n                              stub\n                              text=\"stub\"\n                              notes=\"stub\"\n                            />\n                          ))}\n                        </Box>\n                      ) : (\n                        <Spacer size=\"s\">\n                          {menuRenderProps.items.length > 0 ? (\n                            <Fragment>\n                              {menuRenderProps.items.map((item, key) => (\n                                <CardItem\n                                  key={key}\n                                  ref={item.ref}\n                                  cursor=\"pointer\"\n                                  mt={key === 0 ? 4 : undefined}\n                                  round\n                                  text={renderProps.items[key].title}\n                                  notes={renderProps.items[key].description}\n                                  icon={\n                                    <Image\n                                      width={6}\n                                      height={6}\n                                      src={renderProps.items[key].logo}\n                                    />\n                                  }\n                                  hover={item.focused}\n                                  active={item.selected}\n                                  focus={item.selected}\n                                  onClick={item.onClick}\n                                  onMouseEnter={item.onMouseEnter}\n                                />\n                              ))}\n                            </Fragment>\n                          ) : null}\n                          {props.total && menuRenderProps.items.length > 0 ? (\n                            <Box px={6} pb={4}>\n                              {isValidElement(props.total) ? (\n                                props.total\n                              ) : (typeof props.total === 'string' ? (\n                                <Markdown children={props.total} />\n                              ) : (\n                                <Paragraph>\n                                  {props.total.text}\n                                  {props.total.link ? (\n                                    <Fragment>\n                                      {' '}\n                                      <Link\n                                        onClick={renderProps.onTotalClick}\n                                        children={props.total.link.text}\n                                      />\n                                    </Fragment>\n                                  ) : null}\n                                </Paragraph>\n                              ))}\n                            </Box>\n                          ) : (props.empty &&\n                            menuRenderProps.items.length === 0 &&\n                            props.items !== undefined ? (\n                            <Box px={6} py={4}>\n                              {isValidElement(props.empty) ? (\n                                props.empty\n                              ) : (typeof props.empty === 'string' ? (\n                                <Markdown children={props.empty} />\n                              ) : (\n                                <Paragraph>\n                                  {props.empty.text}\n                                  {props.empty.link ? (\n                                    <Fragment>\n                                      {' '}\n                                      <Link\n                                        onClick={renderProps.onEmptyClick}\n                                        children={props.empty.link.text}\n                                      />\n                                    </Fragment>\n                                  ) : null}\n                                </Paragraph>\n                              ))}\n                            </Box>\n                          ) : null)}\n                        </Spacer>\n                      )}\n                    </Box>\n                  </Card>\n                </Pos>\n              )}\n            />\n          </Fragment>\n        )}\n      />\n    )}\n  />\n)\n\nHeaderSuggest.displayName = 'HeaderSuggest'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-suggest/HeaderSuggestOptionModel.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-suggest/HeaderSuggestProps.ts",["1027","1028"],[],"import { SuggestControlProps } from '@qiwi/pijma-core'\nimport { ReactElement, RefObject } from 'react'\n\nimport { HeaderSuggestOptionModel } from './HeaderSuggestOptionModel'\n\nexport interface HeaderSuggestProps<O extends HeaderSuggestOptionModel<V>, V> {\n  value?: SuggestControlProps<O, V>['value']\n  suggest: SuggestControlProps<O, V>['suggest']\n  items?: SuggestControlProps<O, V>['items']\n  target: RefObject<any>\n  container: RefObject<any>\n  tabIndex?: number\n  autoComplete?: boolean\n  autoFocus?: boolean\n  placeholder?: string\n  maxLength?: number\n  stub?: boolean\n  error?: boolean\n  loading?: boolean\n  total?: SuggestControlProps<O, V>['total'] | ReactElement | string\n  empty?: SuggestControlProps<O, V>['empty'] | ReactElement | string\n  onChange: SuggestControlProps<O, V>['onChange']\n  onRequest: SuggestControlProps<O, V>['onRequest']\n  onCancel?: SuggestControlProps<O, V>['onCancel']\n  onFocus?: SuggestControlProps<O, V>['onFocus']\n  onBlur?: SuggestControlProps<O, V>['onBlur']\n  onSubmit?: SuggestControlProps<O, V>['onSubmit']\n  equals?: SuggestControlProps<O, V>['equals']\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/header-suggest/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/hint/Hint.tsx",["1029","1030"],[],"import {\n  Box,\n  BoxProps,\n  Card,\n  css,\n  HintArrow,\n  HintControl,\n  Overlay,\n  OverlayProps,\n  Pos,\n  PosProps,\n  QuestionIcon,\n  SimpleTransition,\n} from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { Paragraph } from '../typography'\n\nexport interface HintProps {\n  show: boolean\n  children: ReactNode\n  placement: NonNullable<OverlayProps['placement']>\n  flip?: boolean\n  onShow: () => void\n  onHide: () => void\n}\n\nconst Transition: OverlayProps['transition'] = (props) => (\n  <SimpleTransition\n    {...props}\n    {...{\n      timeout: {\n        enter: 150,\n        exit: 150,\n      },\n      enteringClassName: (timeout: number) =>\n        css({\n          opacity: 0,\n          transition: `opacity ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1), transform ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1)`,\n        }),\n      enteredClassName: (timeout: number) =>\n        css({\n          opacity: 1,\n          transition: `opacity ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1), transform ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1)`,\n        }),\n      exitingClassName: (timeout: number) =>\n        css({\n          opacity: 0,\n          transition: `opacity ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1), transform ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1)`,\n        }),\n      exitedClassName: (timeout: number) =>\n        css({\n          opacity: 0,\n          transition: `opacity ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1), transform ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1)`,\n        }),\n    }}\n  />\n)\n\nconst LargeProps: Record<HintProps['placement'], BoxProps & PosProps> = {\n  'top-start': {\n    mb: 6,\n    ml: -9,\n  },\n  top: {\n    mb: 6,\n  },\n  'top-end': {\n    mb: 6,\n    mr: -9,\n  },\n  'right-start': {\n    mt: -9,\n    ml: 6,\n  },\n  right: {\n    ml: 6,\n  },\n  'right-end': {\n    mb: -9,\n    ml: 6,\n  },\n  'bottom-start': {\n    mt: 6,\n    ml: -9,\n  },\n  bottom: {\n    mt: 6,\n  },\n  'bottom-end': {\n    mt: 6,\n    mr: -9,\n  },\n  'left-start': {\n    mt: -9,\n    mr: 6,\n  },\n  left: {\n    mr: 6,\n  },\n  'left-end': {\n    mb: -9,\n    mr: 6,\n  },\n  auto: {},\n  'auto-start': {},\n  'auto-end': {},\n}\n\nconst SmallProps: Record<HintProps['placement'], BoxProps & PosProps> = {\n  'top-start': {\n    mb: 6,\n    ml: -3.5,\n  },\n  top: {\n    mb: 6,\n  },\n  'top-end': {\n    mb: 6,\n    mr: -3.5,\n  },\n  'right-start': {\n    mt: -3.5,\n    ml: 6,\n  },\n  right: {\n    ml: 6,\n  },\n  'right-end': {\n    mb: -3.5,\n    ml: 6,\n  },\n  'bottom-start': {\n    mt: 6,\n    ml: -3.5,\n  },\n  bottom: {\n    mt: 6,\n  },\n  'bottom-end': {\n    mt: 6,\n    mr: -3.5,\n  },\n  'left-start': {\n    mt: -3.5,\n    mr: 6,\n  },\n  left: {\n    mr: 6,\n  },\n  'left-end': {\n    mb: -3.5,\n    mr: 6,\n  },\n  auto: {},\n  'auto-start': {},\n  'auto-end': {},\n}\n\nconst ArrowProps: Record<HintProps['placement'], BoxProps & PosProps> = {\n  'top-start': {\n    bottom: 0,\n    mb: -7,\n  },\n  top: {\n    bottom: 0,\n    mb: -7,\n  },\n  'top-end': {\n    bottom: 0,\n    mb: -7,\n  },\n  'right-start': {\n    left: 0,\n    ml: -7,\n  },\n  right: {\n    left: 0,\n    ml: -7,\n  },\n  'right-end': {\n    left: 0,\n    ml: -7,\n  },\n  'bottom-start': {\n    top: 0,\n    mt: -7,\n  },\n  bottom: {\n    top: 0,\n    mt: -7,\n  },\n  'bottom-end': {\n    top: 0,\n    mt: -7,\n  },\n  'left-start': {\n    right: 0,\n    mr: -7,\n  },\n  left: {\n    right: 0,\n    mr: -7,\n  },\n  'left-end': {\n    right: 0,\n    mr: -7,\n  },\n  auto: {},\n  'auto-start': {},\n  'auto-end': {},\n}\n\nexport const Hint: FC<HintProps> = ({\n  placement,\n  children,\n  show,\n  flip,\n  onShow,\n  onHide,\n}) => {\n  const small = typeof children === 'string'\n  return (\n    <HintControl\n      show={show}\n      onShow={onShow}\n      children={(renderProps) => (\n        <Pos type=\"relative\" ref={renderProps.container}>\n          <Box\n            cursor=\"pointer\"\n            onClick={renderProps.onClick}\n            ref={renderProps.target}\n            width={6}\n            height={6}\n          >\n            <QuestionIcon />\n          </Box>\n          <Overlay\n            show={renderProps.show}\n            flip={flip}\n            placement={placement}\n            target={() => renderProps.target.current!}\n            container={() => renderProps.container.current}\n            rootClose={true}\n            onHide={onHide}\n            transition={Transition}\n            popperConfig={{\n              modifiers: [\n                {\n                  name: 'arrow',\n                  options: {\n                    padding: small ? 4 : 26,\n                  },\n                },\n                {\n                  name: 'preventOverflow',\n                  enabled: false,\n                },\n              ],\n            }}\n            children={(overlayRenderProps) => (\n              <Pos\n                role=\"tooltip\"\n                zIndex={999}\n                ref={overlayRenderProps.props.ref}\n                css={overlayRenderProps.props.style}\n                {...(small ? SmallProps : LargeProps)[\n                  overlayRenderProps.placement\n                ]}\n              >\n                <Card\n                  bg=\"#fff\"\n                  s=\"0 8px 16px 0 rgba(0, 0, 0, 0.12)\"\n                  r={10}\n                  p={small ? 4 : 8}\n                  css={small ? { whiteSpace: 'nowrap' } : undefined}\n                >\n                  {small ? (\n                    <Paragraph size=\"s\" children={children} />\n                  ) : (\n                    children\n                  )}\n                </Card>\n                <Pos\n                  type=\"absolute\"\n                  ref={overlayRenderProps.arrowProps.ref}\n                  style={overlayRenderProps.arrowProps.style}\n                  width={11}\n                  height={11}\n                  {...ArrowProps[overlayRenderProps.placement]}\n                >\n                  <HintArrow placement={overlayRenderProps.placement} />\n                </Pos>\n              </Pos>\n            )}\n          />\n        </Pos>\n      )}\n    />\n  )\n}\n\nHint.defaultProps = {\n  flip: true,\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/hint/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/link/BlockLink.tsx",["1031"],[],"import {\n  Block,\n  CardLnk,\n  LinkControl,\n  LinkControlProps,\n  styled,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nexport interface BlockLinkProps {\n  tabIndex?: number\n  accent?: boolean\n  href: LinkControlProps['href']\n  target?: LinkControlProps['target']\n  download?: LinkControlProps['download']\n  rel?: LinkControlProps['rel']\n  title?: string\n  onClick?: LinkControlProps['onClick']\n  onFocus?: LinkControlProps['onFocus']\n  onBlur?: LinkControlProps['onBlur']\n  children: FC<{\n    active: boolean\n    focus: boolean\n    hover: boolean\n  }>\n}\n\nconst BlockCardLnk = styled(CardLnk)().withComponent(Block)\n\nBlockCardLnk.displayName = 'BlockCardLnk'\n\nexport const BlockLink: FC<BlockLinkProps> = (props) => (\n  <LinkControl\n    onClick={props.onClick}\n    onFocus={props.onFocus}\n    onBlur={props.onBlur}\n    href={props.href}\n    target={props.target}\n    download={props.download}\n    rel={props.rel}\n    children={(renderProps) => (\n      <BlockCardLnk\n        accent={props.accent}\n        hover={renderProps.hover}\n        focus={renderProps.focus}\n        active={renderProps.active}\n        tabIndex={props.tabIndex}\n        href={props.href}\n        title={props.title}\n        onClick={renderProps.onClick}\n        onFocus={renderProps.onFocus}\n        onBlur={renderProps.onBlur}\n        onMouseEnter={renderProps.onMouseEnter}\n        onMouseLeave={renderProps.onMouseLeave}\n        onMouseUp={renderProps.onMouseUp}\n        onMouseDown={renderProps.onMouseDown}\n        target={props.target}\n        download={props.download}\n        children={props.children({\n          active: renderProps.active,\n          focus: renderProps.focus,\n          hover: renderProps.hover,\n        })}\n      />\n    )}\n  />\n)\n\nBlockLink.displayName = 'BlockLink'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/link/FileLink.tsx",["1032"],[],"import { FlexItem, FlexLnk, Icon, LinkControl } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { Text } from '../typography'\n\nexport interface FileLinkProps {\n  onClick?: (\n    href?: string,\n    target?: string,\n    download?: string | boolean,\n    rel?: string,\n  ) => void\n  onFocus?: () => void\n  onBlur?: () => void\n  tabIndex?: number\n  href?: string\n  target?: string\n  download?: string | boolean\n  rel?: string\n  title?: string\n  children?: ReactNode\n}\n\nexport const FileLink: FC<FileLinkProps> = (props) => (\n  <LinkControl\n    onClick={props.onClick}\n    onFocus={props.onFocus}\n    onBlur={props.onBlur}\n    href={props.href}\n    target={props.target}\n    download={props.download}\n    rel={props.rel}\n    children={(renderProps) => (\n      <FlexLnk\n        tabIndex={props.tabIndex}\n        href={props.href}\n        target={props.target}\n        download={props.download}\n        rel={props.rel}\n        title={props.title}\n        display=\"inline-flex\"\n        cursor=\"pointer\"\n        onFocus={renderProps.onFocus}\n        onBlur={renderProps.onBlur}\n        onClick={renderProps.onClick}\n        onMouseEnter={renderProps.onMouseEnter}\n        onMouseLeave={renderProps.onMouseLeave}\n        onMouseUp={renderProps.onMouseUp}\n        onMouseDown={renderProps.onMouseDown}\n      >\n        <FlexItem display=\"inline-block\" width={6} height={6} mr={2} shrink={0}>\n          <Icon\n            name=\"file\"\n            color={\n              renderProps.hover || renderProps.focus || renderProps.active\n                ? '#FF8C00'\n                : '#000'\n            }\n          />\n        </FlexItem>\n        <FlexItem>\n          <Text\n            color={\n              renderProps.hover || renderProps.focus || renderProps.active\n                ? 'warning'\n                : 'default'\n            }\n            decoration=\"none\"\n            size=\"m\"\n            bold={false}\n            children={props.children}\n          />\n        </FlexItem>\n      </FlexLnk>\n    )}\n  />\n)\n\nFileLink.displayName = 'FileLink'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/link/Link.tsx",["1033","1034","1035"],[],"import { LinkControl, Stub, TypoLnk, useTheme } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nexport interface LinkProps {\n  onClick?: (\n    href?: string,\n    target?: string,\n    download?: string | boolean,\n    rel?: string,\n  ) => void\n  onFocus?: () => void\n  onBlur?: () => void\n  tabIndex?: number\n  compact?: boolean\n  href?: string\n  target?: string\n  download?: string | boolean\n  rel?: string\n  title?: string\n  size?: 's' | 'm' | 'l'\n  bold?: boolean\n  stub?: boolean\n  inverse?: boolean\n  children?: ReactNode\n}\n\nconst LinkSize: { [size in NonNullable<LinkProps['size']>]: number } = {\n  s: 3.5,\n  m: 4,\n  l: 5,\n}\n\nconst StubLinkSize: Record<NonNullable<LinkProps['size']>, number> = {\n  s: 2,\n  m: 3,\n  l: 3,\n}\n\nconst StubOffSet: Record<NonNullable<LinkProps['size']>, number> = {\n  s: 1.5,\n  m: 1.5,\n  l: 2.5,\n}\n\nconst StubOffSetCompact: Record<NonNullable<LinkProps['size']>, number> = {\n  s: 1,\n  m: 1,\n  l: 2,\n}\n\nconst LinkHeight: { [size in NonNullable<LinkProps['size']>]: number } = {\n  s: 5,\n  m: 6,\n  l: 8,\n}\n\nconst LinkHeightCompact: { [size in NonNullable<LinkProps['size']>]: number } =\n  {\n    s: 4,\n    m: 5,\n    l: 7,\n  }\n\nexport const Link: FC<LinkProps> = (props) => {\n  const theme = useTheme()\n\n  return props.stub ? (\n    props.size === undefined ? null : (\n      <Stub\n        top={\n          props.compact ? StubOffSetCompact[props.size] : StubOffSet[props.size]\n        }\n        bottom={\n          props.compact ? StubOffSetCompact[props.size] : StubOffSet[props.size]\n        }\n        height={StubLinkSize[props.size]}\n        width={1}\n      />\n    )\n  ) : (\n    <LinkControl\n      onClick={props.onClick}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      href={props.href}\n      target={props.target}\n      download={props.download}\n      rel={props.rel}\n      children={(renderProps) => (\n        <TypoLnk\n          tabIndex={props.tabIndex}\n          href={props.href}\n          onClick={renderProps.onClick}\n          onFocus={renderProps.onFocus}\n          onBlur={renderProps.onBlur}\n          onMouseEnter={renderProps.onMouseEnter}\n          onMouseLeave={renderProps.onMouseLeave}\n          onMouseUp={renderProps.onMouseUp}\n          onMouseDown={renderProps.onMouseDown}\n          color={\n            renderProps.hover || renderProps.focus\n              ? (props.inverse\n                ? theme.link.color.inverse.hover\n                : theme.link.color.brand.hover)\n              : (props.inverse\n              ? theme.link.color.inverse.default\n              : theme.link.color.brand.default)\n          }\n          transition=\"all 100ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n          cursor=\"pointer\"\n          decoration=\"none\"\n          target={props.target}\n          download={props.download}\n          rel={props.rel}\n          title={props.title}\n          size={\n            props.size === undefined\n              ? undefined\n              : (props.compact\n              ? LinkHeightCompact[props.size]\n              : LinkSize[props.size])\n          }\n          height={props.size === undefined ? undefined : LinkHeight[props.size]}\n          weight={props.bold === undefined ? undefined : (props.bold ? 500 : 300)}\n          children={props.children}\n        />\n      )}\n    />\n  )\n}\n\nLink.displayName = 'Link'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/link/SectionLink.tsx",["1036","1037"],[],"import {\n  LinkControl,\n  LinkControlProps,\n  Lnk,\n  Section,\n  styled,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nexport interface SectionLinkProps {\n  tabIndex?: number\n  href: LinkControlProps['href']\n  target?: LinkControlProps['target']\n  download?: LinkControlProps['download']\n  rel?: LinkControlProps['rel']\n  title?: string\n  onClick?: LinkControlProps['onClick']\n  onFocus?: LinkControlProps['onFocus']\n  onBlur?: LinkControlProps['onBlur']\n  active?: boolean\n  flat?: boolean\n  children: FC<{\n    active: boolean\n    focus: boolean\n    hover: boolean\n  }>\n}\n\nconst SectionLnk = styled(Lnk)().withComponent(Section)\n\nSectionLnk.displayName = 'SectionLnk'\n\nexport const SectionLink: FC<SectionLinkProps> = (props) => (\n  <LinkControl\n    href={props.href}\n    target={props.target}\n    download={props.download}\n    rel={props.rel}\n    onClick={props.onClick}\n    onFocus={props.onFocus}\n    onBlur={props.onBlur}\n    children={(renderProps) => (\n      <SectionLnk\n        tag=\"a\"\n        flat={props.flat}\n        active={props.active ? props.active : renderProps.active}\n        hover={renderProps.hover}\n        focus={renderProps.focus}\n        tabIndex={props.tabIndex}\n        href={props.href}\n        target={props.target}\n        download={props.download}\n        rel={props.rel}\n        title={props.title}\n        onClick={renderProps.onClick}\n        onFocus={renderProps.onFocus}\n        onBlur={renderProps.onBlur}\n        onMouseEnter={renderProps.onMouseEnter}\n        onMouseLeave={renderProps.onMouseLeave}\n        onMouseUp={renderProps.onMouseUp}\n        onMouseDown={renderProps.onMouseDown}\n        children={props.children({\n          active: renderProps.active,\n          focus: renderProps.focus,\n          hover: renderProps.hover,\n        })}\n      />\n    )}\n  />\n)\n\nSectionLink.displayName = 'SectionLink'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/link/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/list/List.tsx",["1038","1039","1040","1041","1042"],[],"import { Box, Card, Flex, FlexItem, Stub } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { Paragraph, Text } from '../typography'\n\nexport interface ListProps {\n  children: ReactNode[]\n  type: 'step' | 'number' | 'bullet'\n  size?: 's' | 'm' | 'l'\n  stub?: boolean\n}\n\nconst ListType: Record<NonNullable<ListProps['type']>, 'ol' | 'ul'> = {\n  step: 'ol',\n  number: 'ol',\n  bullet: 'ul',\n}\n\nconst ListItemYMargin: Record<NonNullable<ListProps['type']>, number> = {\n  step: 2,\n  number: 0,\n  bullet: 0,\n}\n\nconst ItemIndent: Record<NonNullable<ListProps['type']>, number> = {\n  step: 3,\n  number: 4,\n  bullet: 4,\n}\n\nconst SpaceSize: Record<NonNullable<ListProps['size']>, number> = {\n  s: 2,\n  m: 3,\n  l: 4,\n}\n\nconst LetterSize: Record<NonNullable<ListProps['size']>, number> = {\n  s: 2,\n  m: 2.5,\n  l: 3,\n}\n\nconst StubNumberWidth: Record<NonNullable<ListProps['size']>, number> = {\n  s: 2,\n  m: 3,\n  l: 3,\n}\n\nconst StubNumberHeight: Record<NonNullable<ListProps['size']>, number> = {\n  s: 2,\n  m: 3,\n  l: 3,\n}\n\nconst StubNumberIndent: Record<NonNullable<ListProps['size']>, number> = {\n  s: 1.5,\n  m: 1.5,\n  l: 2.5,\n}\n\nconst StubBulletIndent: Record<NonNullable<ListProps['size']>, number> = {\n  s: 1.5,\n  m: 2,\n  l: 3,\n}\n\nexport const List: FC<ListProps> = ({\n  stub = false,\n  type,\n  size = 'm',\n  children,\n}) => (\n  <Box as={ListType[type]}>\n    {(stub ? [0, 0] : children).map((item, index, array) => (\n      <Flex key={index} as=\"li\" mt={index > 0 ? ItemIndent[type] : 0}>\n        {type === 'number' ? (\n          <FlexItem\n            width={\n              String(children.length).length * LetterSize[size] +\n              SpaceSize[size]\n            }\n            shrink={0}\n          >\n            {stub ? (\n              <Stub\n                height={StubNumberWidth[size]}\n                width={StubNumberHeight[size]}\n                top={StubNumberIndent[size]}\n                bottom={StubNumberIndent[size]}\n              />\n            ) : (\n              <Text size={size} bold={false}>\n                {index + 1}.\n              </Text>\n            )}\n          </FlexItem>\n        ) : (type === 'bullet' ? (\n          <FlexItem width={5} shrink={0}>\n            {stub ? (\n              <Stub\n                height={2}\n                width={2}\n                top={StubBulletIndent[size]}\n                bottom={StubNumberIndent[size]}\n              />\n            ) : (\n              <Text size={size} bold={false}>\n                &#8226;\n              </Text>\n            )}\n          </FlexItem>\n        ) : type === 'step' ? (\n          <Flex direction=\"column\" height=\"auto\" mr={5}>\n            <FlexItem shrink={0}>\n              {stub ? (\n                <Stub height={10} width={10} r={20} />\n              ) : (\n                <Card bg=\"#F5F5F5\" r=\"50%\" height={10} width={10}>\n                  <Flex align=\"center\" justify=\"center\" height={1} width={1}>\n                    <Text size={size} bold>\n                      {index + 1}\n                    </Text>\n                  </Flex>\n                </Card>\n              )}\n            </FlexItem>\n            {index + 1 === array.length ? null : (\n              <FlexItem\n                height={1}\n                minHeight={3}\n                align=\"center\"\n                justify=\"center\"\n                mt={3}\n              >\n                {stub ? (\n                  <Stub height={1} width=\"4px\" />\n                ) : (\n                  <Card bg=\"#F5F5F5\" height={1} width=\"4px\" />\n                )}\n              </FlexItem>\n            )}\n          </Flex>\n        ) : null)}\n        <FlexItem my={ListItemYMargin[type]} width={1}>\n          {stub ? (\n            type === 'step' ? (\n              <Paragraph size={size} stub />\n            ) : (\n              <Box width={1} maxWidth={33}>\n                <Text display=\"block\" size={size} stub />\n              </Box>\n            )\n          ) : (typeof item === 'string' ? (\n            <Paragraph size={size}>{item}</Paragraph>\n          ) : (\n            item\n          ))}\n        </FlexItem>\n      </Flex>\n    ))}\n  </Box>\n)\n\nList.displayName = 'List'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/list/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/logo-block-link/LogoBlockLink.tsx",["1043","1044","1045","1046","1047","1048","1049","1050"],[],"import {\n  Block,\n  Box,\n  Card,\n  Flex,\n  FlexItem,\n  Image,\n  LinkControlProps,\n  Pos,\n  Spacer,\n  Stub,\n} from '@qiwi/pijma-core'\nimport React, { FC, ReactElement, ReactNode } from 'react'\n\nimport { BlockLink } from '../link'\nimport { Paragraph, Text } from '../typography'\n\nexport interface LogoBlockLinkProps {\n  icon: ReactNode\n  title: string\n  description?: string\n  actions?: ReactElement[]\n  tabIndex?: number\n  href: LinkControlProps['href']\n  target?: LinkControlProps['target']\n  download?: LinkControlProps['download']\n  rel?: LinkControlProps['rel']\n  horizontal?: boolean\n  stub?: boolean\n  onClick?: LinkControlProps['onClick']\n  onFocus?: LinkControlProps['onFocus']\n  onBlur?: LinkControlProps['onBlur']\n}\n\nexport const LogoBlockLink: FC<LogoBlockLinkProps> = ({\n  title,\n  icon,\n  description,\n  actions,\n  ...props\n}) =>\n  props.stub ? (\n    <Block>\n      {props.horizontal ? (\n        <Box p={4}>\n          <Flex align=\"baseline\">\n            <FlexItem shrink={0} mr={4} width={12} height={12}>\n              <Stub height={12} width={12} r={24} />\n            </FlexItem>\n            <FlexItem align=\"center\" width={1}>\n              <Spacer size=\"xxs\">\n                <Box maxWidth={38} width={1} pr={4.5}>\n                  <Text display=\"block\" size=\"m\" stub />\n                </Box>\n                {description ? (\n                  <Box maxWidth={18} width={1}>\n                    <Text display=\"block\" size=\"s\" stub />\n                  </Box>\n                ) : null}\n              </Spacer>\n            </FlexItem>\n          </Flex>\n        </Box>\n      ) : (\n        <Pos type=\"relative\">\n          <Box p={4} height={description ? 60 : 55}>\n            <Box width={16} height={16} mt={7} mx=\"auto\">\n              <Stub height={16} width={16} r={32} />\n            </Box>\n            <Box mt={6} mx=\"auto\" maxWidth={38} width={1} pl={4.5} pr={4.5}>\n              <Text display=\"block\" size=\"m\" stub />\n            </Box>\n            {description ? (\n              <Box mt={1} mx=\"auto\" maxWidth={18} width={1}>\n                <Text display=\"block\" size=\"s\" stub />\n              </Box>\n            ) : null}\n          </Box>\n        </Pos>\n      )}\n    </Block>\n  ) : (\n    <BlockLink\n      title={title}\n      accent\n      tabIndex={props.tabIndex}\n      href={props.href}\n      target={props.target}\n      download={props.download}\n      rel={props.rel}\n      onClick={props.onClick}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n    >\n      {({ active, focus, hover }) =>\n        props.horizontal ? (\n          <Box p={4}>\n            <Flex align=\"baseline\">\n              <FlexItem shrink={0} mr={4} width={12} height={12}>\n                {typeof icon === 'string' ? (\n                  <Image src={icon} alt={title} width={12} height={12} />\n                ) : (\n                  icon\n                )}\n              </FlexItem>\n              <FlexItem align=\"center\">\n                <Spacer size=\"xxs\">\n                  <Paragraph\n                    clamp={description ? 1 : 2}\n                    color=\"default\"\n                    size=\"m\"\n                    bold\n                    children={title}\n                  />\n                  {description ? (\n                    <Paragraph\n                      clamp={1}\n                      color=\"support\"\n                      size=\"s\"\n                      children={description}\n                    />\n                  ) : null}\n                </Spacer>\n              </FlexItem>\n              {actions ? (\n                <Pos\n                  opacity={active || focus || hover ? 1 : 0}\n                  transition=\"opacity 300ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n                  type=\"absolute\"\n                  top={0}\n                  bottom={0}\n                  right={0}\n                >\n                  <Card\n                    display=\"flex\"\n                    height=\"100%\"\n                    bg=\"linear-gradient(to right, rgba(255, 255, 255, 0), #fff 48px)\"\n                  >\n                    <Flex pl={12} align=\"center\">\n                      {actions.map((action, index) => (\n                        <FlexItem\n                          mr={index === actions.length - 1 ? 4 : undefined}\n                          ml={index === 0 ? 'auto' : 3}\n                          key={index}\n                          children={action}\n                        />\n                      ))}\n                    </Flex>\n                  </Card>\n                </Pos>\n              ) : null}\n            </Flex>\n          </Box>\n        ) : (\n          <Pos type=\"relative\">\n            <Box p={4} height={description ? 60 : 55}>\n              <Box width={16} height={16} mt={7} mx=\"auto\">\n                {typeof icon === 'string' ? (\n                  <Image src={icon} alt={title} width={16} height={16} />\n                ) : (\n                  icon\n                )}\n              </Box>\n              <Box mt={6} mx=\"auto\">\n                <Paragraph\n                  clamp={description ? 2 : 3}\n                  color=\"default\"\n                  size=\"m\"\n                  bold\n                  align=\"center\"\n                  children={title}\n                />\n              </Box>\n              {description ? (\n                <Box mt={1} mx=\"auto\">\n                  <Paragraph\n                    clamp={2}\n                    color=\"support\"\n                    size=\"s\"\n                    align=\"center\"\n                    children={description}\n                  />\n                </Box>\n              ) : null}\n              {actions ? (\n                <Pos\n                  height={description ? 27 : 22}\n                  left={0}\n                  right={0}\n                  bottom={0}\n                  opacity={active || focus || hover ? 1 : 0}\n                  transition=\"opacity 300ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n                  type=\"absolute\"\n                >\n                  <Card height=\"100%\" bg=\"#fff\">\n                    <Flex\n                      pt={description ? 2 : undefined}\n                      justify=\"center\"\n                      align=\"center\"\n                    >\n                      {actions.map((action, index) => (\n                        <FlexItem\n                          ml={index === 0 ? undefined : 3}\n                          key={index}\n                          children={action}\n                        />\n                      ))}\n                    </Flex>\n                  </Card>\n                </Pos>\n              ) : null}\n            </Box>\n          </Pos>\n        )\n      }\n    </BlockLink>\n  )\n\nLogoBlockLink.displayName = 'LogoBlockLink'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/logo-block-link/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/logo-link/LogoLink.tsx",["1051","1052","1053"],[],"import {\n  Box,\n  Flex,\n  FlexItem,\n  Image,\n  LinkControlProps,\n  Spacer,\n} from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { SectionLink } from '../link'\nimport { Paragraph } from '../typography'\n\nexport interface LogoLinkProps {\n  icon: ReactNode\n  title: string\n  description?: string\n  tabIndex?: number\n  href: LinkControlProps['href']\n  target?: LinkControlProps['target']\n  download?: LinkControlProps['download']\n  rel?: LinkControlProps['rel']\n  horizontal?: boolean\n  onClick?: LinkControlProps['onClick']\n  onFocus?: LinkControlProps['onFocus']\n  onBlur?: LinkControlProps['onBlur']\n}\n\nexport const LogoLink: FC<LogoLinkProps> = ({\n  title,\n  icon,\n  description,\n  horizontal,\n  ...props\n}) => (\n  <SectionLink\n    href={props.href}\n    target={props.target}\n    download={props.download}\n    rel={props.rel}\n    onClick={props.onClick}\n    onFocus={props.onFocus}\n    onBlur={props.onBlur}\n  >\n    {() =>\n      horizontal ? (\n        <Box p={4}>\n          <Flex align=\"baseline\">\n            <FlexItem shrink={0} mr={4} width={12} height={12}>\n              {typeof icon === 'string' ? (\n                <Image src={icon} alt={title} width={12} height={12} />\n              ) : (\n                icon\n              )}\n            </FlexItem>\n            <FlexItem align=\"center\">\n              <Spacer size=\"xxs\">\n                <Paragraph\n                  clamp={description ? 1 : 2}\n                  color=\"default\"\n                  size=\"m\"\n                  bold\n                  children={title}\n                />\n                {description ? (\n                  <Paragraph\n                    clamp={1}\n                    color=\"support\"\n                    size=\"s\"\n                    children={description}\n                  />\n                ) : null}\n              </Spacer>\n            </FlexItem>\n          </Flex>\n        </Box>\n      ) : (\n        <Box p={4} height={description ? 53 : 48}>\n          <Box width={16} height={16} mx=\"auto\">\n            {typeof icon === 'string' ? (\n              <Image src={icon} alt={title} width={16} height={16} />\n            ) : (\n              icon\n            )}\n          </Box>\n          <Box mt={6}>\n            <Paragraph\n              clamp={description ? 2 : 3}\n              color=\"default\"\n              size=\"m\"\n              bold\n              align=\"center\"\n              children={title}\n            />\n          </Box>\n          {description ? (\n            <Box mt={1} mx=\"auto\">\n              <Paragraph\n                clamp={2}\n                color=\"support\"\n                size=\"s\"\n                align=\"center\"\n                children={description}\n              />\n            </Box>\n          ) : null}\n        </Box>\n      )\n    }\n  </SectionLink>\n)\n\nLogoLink.displayName = 'LogoLink'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/logo-link/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/markdown/Markdown.tsx",["1054","1055"],[],"import { Box, Image, MarkdownToJSX, styled } from '@qiwi/pijma-core'\nimport React, { Children, FC, Fragment, ReactNode } from 'react'\n\nimport { Link } from '../link'\nimport { List } from '../list'\nimport { Heading, Paragraph, Text } from '../typography'\n\nexport interface MarkdownProps {\n  size?: 's' | 'm' | 'l'\n  children: string\n}\n\nconst MarkdownBox = styled(Box)({\n  '&:nth-child(1)': {\n    marginTop: 0,\n  },\n})\n\nMarkdownBox.displayName = 'MarkdownBox'\n\nconst SizeMargin: { [size in NonNullable<SizeProps['size']>]: number } = {\n  s: 3,\n  m: 4,\n  l: 5,\n}\n\ninterface SizeProps {\n  size: 's' | 'm' | 'l'\n  children?: ReactNode\n}\n\nconst p: FC<SizeProps> = ({ children, size }) => (\n  <MarkdownBox mt={SizeMargin[size]}>\n    <Paragraph size={size} children={children} />\n  </MarkdownBox>\n)\n\np.displayName = 'p'\n\ninterface ImageProps extends SizeProps {\n  alt?: string\n  src: string\n}\n\nconst img: FC<ImageProps> = ({ src, alt }) => (\n  <Image src={src} alt={alt} width=\"auto\" height=\"auto\" />\n)\n\nimg.displayName = 'img'\n\ninterface LinkProps extends SizeProps {\n  title?: string\n  href?: string\n}\n\nconst a: FC<LinkProps> = ({ title, href, size, children }) => (\n  <Link title={title} href={href} size={size} children={children} />\n)\n\na.displayName = 'a'\n\nconst h1: FC<SizeProps> = ({ children }) => (\n  <MarkdownBox mt={11}>\n    <Heading size=\"1\" children={children} />\n  </MarkdownBox>\n)\n\nh1.displayName = 'h1'\n\nconst h2: FC<SizeProps> = ({ children }) => (\n  <MarkdownBox mt={11}>\n    <Heading size=\"2\" children={children} />\n  </MarkdownBox>\n)\n\nh2.displayName = 'h2'\n\nconst h3: FC<SizeProps> = ({ children }) => (\n  <MarkdownBox mt={8}>\n    <Heading size=\"3\" children={children} />\n  </MarkdownBox>\n)\n\nh3.displayName = 'h3'\n\nconst h4: FC<SizeProps> = ({ children }) => (\n  <MarkdownBox mt={7}>\n    <Heading size=\"4\" children={children} />\n  </MarkdownBox>\n)\n\nh4.displayName = 'h4'\n\nconst h5: FC<SizeProps> = ({ children }) => (\n  <MarkdownBox mt={6}>\n    <Heading size=\"5\" children={children} />\n  </MarkdownBox>\n)\n\nh5.displayName = 'h5'\n\nconst strong: FC<SizeProps> = ({ children }) => (\n  <Text bold children={children} />\n)\n\nstrong.displayName = 'strong'\n\nconst del: FC<SizeProps> = ({ children }) => (\n  <Text decoration=\"line-through\" children={children} />\n)\n\ndel.displayName = 'del'\n\nconst li: FC<SizeProps> = ({ size, children }) => (\n  <Fragment>\n    {Children.map(children, (child, i) => (\n      <MarkdownBox key={i} mt={SizeMargin[size]}>\n        {typeof child === 'string' ? (\n          <Paragraph key={i} size={size} children={child} />\n        ) : (\n          child\n        )}\n      </MarkdownBox>\n    ))}\n  </Fragment>\n)\n\nli.displayName = 'li'\n\nconst ul: FC<SizeProps> = ({ size, children }) => (\n  <MarkdownBox mt={SizeMargin[size]}>\n    <List size={size} type=\"bullet\" children={Children.toArray(children)} />\n  </MarkdownBox>\n)\n\nul.displayName = 'ul'\n\ninterface NumericListProps extends SizeProps {\n  start: number\n}\n\nconst ol: FC<NumericListProps> = ({ size, start, children }) => (\n  <MarkdownBox mt={SizeMargin[size]}>\n    <List\n      size={size}\n      type={start < 1000 ? 'number' : 'step'}\n      children={Children.toArray(children)}\n    />\n  </MarkdownBox>\n)\n\nol.displayName = 'ol'\n\nconst overrides: { [tag: string]: FC<any> } = {\n  p,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  a,\n  ul,\n  ol,\n  li,\n  strong,\n  del,\n  img,\n}\n\nexport const Markdown: FC<MarkdownProps> = ({ size = 'm', children }) => (\n  <MarkdownToJSX\n    children={children}\n    options={{\n      overrides: Object.fromEntries(Object.keys(overrides).map(\n        ( tag) => [tag, {\n              component: overrides[tag],\n              props: {\n                size,\n              },\n            }],\n      )),\n    }}\n  />\n)\n\nMarkdown.displayName = 'Markdown'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/markdown/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/menu/MenuItem.tsx",["1056","1057","1058","1059","1060"],[],"import {\n  Box,\n  Flex,\n  FlexItem,\n  Icon,\n  Image,\n  Section,\n  Stub,\n} from '@qiwi/pijma-core'\nimport React, { forwardRef, ReactNode } from 'react'\n\nimport { Paragraph, Text } from '../typography'\n\nexport interface MenuItemProps {\n  tag?: keyof JSX.IntrinsicElements\n  text: string\n  notes?: string\n  icon?: ReactNode\n  submenu?: boolean\n  round?: boolean\n  hover?: boolean\n  active?: boolean\n  focus?: boolean\n  size?: 's' | 'm'\n  stub?: boolean\n}\n\nconst IconSize: Record<NonNullable<MenuItemProps['size']>, number> = {\n  s: 6,\n  m: 12,\n}\n\nexport const MenuItem = forwardRef<HTMLDivElement, MenuItemProps>(\n  (\n    {\n      tag = 'div',\n      text,\n      notes,\n      icon,\n      submenu = false,\n      round = false,\n      hover = false,\n      active = false,\n      focus = false,\n      size = 's',\n      stub = false,\n      ...props\n    },\n    ref,\n  ) => (\n    <Section\n      tag={tag}\n      ref={ref}\n      active={active}\n      focus={focus}\n      hover={hover}\n      flat={!round}\n      {...props}\n    >\n      <Flex px={6} py={2} minHeight={14}>\n        {icon ? (\n          stub ? (\n            <FlexItem align={notes ? undefined : 'center'} shrink={0} mr={4}>\n              <Stub\n                r={IconSize[size] * 2}\n                width={IconSize[size]}\n                height={IconSize[size]}\n              />\n            </FlexItem>\n          ) : (\n            <FlexItem align={notes ? undefined : 'center'} shrink={0} mr={4}>\n              {typeof icon === 'string' ? (\n                <Image\n                  src={icon}\n                  width={IconSize[size]}\n                  height={IconSize[size]}\n                />\n              ) : (\n                icon\n              )}\n            </FlexItem>\n          )\n        ) : null}\n        <FlexItem align=\"center\" grow={1}>\n          <Flex justify=\"center\" direction=\"column\">\n            {stub ? (\n              <Box maxWidth={38} width={1}>\n                <Text display=\"block\" size=\"m\" stub />\n              </Box>\n            ) : (\n              <Paragraph clamp={icon && !notes ? 2 : undefined} bold>\n                {text}\n              </Paragraph>\n            )}\n            {notes ? (\n              stub ? (\n                <Box mt={1} width={1} maxWidth={18}>\n                  <Text display=\"block\" size=\"s\" stub />\n                </Box>\n              ) : (\n                <Box mt={1}>\n                  <Paragraph size=\"s\" color=\"support\">\n                    {notes}\n                  </Paragraph>\n                </Box>\n              )\n            ) : null}\n          </Flex>\n        </FlexItem>\n        {submenu ? (\n          <FlexItem align=\"center\" shrink={0} width={6} height={6} ml={3}>\n            <Icon name=\"angle-right\" />\n          </FlexItem>\n        ) : null}\n      </Flex>\n    </Section>\n  ),\n)\n\nMenuItem.displayName = 'MenuItem'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/menu/MenuLink.tsx",["1061","1062","1063"],[],"import { LinkControl, LinkControlProps, Lnk, styled } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { MenuItem } from '../menu'\n\nexport interface MenuLinkProps {\n  title: string\n  notes?: string\n  icon?: ReactNode\n  submenu?: boolean\n  active?: boolean\n  tabIndex?: number\n  href?: LinkControlProps['href']\n  target?: LinkControlProps['target']\n  download?: LinkControlProps['download']\n  rel?: LinkControlProps['rel']\n  size?: 's' | 'm'\n  stub?: boolean\n  onClick?: LinkControlProps['onClick']\n  onFocus?: LinkControlProps['onFocus']\n  onBlur?: LinkControlProps['onBlur']\n}\n\nconst MenuItemLnk = styled(Lnk)().withComponent(MenuItem)\n\nMenuItemLnk.displayName = 'MenuItemLnk'\n\nexport const MenuLink: FC<MenuLinkProps> = (props) =>\n  props.stub ? (\n    <MenuItem\n      stub\n      text={props.title}\n      notes={props.notes}\n      icon={props.icon}\n      submenu={props.submenu}\n      size={props.size}\n    />\n  ) : (\n    <LinkControl\n      href={props.href}\n      target={props.target}\n      download={props.download}\n      rel={props.rel}\n      onClick={props.onClick}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      children={(renderProps) => (\n        <MenuItemLnk\n          tag={props.href ? 'a' : undefined}\n          notes={props.notes}\n          text={props.title}\n          icon={props.icon}\n          submenu={props.submenu}\n          active={props.active ? props.active : renderProps.active}\n          hover={renderProps.hover}\n          focus={renderProps.focus}\n          tabIndex={props.tabIndex}\n          href={props.href}\n          title={props.href ? props.title : undefined}\n          target={props.href ? props.target : undefined}\n          download={props.href ? props.download : undefined}\n          rel={props.href ? props.rel : undefined}\n          size={props.size}\n          onClick={renderProps.onClick}\n          onFocus={renderProps.onFocus}\n          onBlur={renderProps.onBlur}\n          onMouseEnter={renderProps.onMouseEnter}\n          onMouseLeave={renderProps.onMouseLeave}\n          onMouseUp={renderProps.onMouseUp}\n          onMouseDown={renderProps.onMouseDown}\n        />\n      )}\n    />\n  )\n\nMenuLink.displayName = 'MenuLink'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/menu/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/modal/SimpleModal.tsx",["1064","1065"],[],"import {\n  Box,\n  Card,\n  css,\n  Icon,\n  Modal,\n  ModalProps,\n  Pos,\n  SimpleTransition,\n} from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nconst ContentTransition: ModalProps['transition'] = (props) => (\n  <SimpleTransition\n    {...props}\n    timeout={{\n      enter: 370,\n      exit: 250,\n    }}\n    enterClassName={(timeout: number) =>\n      css({\n        opacity: 1,\n        transform: 'translate3d(0, 0, 0)',\n        transition: `opacity ${timeout}ms ease, transform ${timeout}ms ease`,\n      })\n    }\n    exitClassName={(timeout: number) =>\n      css({\n        opacity: 0,\n        transform: 'translate3d(0, 35px, 0)',\n        transition: `opacity ${timeout}ms ease, transform ${timeout}ms ease`,\n      })\n    }\n  />\n)\n\nContentTransition.displayName = 'ContentTransition'\n\nconst BackdropTransition: ModalProps['backdropTransition'] = (props) => (\n  <SimpleTransition\n    {...props}\n    timeout={{\n      enter: 370,\n      exit: 250,\n    }}\n    enterClassName={(timeout: number) =>\n      css({\n        opacity: 1,\n        transition: `opacity ${timeout}ms ease`,\n      })\n    }\n    exitClassName={(timeout: number) =>\n      css({\n        opacity: 0,\n        transition: `opacity ${timeout}ms ease`,\n      })\n    }\n  />\n)\n\nBackdropTransition.displayName = 'BackdropTransition'\n\ninterface SimpleModalProps {\n  show: boolean\n  closable?: boolean\n  escapeClose?: boolean\n  backdropClose?: boolean\n  size: 's' | 'm' | 'l'\n  stub?: boolean\n  onShow?: () => void\n  onHide?: () => void\n  children?: ReactNode\n}\n\nconst ModalWidth: { [size in NonNullable<SimpleModalProps['size']>]: number } =\n  {\n    s: 95,\n    m: 145,\n    l: 170,\n  }\n\nexport const SimpleModal: FC<SimpleModalProps> = (props) =>\n  props.stub ? (\n    <Box display=\"none\">{props.children}</Box>\n  ) : (\n    <Modal\n      show={props.show}\n      keyboard={props.escapeClose}\n      onShow={props.onShow}\n      onHide={props.onHide}\n      transition={ContentTransition}\n      backdropTransition={BackdropTransition}\n      renderBackdrop={(backdropProps) => (\n        <Pos\n          type=\"fixed\"\n          zIndex={9999}\n          top={0}\n          right={0}\n          bottom={0}\n          left={0}\n          {...backdropProps}\n        >\n          <Card bg=\"rgba(255, 255, 255, 0.96)\" width={1} height={1} />\n        </Pos>\n      )}\n      renderDialog={(dialogProps) => (\n        <Pos\n          type=\"fixed\"\n          zIndex={9999}\n          top={0}\n          bottom={0}\n          left={0}\n          right={0}\n          height=\"100%\"\n          overflow=\"auto\"\n          css={{\n            textAlign: 'center',\n            '&:before': {\n              content: '\"\"',\n              display: 'inline-block',\n              height: '100%',\n              verticalAlign: 'middle',\n            },\n          }}\n          {...dialogProps}\n        >\n          <Pos\n            type=\"relative\"\n            display=\"inline-block\"\n            p={12}\n            css={{ verticalAlign: 'middle', textAlign: 'left' }}\n          >\n            <Card\n              role=\"document\"\n              s=\"0 20px 64px 8px rgba(0, 0, 0, 0.16)\"\n              r={10}\n              bg=\"#fff\"\n              pt={11}\n              pb={12}\n              px={11}\n              width={ModalWidth[props.size]}\n            >\n              {props.closable && props.onHide ? (\n                <Pos\n                  aria-label=\"close\"\n                  type=\"absolute\"\n                  top={16}\n                  right={16}\n                  width={6}\n                  height={6}\n                  cursor=\"pointer\"\n                  onClick={props.onHide}\n                  children={<Icon name=\"cross\" color=\"#000\" />}\n                />\n              ) : null}\n              {props.children}\n            </Card>\n          </Pos>\n        </Pos>\n      )}\n    />\n  )\n\nSimpleModal.displayName = 'SimpleModal'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/modal/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/nav-link/NavLink.tsx",["1066"],[],"import { LinkControl, Stub, TypoLnk } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nexport interface NavLinkProps {\n  onClick?: (\n    href?: string,\n    target?: string,\n    download?: string | boolean,\n    rel?: string,\n  ) => void\n  onFocus?: () => void\n  onBlur?: () => void\n  tabIndex?: number\n  href?: string\n  target?: string\n  download?: string | boolean\n  rel?: string\n  title?: string\n  stub?: boolean\n  children?: ReactNode\n}\n\nexport const NavLink: FC<NavLinkProps> = (props) =>\n  props.stub ? (\n    <Stub top={1.5} bottom={1.5} height={2} width={1} />\n  ) : (\n    <LinkControl\n      onClick={props.onClick}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      href={props.href}\n      target={props.target}\n      download={props.download}\n      rel={props.rel}\n      children={(renderProps) => (\n        <TypoLnk\n          tabIndex={props.tabIndex}\n          href={props.href}\n          onClick={renderProps.onClick}\n          onFocus={renderProps.onFocus}\n          onBlur={renderProps.onBlur}\n          onMouseEnter={renderProps.onMouseEnter}\n          onMouseLeave={renderProps.onMouseLeave}\n          onMouseUp={renderProps.onMouseUp}\n          onMouseDown={renderProps.onMouseDown}\n          color={renderProps.hover || renderProps.focus ? '#000' : '#666'}\n          transition=\"all 100ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n          cursor=\"pointer\"\n          decoration=\"none\"\n          target={props.target}\n          download={props.download}\n          rel={props.rel}\n          title={props.title}\n          size={3.5}\n          height={5}\n          weight={300}\n          children={props.children}\n        />\n      )}\n    />\n  )\n\nNavLink.displayName = 'NavLink'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/nav-link/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/notice/Notice.tsx",["1067","1068","1069","1070"],[],"import { Flex, FlexItem, Spacer } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { Heading, Paragraph } from '../typography/'\n\nexport interface NoticeProps {\n  icon: ReactNode\n  title?: ReactNode\n  children?: ReactNode\n}\n\nexport const Notice: FC<NoticeProps> = ({ icon, title, children }) => (\n  <Flex>\n    <FlexItem shrink={0} basis={6} mr={title ? 4 : 2} children={icon} />\n    {title || children ? (\n      <FlexItem>\n        <Spacer size=\"xs\">\n          {title ? <Heading size=\"4\" children={title} /> : null}\n          {children ? <Paragraph children={children} /> : null}\n        </Spacer>\n      </FlexItem>\n    ) : null}\n  </Flex>\n)\n\nNotice.displayName = 'Notice'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/notice/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/oops/Oops.tsx",["1071","1072","1073"],[],"import { Card, Flex, FlexItem, Typo } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { Paragraph, Title } from '../typography'\n\nexport interface OopsProps {\n  logo?: ReactNode\n  error: ReactNode\n  title: string\n  content: ReactNode\n  footer?: ReactNode\n}\n\nexport const Oops: FC<OopsProps> = ({\n  logo,\n  error,\n  title,\n  content,\n  footer,\n}) => (\n  <Card minWidth={295} width=\"100%\" py={22} minHeight=\"100%\" bg=\"#fff\">\n    <Flex mx=\"auto\" width={235} direction=\"column\">\n      {logo ? <FlexItem shrink={0} children={logo} /> : null}\n      <FlexItem my={30}>\n        <Flex align=\"center\">\n          <FlexItem shrink={0}>\n            {typeof error === 'string' ? (\n              <Typo\n                as=\"p\"\n                css={{\n                  overflow: 'unset',\n                  fontSize: '220px',\n                  fontWeight: 900,\n                  color: '#fff',\n                  textShadow: '0 12px 36px rgba(0, 0, 0, 0.1)',\n                }}\n                children={error}\n              />\n            ) : (\n              error\n            )}\n          </FlexItem>\n          <FlexItem ml={11} width={1}>\n            <Flex direction=\"column\">\n              <FlexItem>\n                <Title size=\"2\" children={title} />\n              </FlexItem>\n              <FlexItem mt={6}>\n                {typeof content === 'string' ? (\n                  <Paragraph children={content} />\n                ) : (\n                  content\n                )}\n              </FlexItem>\n            </Flex>\n          </FlexItem>\n        </Flex>\n      </FlexItem>\n      {footer ? (\n        <FlexItem\n          shrink={0}\n          children={\n            typeof footer === 'string' ? (\n              <Paragraph align=\"center\" color=\"support\" children={footer} />\n            ) : (\n              footer\n            )\n          }\n        />\n      ) : null}\n    </Flex>\n  </Card>\n)\n\nOops.displayName = 'Oops'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/oops/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/pagination/Pagination.tsx",["1074","1075"],[],"import { Card, Icon, PaginationControl } from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { Text } from '../typography'\nimport { PaginationLink } from './PaginationLink'\n\nexport interface PaginationProps {\n  total: number\n  active: number\n  count?: number\n  shadowed?: boolean\n  href?: (page: number) => string\n  stub?: boolean\n  onChange?: (index: number) => void\n}\n\nexport const Pagination: FC<PaginationProps> = ({\n  total,\n  count = 5,\n  shadowed = false,\n  active,\n  href,\n  stub = false,\n  onChange,\n}) => (\n  <PaginationControl\n    total={total}\n    count={count}\n    active={active}\n    href={href}\n    onChange={onChange}\n    children={(renderProps) => (\n      <Card\n        bg=\"#fff\"\n        s={shadowed ? '0 1px 2px 0 rgba(0,0,0,0.12)' : '0 0 0 1px #e6e6e6'}\n        height={12}\n        display=\"inline-flex\"\n        r={10}\n        overflow=\"hidden\"\n      >\n        <PaginationLink\n          page={1}\n          disabled={renderProps.active === 1}\n          width={18}\n          shadowed={shadowed}\n          href={href ? href(1) : undefined}\n          stub={stub}\n          onClick={renderProps.onPageClick(1, renderProps.active === 1)}\n          children={({ disabled }) => (\n            <Icon\n              name=\"angle-double-left-small\"\n              color={disabled ? '#ccc' : '#000'}\n            />\n          )}\n        />\n        <PaginationLink\n          page={renderProps.prev}\n          disabled={renderProps.active === 1}\n          shadowed={shadowed}\n          href={href ? href(renderProps.prev) : undefined}\n          stub={stub}\n          onClick={renderProps.onPageClick(\n            renderProps.prev,\n            renderProps.active === 1,\n          )}\n          children={({ disabled }) => (\n            <Icon name=\"angle-small-left\" color={disabled ? '#ccc' : '#000'} />\n          )}\n        />\n        {renderProps.pages.map((page) => (\n          <PaginationLink\n            key={page}\n            page={page}\n            disabled={false}\n            shadowed={shadowed}\n            href={href ? href(page) : undefined}\n            stub={stub}\n            onClick={renderProps.onPageClick(page, false)}\n            children={() => (\n              <Text\n                bold={false}\n                size=\"m\"\n                color={renderProps.active === page ? 'warning' : 'default'}\n                children={page}\n              />\n            )}\n          />\n        ))}\n        <PaginationLink\n          page={renderProps.next}\n          disabled={renderProps.active === renderProps.total}\n          shadowed={shadowed}\n          href={href ? href(renderProps.next) : undefined}\n          stub={stub}\n          onClick={renderProps.onPageClick(\n            renderProps.next,\n            renderProps.active === renderProps.total,\n          )}\n          children={({ disabled }) => (\n            <Icon name=\"angle-small-right\" color={disabled ? '#ccc' : '#000'} />\n          )}\n        />\n        <PaginationLink\n          page={renderProps.total}\n          disabled={renderProps.active === renderProps.total}\n          width={18}\n          shadowed={shadowed}\n          href={href ? href(renderProps.total) : undefined}\n          stub={stub}\n          onClick={renderProps.onPageClick(\n            renderProps.total,\n            renderProps.active === renderProps.total,\n          )}\n          children={({ disabled }) => (\n            <Icon\n              name=\"angle-double-right-small\"\n              color={disabled ? '#ccc' : '#000'}\n            />\n          )}\n        />\n      </Card>\n    )}\n  />\n)\n\nPagination.displayName = 'Pagination'\n\nPagination.defaultProps = {\n  shadowed: false,\n  count: 5,\n  stub: false,\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/pagination/PaginationLink.tsx",["1076","1077"],[],"import { CardLnk, Flex, LinkControl, Stub, Value } from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nexport interface PaginationLinkProps {\n  page: number\n  disabled: boolean\n  width?: Value\n  href?: string\n  shadowed?: boolean\n  stub?: boolean\n  onClick?: (\n    href?: string,\n    target?: string,\n    download?: string | boolean,\n    rel?: string,\n  ) => void\n  children: FC<{\n    disabled: boolean\n    hover: boolean\n    focus: boolean\n  }>\n}\n\nexport const PaginationLink: FC<PaginationLinkProps> = (props) => (\n  <LinkControl\n    href={props.stub ? undefined : props.href}\n    onClick={props.stub ? undefined : props.onClick}\n    children={(renderProps) => (\n      <CardLnk\n        as={props.stub ? 'div' : 'a'}\n        transition=\"all 100ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n        height={12}\n        width={props.width}\n        display=\"inline-flex\"\n        cursor={props.stub || props.disabled ? 'default' : 'pointer'}\n        bg={\n          (renderProps.hover || renderProps.focus) && !props.disabled\n            ? '#f5f5f5'\n            : undefined\n        }\n        s={\n          (renderProps.hover || renderProps.focus) && !props.disabled\n            ? (props.shadowed\n              ? 'inset 0 1px 0 0 #e6e6e6, 0 -1px 0 1px #e6e6e6'\n              : '0px -1px 0 1px #e6e6e6')\n            : '1px 0 0 #e6e6e6'\n        }\n        href={props.stub ? undefined : props.href}\n        onClick={props.stub ? undefined : renderProps.onClick}\n        onFocus={props.stub ? undefined : renderProps.onFocus}\n        onBlur={props.stub ? undefined : renderProps.onBlur}\n        onMouseEnter={props.stub ? undefined : renderProps.onMouseEnter}\n        onMouseLeave={props.stub ? undefined : renderProps.onMouseLeave}\n        onMouseUp={props.stub ? undefined : renderProps.onMouseUp}\n        onMouseDown={props.stub ? undefined : renderProps.onMouseDown}\n      >\n        <Flex\n          align=\"center\"\n          justify=\"center\"\n          width={1}\n          height={1}\n          children={\n            props.stub ? (\n              <Stub height={6} width={6} r={12} />\n            ) : (\n              props.children({\n                disabled: props.disabled || false,\n                hover: renderProps.hover,\n                focus: renderProps.focus,\n              })\n            )\n          }\n        />\n      </CardLnk>\n    )}\n  />\n)\n\nPaginationLink.displayName = 'PaginationLink'\n\nPaginationLink.defaultProps = {\n  width: 12,\n  shadowed: false,\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/pagination/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/password-field/PasswordField.tsx",["1078","1079","1080"],[],"import {\n  BasicInput,\n  Box,\n  Icon,\n  InputField,\n  PasswordFieldControl,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { PasswordFieldProps } from './PasswordFieldProps'\n\nexport const PasswordField: FC<PasswordFieldProps> = (props) => (\n  <PasswordFieldControl\n    onChange={props.onChange}\n    onFocus={props.onFocus}\n    onBlur={props.onBlur}\n    onKeyDown={props.onKeyDown}\n    onKeyUp={props.onKeyUp}\n    onToggle={props.onToggle}\n    children={(renderProps) => (\n      <InputField\n        title={props.title}\n        active={renderProps.focused || !!props.value || !!props.placeholder}\n        input={\n          <BasicInput\n            type={props.viewed && !renderProps.hidden ? 'text' : 'password'}\n            value={props.value}\n            name={props.name}\n            autoComplete={props.autoComplete}\n            autoFocus={props.autoFocus}\n            placeholder={props.placeholder}\n            inputMode={props.inputMode}\n            disabled={props.disabled}\n            pr={props.hint || props.viewed ? 7 : undefined}\n            error={!!props.error}\n            focused={renderProps.focused}\n            maxLength={props.maxLength}\n            mask={props.mask}\n            pipe={props.pipe}\n            onChange={renderProps.onChange}\n            onFocus={renderProps.onFocus}\n            onBlur={renderProps.onBlur}\n            onKeyDown={renderProps.onKeyDown}\n            onKeyUp={renderProps.onKeyUp}\n          />\n        }\n        hint={\n          props.viewed ? (\n            <Box\n              display=\"inline-block\"\n              width={1}\n              height={1}\n              onClick={renderProps.onToggle}\n              children={\n                <Icon\n                  name={renderProps.hidden ? 'eye-closed' : 'eye-opened'}\n                  color={props.disabled ? '#666' : '#000'}\n                />\n              }\n            />\n          ) : (props.hint ? (\n            props.hint\n          ) : null)\n        }\n        error={props.error}\n        help={props.help}\n        action={props.action}\n      />\n    )}\n  />\n)\n\nPasswordField.displayName = 'PasswordField'\n\nPasswordField.defaultProps = {\n  tabIndex: 0,\n  viewed: true,\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/password-field/PasswordFieldProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/password-field/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/phone-field/PhoneField.tsx",["1081","1082","1083","1084"],[],"import {\n  BasicInput,\n  Box,\n  Card,\n  Flag,\n  Flex,\n  FlexItem,\n  InputField,\n  MenuControl,\n  PhoneFieldControl,\n  Pos,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { DropDown } from '../drop-down'\nimport { Paragraph } from '../typography'\nimport { PhoneFieldProps } from './PhoneFieldProps'\n\nexport const PhoneField: FC<PhoneFieldProps> = ({\n  tabIndex = 0,\n  code = 'ru',\n  ...props\n}) =>\n  props.stub ? (\n    <InputField\n      stub\n      input={false}\n      active={false}\n      title={props.title}\n      help={props.help}\n      hint={props.hint}\n      icon=\"icon\"\n    />\n  ) : (\n    <PhoneFieldControl\n      value={props.value}\n      countries={props.countries}\n      hideOnBlur={true}\n      onChange={props.onChange}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      children={(renderProps) => (\n        <MenuControl\n          count={props.countries.length}\n          onSelect={renderProps.onSelectCountry}\n          children={(menuRenderProps) => (\n            <Pos type=\"relative\" ref={renderProps.containerRef}>\n              <InputField\n                title={props.title}\n                active={\n                  renderProps.focused || !!props.value || !!props.placeholder\n                }\n                input={\n                  <BasicInput\n                    ref={renderProps.inputRef}\n                    type=\"tel\"\n                    value={renderProps.value}\n                    name={props.name}\n                    mask={renderProps.mask}\n                    autoComplete={props.autoComplete}\n                    autoFocus={props.autoFocus}\n                    placeholder={props.placeholder}\n                    inputMode={props.inputMode}\n                    disabled={props.disabled}\n                    pr={props.hint ? 7 : undefined}\n                    pl={9}\n                    error={!!props.error}\n                    focused={renderProps.focused}\n                    maxLength={props.maxLength}\n                    onChange={renderProps.onChange}\n                    onFocus={renderProps.onFocus}\n                    onBlur={renderProps.onBlur}\n                    onKeyDown={\n                      renderProps.showCountries\n                        ? menuRenderProps.onKeyDown\n                        : undefined\n                    }\n                  />\n                }\n                hint={props.hint}\n                icon={\n                  <Box\n                    cursor=\"pointer\"\n                    width={6}\n                    height={4}\n                    my={1}\n                    onClick={renderProps.onFlagClick}\n                    onMouseDown={renderProps.onFlagMouseDown}\n                    children={<Flag code={renderProps.code || code} />}\n                  />\n                }\n                error={props.error}\n                help={props.help}\n                action={props.action}\n              />\n              <DropDown\n                minWidth={1}\n                offset={4}\n                container={() => renderProps.containerRef.current}\n                target={() => renderProps.inputRef.current!}\n                show={renderProps.showCountries}\n                onHide={renderProps.onCountriesHide}\n              >\n                <Card\n                  ref={menuRenderProps.containerRef}\n                  s=\"0 28px 52px 0 rgba(0, 0, 0, 0.16)\"\n                  bg=\"#fff\"\n                  r={10}\n                  py={3}\n                  minWidth={1}\n                  maxHeight={110}\n                  overflow=\"auto\"\n                  mx={-6}\n                >\n                  {menuRenderProps.items.map((country, index) => (\n                    <Card\n                      key={index}\n                      ref={country.ref}\n                      px={6}\n                      cursor=\"pointer\"\n                      bg={\n                        country.selected\n                          ? '#E6E6E6'\n                          : (country.focused\n                          ? '#F5F5F5'\n                          : '#FFF')\n                      }\n                      onClick={country.onClick}\n                      onMouseEnter={country.onMouseEnter}\n                    >\n                      <Flex py={3} align=\"center\" wrap=\"nowrap\">\n                        <FlexItem shrink={0} mr={3}>\n                          <Box width={6} height={4} my={1}>\n                            <Flag code={props.countries[index].code} />\n                          </Box>\n                        </FlexItem>\n                        <FlexItem width={16} shrink={0}>\n                          <Paragraph bold>\n                            {`+${props.countries[index].mask.replace(\n                              /\\D/g,\n                              '',\n                            )}`}\n                          </Paragraph>\n                        </FlexItem>\n                        <FlexItem shrink={0}>\n                          <Paragraph bold>\n                            {props.countries[index].name}\n                          </Paragraph>\n                        </FlexItem>\n                      </Flex>\n                    </Card>\n                  ))}\n                </Card>\n              </DropDown>\n            </Pos>\n          )}\n        />\n      )}\n    />\n  )\n\nPhoneField.displayName = 'PhoneField'\n\nPhoneField.defaultProps = {\n  tabIndex: 0,\n  code: 'ru',\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/phone-field/PhoneFieldProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/phone-field/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/progress-bar/ProgressBar.tsx",["1085"],[],"import { Card, Stub } from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nexport interface ProgressBarProps {\n  value: number\n  disabled?: boolean\n  stub?: boolean\n}\n\nexport const ProgressBar: FC<ProgressBarProps> = ({\n  value,\n  disabled = false,\n  stub = false,\n}) =>\n  stub ? (\n    <Stub height={10} width={1} r={20} />\n  ) : (\n    <Card bg=\"#f5f5f5\" height={10} r={20} p={2}>\n      <Card\n        bg={disabled ? '#ccc' : 'linear-gradient(268deg, #ff8c00 99%, #ff7700)'}\n        height={6}\n        width={value}\n        transition=\"width 300ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n        minWidth={6}\n        r={12}\n      />\n    </Card>\n  )\n\nProgressBar.displayName = 'ProgressBar'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/progress-bar/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/radio-field/RadioField.tsx",["1086","1087","1088","1089","1090","1091"],[],"import {\n  Box,\n  Flex,\n  OptionControl,\n  OptionField,\n  OptionFieldItem,\n  Radio,\n  RadioControl,\n  Spacer,\n  Stub,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { RadioFieldOptionModel } from './RadioFieldOptionModel'\nimport { RadioFieldProps } from './RadioFieldProps'\n\nexport const RadioField: FC<\n  RadioFieldProps<RadioFieldOptionModel<any>, any>\n> = (props) =>\n  props.stub ? (\n    <Box maxWidth={1}>\n      <Stub width={24} height={3} top={2} bottom={4} />\n      <Spacer size=\"s\">\n        {(Array.isArray(props.stub) ? props.stub : [33, 38, 30]).map(\n          (width: number, id: number) => (\n            <Flex key={id} align=\"center\">\n              <Stub width={5} height={5} right={3} left={0.5} r={10} />\n              <Box width={width} maxWidth={1}>\n                <Stub width={1} height={2} top={2} bottom={2} />\n              </Box>\n            </Flex>\n          ),\n        )}\n      </Spacer>\n    </Box>\n  ) : (\n    <RadioControl<RadioFieldOptionModel<any>, any>\n      tabIndex={props.tabIndex}\n      options={props.options}\n      value={props.value}\n      equals={props.equals}\n      onChange={props.onChange}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      children={(renderProps) => (\n        <OptionField\n          title={props.title}\n          hint={props.hint}\n          help={props.help}\n          tabIndex={renderProps.tabIndex}\n          autoFocus={props.autoFocus}\n          onFocus={renderProps.onFocus}\n          onBlur={renderProps.onBlur}\n          onKeyDown={renderProps.onKeyDown}\n          children={renderProps.options.map((option, index) => (\n            <OptionControl<any>\n              key={index}\n              disabled={option.disabled}\n              value={option.value}\n              onClick={option.onClick}\n              onMouseEnter={option.onMouseEnter}\n              onMouseLeave={renderProps.onMouseLeave}\n              children={(renderOptionProps) => (\n                <OptionFieldItem\n                  disabled={option.disabled}\n                  icon={\n                    <Box width={6}>\n                      <Radio\n                        disabled={option.disabled}\n                        checked={option.checked}\n                        focused={option.focused}\n                      />\n                    </Box>\n                  }\n                  label={option.label}\n                  description={option.description}\n                  onClick={renderOptionProps.onClick}\n                  onMouseEnter={renderOptionProps.onMouseEnter}\n                  onMouseLeave={renderOptionProps.onMouseLeave}\n                />\n              )}\n            />\n          ))}\n        />\n      )}\n    />\n  )\n\nRadioField.displayName = 'RadioField'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/radio-field/RadioFieldOptionModel.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/radio-field/RadioFieldProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/radio-field/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/rating/Rating.tsx",["1092","1093","1094"],[],"import { Flex, FlexItem, Icon, RatingControl, Stub } from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nexport interface RatingProps {\n  value?: number\n  size?: 's' | 'm'\n  disabled?: boolean\n  count?: number\n  stub?: boolean\n  onChange?: (value: number) => void\n}\n\nconst RatingSize: Record<NonNullable<RatingProps['size']>, number> = {\n  s: 6,\n  m: 12,\n}\n\nconst RatingIndent: Record<NonNullable<RatingProps['size']>, number> = {\n  s: 2,\n  m: 5,\n}\n\nexport const Rating: FC<RatingProps> = ({\n  value = 0,\n  size = 'm',\n  disabled = false,\n  count = 5,\n  stub = false,\n  onChange,\n}) =>\n  stub ? (\n    <Flex>\n      {new Array(count).fill(1).map((_, index) => (\n        <FlexItem key={index} pl={index === 0 ? 0 : RatingIndent[size]}>\n          <Stub height={RatingSize[size]} width={RatingSize[size]} r=\"50%\" />\n        </FlexItem>\n      ))}\n    </Flex>\n  ) : (\n    <RatingControl\n      value={value}\n      count={count}\n      disabled={disabled}\n      onChange={onChange}\n      children={(renderProps) => (\n        <Flex>\n          {renderProps.items.map((item, index) => (\n            <FlexItem\n              key={index}\n              cursor={disabled ? undefined : 'pointer'}\n              pl={index === 0 ? 0 : RatingIndent[size] / 2}\n              pr={index === count - 1 ? 0 : RatingIndent[size] / 2}\n              onClick={item.onClick}\n              onMouseMove={item.onMouseEnter}\n              onMouseOut={item.onMouseLeave}\n            >\n              <Icon\n                name=\"star-solid\"\n                size={RatingSize[size]}\n                color={item.active ? '#ff8c00' : '#cccccc'}\n              />\n            </FlexItem>\n          ))}\n        </Flex>\n      )}\n    />\n  )\n\nRating.displayName = 'Rating'\n\nRating.defaultProps = {\n  value: 0,\n  size: 'm',\n  disabled: false,\n  count: 5,\n  stub: false,\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/rating/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/select-field/SelectField.tsx",["1095","1096","1097","1098"],[],"import {\n  Box,\n  Card,\n  CardPos,\n  css,\n  Icon,\n  InputField,\n  MenuControl,\n  OptionModel,\n  Overlay,\n  OverlayProps,\n  Pos,\n  SelectFieldControl,\n  SelectInput,\n  SimpleTransition,\n  styled,\n} from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { MenuItem } from '../menu'\n\nconst CardMenuItem = styled(Card)().withComponent(MenuItem)\n\nCardMenuItem.displayName = 'CardMenuItem'\n\nexport interface SelectFieldProps<I extends OptionModel<V>, V> {\n  items: I[]\n  title: string\n  value: V\n  stub?: boolean\n  tabIndex?: number\n  error?: ReactNode\n  disabled?: boolean\n  name?: string\n  autoFocus?: boolean\n  onChange: (value: V) => void\n  equals?: (a: V, b: V) => boolean\n  onFocus?: () => void\n  onBlur?: () => void\n  onHide?: () => void\n}\n\nexport interface SelectFieldItemModel<V> extends OptionModel<V> {\n  text: string\n}\n\nconst Transition: OverlayProps['transition'] = (props) => (\n  <SimpleTransition\n    {...props}\n    timeout={{\n      enter: 150,\n      exit: 150,\n    }}\n    enteringClassName={(timeout: number) =>\n      css({\n        opacity: 0,\n        transform: `translateY(${-12}px)`,\n        transition: `opacity ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1), transform ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1)`,\n      })\n    }\n    enteredClassName={(timeout: number) =>\n      css({\n        opacity: 1,\n        transform: `translateY(${0}px)`,\n        transition: `opacity ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1), transform ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1)`,\n      })\n    }\n    exitingClassName={(timeout: number) =>\n      css({\n        opacity: 0,\n        transform: `translateY(${-12}px)`,\n        transition: `opacity ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1), transform ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1)`,\n      })\n    }\n    exitedClassName={(timeout: number) =>\n      css({\n        opacity: 0,\n        transform: `translateY(${-12}px)`,\n        transition: `opacity ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1), transform ${timeout}ms cubic-bezier(0.4, 0.0, 0.2, 1)`,\n      })\n    }\n  />\n)\n\nTransition.displayName = 'Transition'\n\nexport const SelectField: FC<\n  SelectFieldProps<SelectFieldItemModel<any>, any>\n> = (props) =>\n  props.stub ? (\n    <InputField\n      active={false}\n      input={false}\n      title={props.title}\n      error={props.error}\n      stub\n    />\n  ) : (\n    <SelectFieldControl\n      value={props.value}\n      items={props.items}\n      disabled={props.disabled}\n      equals={props.equals}\n      onChange={props.onChange}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      onHide={props.onHide}\n      children={(renderProps) => (\n        <MenuControl\n          count={props.items.length}\n          selected={renderProps.select}\n          onKeyDown={renderProps.onKeyDown}\n          onSelect={renderProps.onItemSelect}\n          children={(menuRenderProps) => (\n            <CardPos ref={renderProps.containerRef} type=\"relative\">\n              <Box ref={renderProps.targetRef}>\n                <Pos\n                  type=\"absolute\"\n                  top={4}\n                  right={0}\n                  children={<Icon name=\"angle-down\" color=\"#000\" />}\n                  transform={`rotate(${renderProps.show ? 180 : 0}deg)`}\n                  transition=\"transform 0.3s cubic-bezier(0.4, 0.0, 0.2, 1)\"\n                />\n                <InputField\n                  title={props.title}\n                  active={renderProps.select !== undefined}\n                  error={props.error}\n                  input={\n                    <SelectInput\n                      value={\n                        renderProps.select !== undefined &&\n                        props.items[renderProps.select]\n                          ? props.items[renderProps.select].text\n                          : ''\n                      }\n                      focused={renderProps.focused}\n                      error={!!props.error}\n                      tabIndex={props.tabIndex}\n                      disabled={props.disabled}\n                      autoFocus={props.autoFocus}\n                      name={props.name}\n                      onFocus={renderProps.onFocus}\n                      onBlur={renderProps.onBlur}\n                      onKeyDown={\n                        renderProps.show\n                          ? menuRenderProps.onKeyDown\n                          : renderProps.onKeyDown\n                      }\n                      onClick={renderProps.onActive}\n                    />\n                  }\n                />\n              </Box>\n              <Overlay\n                show={renderProps.show}\n                placement=\"bottom\"\n                target={() => renderProps.targetRef.current!}\n                container={() => renderProps.containerRef.current}\n                transition={Transition}\n                popperConfig={{\n                  modifiers: [\n                    {\n                      name: 'preventOverflow',\n                      enabled: false,\n                    },\n                  ],\n                }}\n                children={(overlayRenderProps) => (\n                  <CardPos\n                    ref={overlayRenderProps.props.ref}\n                    css={overlayRenderProps.props.style}\n                    height={1}\n                    width=\"calc(100% + 48px)\"\n                    mt={-2}\n                    zIndex={999}\n                  >\n                    <CardPos\n                      ref={menuRenderProps.containerRef}\n                      r=\"10px\"\n                      s=\"0 20px 64px 0 rgba(0, 0, 0, 0.16)\"\n                      bg=\"#fff\"\n                      overflow=\"auto\"\n                      minHeight={1}\n                      maxHeight={104}\n                      pt={3}\n                      pb={3}\n                    >\n                      {menuRenderProps.items.map((item, key) => (\n                        <CardMenuItem\n                          key={key}\n                          ref={item.ref}\n                          cursor=\"pointer\"\n                          text={props.items[key].text}\n                          hover={item.focused}\n                          active={item.selected}\n                          focus={item.selected}\n                          onClick={item.onClick}\n                          onMouseDown={item.onMouseDown}\n                          onMouseEnter={item.onMouseEnter}\n                        />\n                      ))}\n                    </CardPos>\n                  </CardPos>\n                )}\n              />\n            </CardPos>\n          )}\n        />\n      )}\n    />\n  )\n\nSelectField.displayName = 'SelectField'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/select-field/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/status/Status.tsx",["1099","1100","1101","1102","1103","1104"],[],"import { Flex, FlexItem } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { Heading, Paragraph } from '../typography/'\n\nexport interface StatusProps {\n  icon?: ReactNode\n  title?: string\n  actions?: ReactNode\n  content?: ReactNode\n  children?: ReactNode\n}\n\nexport const Status: FC<StatusProps> = ({\n  icon,\n  title,\n  actions,\n  content,\n  children,\n}) => (\n  <Flex align=\"center\" direction=\"column\">\n    {icon ? <FlexItem height={16} width={16} mb={8} children={icon} /> : null}\n    {title ? <Heading align=\"center\" size=\"4\" children={title} /> : null}\n    {content ? (\n      <FlexItem width={1} mt={title ? 2 : 0}>\n        {typeof content === 'string' ? (\n          <Paragraph align=\"center\" size=\"m\" children={content} />\n        ) : (\n          content\n        )}\n      </FlexItem>\n    ) : null}\n    {actions ? (\n      <FlexItem mt={content || title ? 4 : 0} children={actions} />\n    ) : null}\n    {children ? <FlexItem width={1} mt={2} children={children} /> : null}\n  </Flex>\n)\n\nStatus.displayName = 'Status'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/status/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/suggest-field/SuggestField.tsx",["1105","1106","1107","1108","1109","1110","1111","1112","1113"],[],"import {\n  BasicInput,\n  Box,\n  Card,\n  CardPos,\n  Image,\n  InputField,\n  MenuControl,\n  Pos,\n  Spacer,\n  styled,\n  SuggestControl,\n} from '@qiwi/pijma-core'\nimport React, { Fragment } from 'react'\n\nimport { DropDown } from '../drop-down'\nimport { Link } from '../link'\nimport { MenuItem } from '../menu'\nimport { Paragraph } from '../typography'\nimport { SuggestFieldOptionModel } from './SuggestFieldOptionModel'\nimport { SuggestFieldProps } from './SuggestFieldProps'\n\nconst CardMenuItem = styled(Card)().withComponent(MenuItem)\n\nCardMenuItem.displayName = 'CardMenuItem'\n\nexport const SuggestField = <V extends {}>({\n  equals = (a: V, b: V) => a === b,\n  ...props\n}: SuggestFieldProps<SuggestFieldOptionModel<V>, V>) =>\n  props.stub ? (\n    <InputField\n      stub\n      input={false}\n      active={false}\n      title={props.title}\n      help={props.help}\n      hint={props.hint}\n    />\n  ) : (\n    <SuggestControl<V, SuggestFieldOptionModel<V>>\n      value={props.value}\n      suggest={props.suggest}\n      items={props.items}\n      empty={props.empty}\n      equals={equals}\n      onRequest={props.onRequest}\n      onChange={props.onChange}\n      onBlur={props.onBlur}\n      onFocus={props.onFocus}\n      onCancel={props.onCancel}\n      children={(renderProps) => (\n        <MenuControl\n          count={renderProps.items.length}\n          selected={renderProps.selected}\n          onSelect={renderProps.onItemSelect}\n          onKeyDown={renderProps.onItemKeyDown}\n          children={(menuRenderProps) => (\n            <Pos\n              type=\"relative\"\n              ref={renderProps.containerRef}\n              transition={`box-shadow ${\n                renderProps.focused ? 300 : 200\n              }ms cubic-bezier(0.4, 0.0, 0.2, 1)`}\n            >\n              <Box\n                width={1}\n                onMouseEnter={renderProps.onInputMouseEnter}\n                onMouseLeave={renderProps.onInputMouseLeave}\n              >\n                <InputField\n                  title={props.title}\n                  active={\n                    renderProps.focused ||\n                    !!props.suggest ||\n                    !!props.placeholder\n                  }\n                  input={\n                    <BasicInput\n                      ref={renderProps.inputRef}\n                      name={props.name}\n                      disabled={props.disabled}\n                      type={props.type}\n                      value={props.suggest || ''}\n                      tabIndex={props.tabIndex}\n                      autoComplete={props.autoComplete}\n                      autoFocus={props.autoFocus}\n                      pr={props.hint ? 7 : undefined}\n                      placeholder={props.placeholder}\n                      maxLength={props.maxLength}\n                      error={!!props.error}\n                      focused={renderProps.focused}\n                      onChange={renderProps.onRequest}\n                      onFocus={renderProps.onInputFocus}\n                      onBlur={renderProps.onInputBlur}\n                      onKeyDown={\n                        props.items !== undefined &&\n                        renderProps.focused &&\n                        (props.items.length > 0 || props.empty !== undefined)\n                          ? menuRenderProps.onKeyDown\n                          : renderProps.onItemKeyDown\n                      }\n                    />\n                  }\n                  hint={props.hint}\n                  error={props.error}\n                  help={props.help}\n                  action={props.action}\n                />\n              </Box>\n              <DropDown\n                target={() => renderProps.inputRef.current!}\n                container={() => renderProps.containerRef.current}\n                minWidth={1}\n                width=\"calc(100% + 48px)\"\n                offset={3}\n                show={\n                  props.items !== undefined &&\n                  renderProps.focused &&\n                  (props.items.length > 0 ||\n                    props.empty !== undefined ||\n                    props.loading === true)\n                }\n                rootClose={true}\n                onHide={renderProps.onHide}\n              >\n                <CardPos\n                  ref={menuRenderProps.containerRef}\n                  maxHeight={98}\n                  bg=\"#fff\"\n                  py={3}\n                  s=\"0 28px 52px 0 rgba(0, 0, 0, 0.16)\"\n                  r={10}\n                  overflow=\"auto\"\n                  onMouseDown={renderProps.onResultItemsMouseDown}\n                >\n                  {props.loading ? (\n                    Array.from({length: 4})\n                      .fill(1)\n                      .map((_item, key) => (\n                        <CardMenuItem\n                          key={key}\n                          icon={true}\n                          stub\n                          text=\"stub\"\n                          notes=\"stub\"\n                        />\n                      ))\n                  ) : (\n                    <Spacer size=\"s\">\n                      {menuRenderProps.items.length > 0 ? (\n                        <Fragment>\n                          {menuRenderProps.items.map((item, key) => (\n                            <CardMenuItem\n                              role=\"option\"\n                              key={key}\n                              ref={item.ref}\n                              onClick={item.onClick}\n                              onMouseDown={item.onMouseDown}\n                              onMouseEnter={item.onMouseEnter}\n                              cursor=\"pointer\"\n                              text={renderProps.items[key].title}\n                              notes={renderProps.items[key].description}\n                              icon={\n                                renderProps.items[key].logo ? (\n                                  <Image\n                                    stub={renderProps.items[key].stub}\n                                    width={6}\n                                    height={6}\n                                    src={renderProps.items[key].logo}\n                                  />\n                                ) : undefined\n                              }\n                              hover={item.focused}\n                              active={item.selected}\n                              focus={item.selected}\n                            />\n                          ))}\n                        </Fragment>\n                      ) : null}\n                      {props.empty && menuRenderProps.items.length === 0 ? (\n                        <Box px={4}>\n                          <Paragraph>\n                            {props.empty.text}\n                            {props.empty.link ? (\n                              <Fragment>\n                                {' '}\n                                <Link\n                                  onClick={renderProps.onEmptyClick}\n                                  children={props.empty.link.text}\n                                />\n                              </Fragment>\n                            ) : null}\n                          </Paragraph>\n                        </Box>\n                      ) : null}\n                    </Spacer>\n                  )}\n                </CardPos>\n              </DropDown>\n            </Pos>\n          )}\n        />\n      )}\n    />\n  )\n\nSuggestField.displayName = 'SuggestField'\n\nSuggestField.defaultProps = {\n  equals: (a: any, b: any) => a === b,\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/suggest-field/SuggestFieldOptionModel.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/suggest-field/SuggestFieldProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/suggest-field/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/switch/Switch.tsx",["1114"],[],"import {\n  Box,\n  Flex,\n  FlexItem,\n  OptionField,\n  OptionFieldItem,\n  Stub,\n  SwitchControl,\n  Tumbler,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { SwitchProps } from './SwitchProps'\n\nexport const Switch: FC<SwitchProps> = (props) =>\n  props.stub ? (\n    <Flex\n      direction={props.reverse ? 'row-reverse' : 'row'}\n      justify={props.reverse ? 'space-between' : 'flex-start'}\n    >\n      <FlexItem ml={props.reverse ? 3 : 0} mr={props.reverse ? 0 : 3}>\n        <Stub\n          width={9}\n          height={5}\n          top={0.5}\n          bottom={0.5}\n          left={0.5}\n          right={0.5}\n          r={10}\n        />\n      </FlexItem>\n      <FlexItem width={33} maxWidth={1}>\n        <Stub width={1} height={2} top={2} bottom={2} />\n      </FlexItem>\n    </Flex>\n  ) : (\n    <SwitchControl\n      checked={props.checked}\n      disabled={props.disabled || props.loading}\n      onChange={props.onChange}\n      children={(renderProps) => (\n        <OptionField\n          tabIndex={props.tabIndex}\n          onFocus={renderProps.onFocus}\n          onBlur={renderProps.onBlur}\n          onKeyDown={renderProps.onKeyDown}\n          children={\n            <OptionFieldItem\n              label={props.label}\n              reverse={props.reverse}\n              description={props.description}\n              disabled={props.disabled}\n              icon={\n                <Box width={10}>\n                  {props.loading ? (\n                    <Stub\n                      width={9}\n                      height={5}\n                      top={0.5}\n                      bottom={0.5}\n                      left={0.5}\n                      right={0.5}\n                      r={10}\n                    />\n                  ) : (\n                    <Tumbler\n                      disabled={props.disabled}\n                      checked={props.checked}\n                      focused={renderProps.focused}\n                    />\n                  )}\n                </Box>\n              }\n              onMouseLeave={renderProps.onMouseLeave}\n              onMouseEnter={renderProps.onMouseEnter}\n              onClick={renderProps.onClick}\n            />\n          }\n        />\n      )}\n    />\n  )\n\nSwitch.displayName = 'Switch'\n\nSwitch.defaultProps = {\n  tabIndex: 0,\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/switch/SwitchProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/switch/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/switch-field/SwitchField.tsx",["1115","1116","1117","1118","1119","1120"],[],"import {\n  Box,\n  CheckboxControl,\n  Flex,\n  FlexItem,\n  OptionControl,\n  OptionField,\n  OptionFieldItem,\n  Spacer,\n  Stub,\n  Tumbler,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { SwitchFieldOptionModel } from './SwitchFieldOptionModel'\nimport { SwitchFieldProps } from './SwitchFieldProps'\n\nexport const SwitchField: FC<\n  SwitchFieldProps<SwitchFieldOptionModel<any>, any>\n> = (props) =>\n  props.stub ? (\n    <Box maxWidth={1}>\n      <Stub width={24} height={3} top={2} bottom={4} />\n      <Spacer size=\"s\">\n        {[33, 38, 30].map((width, index) => (\n          <Flex\n            key={index}\n            direction={props.reverse ? 'row-reverse' : 'row'}\n            justify={props.reverse ? 'space-between' : 'flex-start'}\n          >\n            <FlexItem ml={props.reverse ? 3 : 0} mr={props.reverse ? 0 : 3}>\n              <Stub\n                width={9}\n                height={5}\n                top={0.5}\n                bottom={0.5}\n                left={0.5}\n                right={0.5}\n                r={10}\n              />\n            </FlexItem>\n            <FlexItem width={width} maxWidth={1}>\n              <Stub width={1} height={2} top={2} bottom={2} />\n            </FlexItem>\n          </Flex>\n        ))}\n      </Spacer>\n    </Box>\n  ) : (\n    <CheckboxControl<SwitchFieldOptionModel<any>, any>\n      tabIndex={props.tabIndex}\n      options={props.options}\n      values={props.values}\n      equals={props.equals}\n      onChange={props.onChange}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      children={(renderProps) => (\n        <OptionField\n          title={props.title}\n          hint={props.hint}\n          help={props.help}\n          tabIndex={renderProps.tabIndex}\n          autoFocus={props.autoFocus}\n          onFocus={renderProps.onFocus}\n          onBlur={renderProps.onBlur}\n          onKeyDown={renderProps.onKeyDown}\n          children={renderProps.options.map((option, index) => (\n            <OptionControl<any>\n              key={index}\n              disabled={option.disabled}\n              value={option.value}\n              onClick={option.onClick}\n              onMouseEnter={option.onMouseEnter}\n              onMouseLeave={renderProps.onMouseLeave}\n              children={(renderOptionProps) => (\n                <OptionFieldItem\n                  disabled={option.disabled}\n                  reverse={props.reverse}\n                  icon={\n                    <Box width={10}>\n                      <Tumbler\n                        disabled={option.disabled}\n                        checked={option.checked}\n                        focused={option.focused}\n                      />\n                    </Box>\n                  }\n                  label={option.label}\n                  description={option.description}\n                  onClick={renderOptionProps.onClick}\n                  onMouseLeave={renderOptionProps.onMouseLeave}\n                  onMouseEnter={renderOptionProps.onMouseEnter}\n                />\n              )}\n            />\n          ))}\n        />\n      )}\n    />\n  )\n\nSwitchField.displayName = 'SwitchField'\n\nSwitchField.defaultProps = {\n  tabIndex: 0,\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/switch-field/SwitchFieldOptionModel.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/switch-field/SwitchFieldProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/switch-field/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/tabs/Tabs.tsx",["1121","1122"],[],"import {\n  Flex,\n  FlexItem,\n  IconProps,\n  styled,\n  TabBorder,\n  TabHeader,\n  TabsControl,\n} from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { Paragraph } from '../typography'\n\nexport interface TabsProps {\n  items: {\n    title: string\n    icon?: IconProps['name']\n    content?: ReactNode\n  }[]\n  select?: number\n  tabIndex?: number\n  vertical?: boolean\n  centered?: boolean\n  stub?: boolean | boolean[]\n  onChange?: (selected: number) => void\n}\n\nconst FlexOverflow = styled(Flex)({\n  '&::-webkit-scrollbar': {\n    display: 'none',\n  },\n  scrollbarWidth: 'none',\n  msOverflowStyle: 'none',\n  position: 'relative',\n})\n\nFlexOverflow.displayName = 'FlexOverflow'\n\nconst TabContent = styled(FlexItem)()\n\nTabContent.displayName = 'TabContent'\n\nexport const Tabs: FC<TabsProps> = ({\n  items,\n  select = 0,\n  tabIndex = 0,\n  vertical = false,\n  centered = false,\n  stub = false,\n  onChange,\n}) =>\n  stub ? (\n    <Flex direction=\"column\">\n      <FlexOverflow\n        direction=\"row\"\n        overflow=\"auto\"\n        justify={centered ? 'space-between' : 'flex-start'}\n      >\n        {(Array.isArray(stub) ? stub : [true, true, true]).map(\n          (icon, index, arr) => (\n            <TabHeader\n              key={index}\n              title=\"stub\"\n              indent={index === arr.length - 1 ? 0 : 5}\n              wrap={!centered}\n              tabIndex={-1}\n              icon={icon ? 'qiwi' : undefined}\n              vertical={vertical}\n              select={false}\n              width={centered ? 1 : undefined}\n              stub\n            />\n          ),\n        )}\n        <TabBorder\n          width={centered ? 'calc(33% - 20px)' : (vertical ? 13 : 21)}\n          left={0}\n          stub\n        />\n      </FlexOverflow>\n      <FlexItem mt={4}>\n        <Paragraph stub />\n      </FlexItem>\n    </Flex>\n  ) : (\n    <TabsControl\n      select={select}\n      length={items.length}\n      onChange={onChange}\n      children={(renderProps) => (\n        <Flex direction=\"column\">\n          <FlexOverflow\n            direction=\"row\"\n            overflow=\"auto\"\n            justify={centered ? 'space-between' : 'flex-start'}\n          >\n            {renderProps.items.map((item, index) => (\n              <TabHeader\n                key={index}\n                title={items[index].title}\n                indent={index === items.length - 1 ? 0 : 5}\n                wrap={!centered}\n                tabIndex={tabIndex}\n                icon={items[index].icon}\n                vertical={vertical}\n                select={item.select}\n                focus={item.focus}\n                width={centered ? 1 : undefined}\n                ref={item.ref}\n                onFocus={item.onFocus}\n                onBlur={item.onBlur}\n                onMouseEnter={item.onMouseEnter}\n                onMouseLeave={item.onMouseLeave}\n                onKeyDown={renderProps.onKeyDown}\n                onClick={item.onClick}\n              />\n            ))}\n            <TabBorder\n              width={`${renderProps.borderWidth}px`}\n              left={`${renderProps.borderLeft}px`}\n            />\n          </FlexOverflow>\n          {items.map(({ content }, index) => (\n            <TabContent\n              key={index}\n              display={select === index ? 'block' : 'none'}\n              pt={4}\n              children={content}\n            />\n          ))}\n        </Flex>\n      )}\n    />\n  )\n\nTabs.displayName = 'Tabs'\n\nTabs.defaultProps = {\n  select: 0,\n  tabIndex: 0,\n  vertical: false,\n  centered: false,\n  stub: false,\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/tabs/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/text-area-field/TextAreaField.tsx",["1123"],[],"import {\n  BasicTextArea,\n  InputField,\n  TextAreaFieldControl,\n} from '@qiwi/pijma-core'\nimport React, { FC, KeyboardEvent, ReactNode } from 'react'\n\nexport interface TextAreaFieldProps {\n  value: string\n  tabIndex?: number\n  name?: string\n  title?: string\n  error?: ReactNode\n  action?: ReactNode\n  help?: ReactNode\n  autoFocus?: boolean\n  placeholder?: string\n  disabled?: boolean\n  maxLength?: number\n  minRows?: number\n  maxRows?: number\n  onChange?: (value: string) => void\n  onFocus?: () => void\n  onBlur?: () => void\n  onKeyDown?: (event: KeyboardEvent) => boolean\n  onKeyUp?: (event: KeyboardEvent) => boolean\n}\n\nexport const TextAreaField: FC<TextAreaFieldProps> = (props) => (\n  <TextAreaFieldControl\n    onChange={props.onChange}\n    onFocus={props.onFocus}\n    onBlur={props.onBlur}\n    onKeyDown={props.onKeyDown}\n    onKeyUp={props.onKeyUp}\n    value={props.value}\n    children={(renderProps) => (\n      <InputField\n        title={props.title}\n        active={renderProps.focused || !!props.value || !!props.placeholder}\n        input={\n          <BasicTextArea\n            value={props.value}\n            name={props.name}\n            autoFocus={props.autoFocus}\n            placeholder={props.placeholder}\n            disabled={props.disabled}\n            error={!!props.error}\n            focused={renderProps.focused}\n            maxLength={props.maxLength}\n            ref={renderProps.ref}\n            rows={\n              props.maxRows && renderProps.rows > props.maxRows\n                ? props.maxRows\n                : (props.minRows && renderProps.rows < props.minRows\n                ? props.minRows\n                : renderProps.rows)\n            }\n            overflow={\n              props.maxRows && renderProps.rows > props.maxRows\n                ? 'auto'\n                : 'hidden'\n            }\n            transition={\n              renderProps.animate\n                ? 'all 100ms cubic-bezier(0.4, 0.0, 0.2, 1)'\n                : undefined\n            }\n            onChange={renderProps.onChange}\n            onFocus={renderProps.onFocus}\n            onBlur={renderProps.onBlur}\n            onKeyDown={renderProps.onKeyDown}\n            onKeyUp={renderProps.onKeyUp}\n          />\n        }\n        error={props.error}\n        help={props.help}\n        action={props.action}\n      />\n    )}\n  />\n)\n\nTextAreaField.displayName = 'TextAreaField'\n\nTextAreaField.defaultProps = {\n  tabIndex: 0,\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/text-area-field/index.tsx",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/text-field/TextField.tsx",["1124"],[],"import { BasicInput, InputField, TextFieldControl } from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { TextFieldProps } from './TextFieldProps'\n\nexport const TextField: FC<TextFieldProps> = (props) =>\n  props.stub ? (\n    <InputField\n      active={false}\n      input={false}\n      title={props.title}\n      hint={props.hint}\n      help={props.help}\n      error={props.error}\n      stub\n    />\n  ) : (\n    <TextFieldControl\n      onChange={props.onChange}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      onKeyDown={props.onKeyDown}\n      onKeyUp={props.onKeyUp}\n      children={(renderProps) => (\n        <InputField\n          title={props.title}\n          active={renderProps.focused || !!props.value || !!props.placeholder}\n          input={\n            <BasicInput\n              type={props.type}\n              value={props.value}\n              name={props.name}\n              autoComplete={props.autoComplete}\n              autoFocus={props.autoFocus}\n              placeholder={props.placeholder}\n              inputMode={props.inputMode}\n              ref={props.inputRef}\n              disabled={props.disabled}\n              pr={props.hint ? 7 : undefined}\n              error={!!props.error}\n              focused={renderProps.focused}\n              maxLength={props.maxLength}\n              mask={props.mask}\n              pipe={props.pipe}\n              onChange={renderProps.onChange}\n              onFocus={renderProps.onFocus}\n              onBlur={renderProps.onBlur}\n              onKeyDown={renderProps.onKeyDown}\n              onKeyUp={renderProps.onKeyUp}\n            />\n          }\n          hint={props.hint}\n          error={props.error}\n          help={props.help}\n          action={props.action}\n        />\n      )}\n    />\n  )\n\nTextField.displayName = 'TextField'\n\nTextField.defaultProps = {\n  tabIndex: 0,\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/text-field/TextFieldProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/text-field/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/typography/Caption.tsx",["1125"],[],"import { Box, Breaker, Stub, Typo, TypoProps } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nexport interface CaptionProps {\n  color?: 'default' | 'support' | 'inverse'\n  align?: TypoProps['align']\n  clamp?: number\n  stub?: boolean\n  children?: ReactNode\n}\n\nconst CaptionColor: { [color in NonNullable<CaptionProps['color']>]: string } =\n  {\n    default: '#000',\n    support: '#666',\n    inverse: '#fff',\n  }\n\nexport const Caption: FC<CaptionProps> = ({\n  color = 'support',\n  align,\n  stub,\n  clamp,\n  children,\n}) =>\n  stub ? (\n    <Box\n      ml={align === 'center' || align === 'right' ? 'auto' : undefined}\n      mr={align === 'center' ? 'auto' : undefined}\n      width={50}\n      maxWidth={1}\n    >\n      <Stub\n        top={1}\n        bottom={1}\n        width={50}\n        height={3}\n        inverse={color === 'inverse'}\n      />\n    </Box>\n  ) : (\n    <Typo\n      as=\"h6\"\n      display=\"block\"\n      size={3.5}\n      height={5}\n      weight={500}\n      color={CaptionColor[color]}\n      transform=\"uppercase\"\n      spacing={1.5}\n      align={align}\n      clamp={clamp}\n      children={<Breaker children={children} />}\n    />\n  )\n\nCaption.displayName = 'Caption'\n\nCaption.defaultProps = {\n  color: 'support',\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/typography/Heading.tsx",["1126","1127","1128"],[],"import { Box, Breaker, Stub, Typo, TypoProps } from '@qiwi/pijma-core'\nimport React, { FC, Fragment, ReactNode } from 'react'\n\nexport interface HeadingProps {\n  tag?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'\n  size: '1' | '2' | '3' | '4' | '5'\n  color?: 'default' | 'inverse'\n  align?: TypoProps['align']\n  clamp?: number\n  stub?: boolean\n  children?: ReactNode\n}\n\nconst HeadingSize: { [size in HeadingProps['size']]: number } = {\n  1: 8,\n  2: 7,\n  3: 6,\n  4: 5,\n  5: 4,\n}\n\nconst HeadingHeight: { [size in HeadingProps['size']]: number } = {\n  1: 9,\n  2: 8,\n  3: 7,\n  4: 6,\n  5: 5,\n}\n\nconst HeadingTag: {\n  [size in HeadingProps['size']]: NonNullable<HeadingProps['tag']>\n} = {\n  1: 'h1',\n  2: 'h2',\n  3: 'h3',\n  4: 'h4',\n  5: 'h5',\n}\n\nconst HeadingWeight: { [size in HeadingProps['size']]: number } = {\n  1: 900,\n  2: 900,\n  3: 900,\n  4: 700,\n  5: 700,\n}\n\nconst StubOffsetTop: { [size in HeadingProps['size']]: number } = {\n  1: 3,\n  2: 3,\n  3: 2,\n  4: 2,\n  5: 1,\n}\n\nconst StubOffsetBottom: { [size in HeadingProps['size']]: number } = {\n  1: 2,\n  2: 1,\n  3: 1,\n  4: 1,\n  5: 1,\n}\n\nconst StubHeight: { [size in HeadingProps['size']]: number } = {\n  1: 4,\n  2: 4,\n  3: 4,\n  4: 3,\n  5: 3,\n}\n\nconst HeadingColor: { [color in NonNullable<HeadingProps['color']>]: string } =\n  {\n    default: '#000',\n    inverse: '#fff',\n  }\n\nexport const Heading: FC<HeadingProps> = ({\n  tag,\n  size,\n  color = 'default',\n  align,\n  stub,\n  clamp,\n  children,\n}) =>\n  stub ? (\n    <Fragment>\n      {new Array(clamp === undefined ? 1 : clamp)\n        .fill(0)\n        .map((_, i) => (i % 3 === 0 ? 0.5 : (i % 3 === 1 ? 0.6 : 0.4)))\n        .map((width, id) => (\n          <Box\n            key={id}\n            ml={align === 'center' || align === 'right' ? 'auto' : 'none'}\n            mr={align === 'center' ? 'auto' : 'none'}\n            width={width}\n            maxWidth={1}\n          >\n            <Stub\n              top={StubOffsetTop[size]}\n              bottom={StubOffsetBottom[size]}\n              width={1}\n              height={StubHeight[size]}\n              inverse={color === 'inverse'}\n            />\n          </Box>\n        ))}\n    </Fragment>\n  ) : (\n    <Typo\n      as={tag || HeadingTag[size]}\n      display=\"block\"\n      size={HeadingSize[size]}\n      height={HeadingHeight[size]}\n      weight={HeadingWeight[size]}\n      color={HeadingColor[color]}\n      align={align}\n      clamp={clamp}\n      children={<Breaker children={children} />}\n    />\n  )\n\nHeading.displayName = 'Heading'\n\nHeading.defaultProps = {\n  color: 'default',\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/typography/Paragraph.tsx",["1129","1130","1131"],[],"import { Box, Breaker, Stub, Typo, TypoProps } from '@qiwi/pijma-core'\nimport React, { FC, Fragment, ReactNode } from 'react'\n\nexport interface ParagraphProps {\n  size?: 's' | 'm' | 'l'\n  bold?: boolean\n  compact?: boolean\n  color?: 'default' | 'support' | 'inverse'\n  transform?: TypoProps['transform']\n  align?: TypoProps['align']\n  clamp?: number\n  stub?: boolean\n  children?: ReactNode\n}\n\nconst ParagraphSize: { [size in NonNullable<ParagraphProps['size']>]: number } =\n  {\n    s: 3.5,\n    m: 4,\n    l: 5,\n  }\n\nconst ParagraphHeight: {\n  [size in NonNullable<ParagraphProps['size']>]: number\n} = {\n  s: 5,\n  m: 6,\n  l: 8,\n}\n\nconst ParagraphHeightCompact: {\n  [size in NonNullable<ParagraphProps['size']>]: number\n} = {\n  s: 4,\n  m: 5,\n  l: 7,\n}\n\nconst StubOffsetTop: { [size in NonNullable<ParagraphProps['size']>]: number } =\n  {\n    s: 2,\n    m: 1,\n    l: 3,\n  }\n\nconst StubOffsetBottom: {\n  [size in NonNullable<ParagraphProps['size']>]: number\n} = {\n  s: 1,\n  m: 2,\n  l: 2,\n}\n\nconst StubOffsetCompactTop: {\n  [size in NonNullable<ParagraphProps['size']>]: number\n} = {\n  s: 1,\n  m: 1,\n  l: 3,\n}\n\nconst StubOffsetCompactBottom: {\n  [size in NonNullable<ParagraphProps['size']>]: number\n} = {\n  s: 1,\n  m: 1,\n  l: 1,\n}\n\nconst StubHeight: { [size in NonNullable<ParagraphProps['size']>]: number } = {\n  s: 2,\n  m: 3,\n  l: 3,\n}\n\nconst ParagraphColor: {\n  [color in NonNullable<ParagraphProps['color']>]: string\n} = {\n  default: '#000',\n  support: '#666',\n  inverse: '#fff',\n}\n\nexport const Paragraph: FC<ParagraphProps> = ({\n  size = 'm',\n  bold = false,\n  compact = false,\n  color = 'default',\n  transform,\n  align,\n  stub,\n  clamp,\n  children,\n}) =>\n  stub ? (\n    <Fragment>\n      {new Array(clamp === undefined ? 3 : clamp)\n        .fill(0)\n        .map((_, i) => (i % 3 === 0 ? 0.8 : (i % 3 === 1 ? 0.9 : 0.7)))\n        .map((width, id) => (\n          <Box\n            key={id}\n            width={width}\n            ml={align === 'center' || align === 'right' ? 'auto' : undefined}\n            mr={align === 'center' || align === 'left' ? 'auto' : undefined}\n          >\n            <Stub\n              top={compact ? StubOffsetCompactTop[size] : StubOffsetTop[size]}\n              bottom={\n                compact ? StubOffsetCompactBottom[size] : StubOffsetBottom[size]\n              }\n              height={StubHeight[size]}\n              width={1}\n              inverse={color === 'inverse'}\n            />\n          </Box>\n        ))}\n    </Fragment>\n  ) : (\n    <Typo\n      as=\"p\"\n      display=\"block\"\n      size={ParagraphSize[size]}\n      height={compact ? ParagraphHeightCompact[size] : ParagraphHeight[size]}\n      weight={bold ? 500 : 300}\n      color={ParagraphColor[color]}\n      transform={transform}\n      align={align}\n      clamp={clamp}\n      children={<Breaker children={children} />}\n    />\n  )\n\nParagraph.displayName = 'Paragraph'\n\nParagraph.defaultProps = {\n  size: 'm',\n  bold: false,\n  compact: false,\n  color: 'default',\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/typography/Text.tsx",["1132","1133","1134","1135"],[],"import { Box, Breaker, Stub, Typo, TypoProps } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nexport interface TextProps {\n  display?: 'block' | 'inline' | 'inline-block'\n  size?: 's' | 'm' | 'l'\n  bold?: boolean\n  compact?: boolean\n  color?: 'default' | 'support' | 'inverse' | 'failure' | 'success' | 'warning'\n  decoration?: TypoProps['decoration']\n  transition?: TypoProps['transition']\n  transform?: TypoProps['transform']\n  align?: TypoProps['align']\n  clamp?: number\n  stub?: boolean\n  children?: ReactNode\n}\n\nconst TextSize: { [size in NonNullable<TextProps['size']>]: number } = {\n  s: 3.5,\n  m: 4,\n  l: 5,\n}\n\nconst TextHeight: { [size in NonNullable<TextProps['size']>]: number } = {\n  s: 5,\n  m: 6,\n  l: 8,\n}\n\nconst TextHeightCompact: { [size in NonNullable<TextProps['size']>]: number } =\n  {\n    s: 4,\n    m: 5,\n    l: 7,\n  }\n\nconst StubHeight: Record<NonNullable<TextProps['size']>, number> = {\n  s: 2,\n  m: 3,\n  l: 3,\n}\nconst StubOffsetTop: Record<NonNullable<TextProps['size']>, number> = {\n  s: 1.5,\n  m: 1.5,\n  l: 2.5,\n}\n\nconst StubOffsetBottom: Record<NonNullable<TextProps['size']>, number> = {\n  s: 1.5,\n  m: 1.5,\n  l: 2.5,\n}\n\nconst StubOffsetCompactTop: Record<NonNullable<TextProps['size']>, number> = {\n  s: 1,\n  m: 1,\n  l: 2,\n}\n\nconst StubOffsetCompactBottom: Record<\n  NonNullable<TextProps['size']>,\n  number\n> = {\n  s: 1,\n  m: 1,\n  l: 2,\n}\n\nconst TextColor: { [color in NonNullable<TextProps['color']>]: string } = {\n  default: '#000',\n  support: '#666',\n  inverse: '#fff',\n  success: '#4bbd5c',\n  failure: '#d0021b',\n  warning: '#ff8c00',\n}\n\nexport const Text: FC<TextProps> = ({\n  display,\n  compact,\n  size,\n  bold,\n  color,\n  decoration,\n  transform,\n  transition,\n  align,\n  clamp,\n  children,\n  stub = false,\n}) =>\n  stub ? (\n    size === undefined || display === undefined ? null : (\n      <Box as=\"span\" display={display}>\n        {new Array(clamp === undefined ? 1 : clamp)\n          .fill(1)\n          .map((width, index) => (\n            <Stub\n              key={index}\n              height={StubHeight[size]}\n              width={width}\n              top={compact ? StubOffsetCompactTop[size] : StubOffsetTop[size]}\n              bottom={\n                compact ? StubOffsetCompactBottom[size] : StubOffsetBottom[size]\n              }\n            />\n          ))}\n      </Box>\n    )\n  ) : (\n    <Typo\n      as=\"span\"\n      display={display}\n      size={size === undefined ? undefined : TextSize[size]}\n      height={\n        size === undefined\n          ? undefined\n          : (compact\n          ? TextHeightCompact[size]\n          : TextHeight[size])\n      }\n      weight={bold === undefined ? undefined : (bold ? 500 : 300)}\n      color={color === undefined ? undefined : TextColor[color]}\n      decoration={decoration}\n      transform={transform}\n      transition={transition}\n      align={align}\n      clamp={clamp}\n      children={<Breaker children={children} />}\n    />\n  )\n\nText.displayName = 'Text'\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/typography/Title.tsx",["1136"],[],"import { Box, Breaker, Stub, Typo, TypoProps } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nexport interface TitleProps {\n  tag?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'\n  size: '1' | '2'\n  color?: 'default' | 'inverse'\n  align?: TypoProps['align']\n  clamp?: number\n  stub?: boolean\n  children?: ReactNode\n}\n\nconst TitleSize: { [size in TitleProps['size']]: number } = {\n  1: 12,\n  2: 10,\n}\n\nconst TitleHeight: { [size in TitleProps['size']]: number } = {\n  1: 14,\n  2: 12,\n}\n\nconst TitleTag: {\n  [size in TitleProps['size']]: NonNullable<TitleProps['tag']>\n} = {\n  1: 'h1',\n  2: 'h2',\n}\n\nconst TitleWeight: { [size in TitleProps['size']]: number } = {\n  1: 900,\n  2: 900,\n}\n\nconst StubOffsetTop: { [size in TitleProps['size']]: number } = {\n  1: 4,\n  2: 4,\n}\n\nconst StubOffsetBottom: { [size in TitleProps['size']]: number } = {\n  1: 3,\n  2: 2,\n}\n\nconst StubHeight: { [size in TitleProps['size']]: number } = {\n  1: 7,\n  2: 6,\n}\n\nconst TitleColor: { [color in NonNullable<TitleProps['color']>]: string } = {\n  default: '#000',\n  inverse: '#fff',\n}\n\nexport const Title: FC<TitleProps> = ({\n  tag,\n  size,\n  color = 'default',\n  align,\n  stub,\n  clamp,\n  children,\n}) =>\n  stub ? (\n    <Box\n      ml={align === 'center' || align === 'right' ? 'auto' : 'none'}\n      mr={align === 'center' ? 'auto' : 'none'}\n      width={50}\n    >\n      <Stub\n        top={StubOffsetTop[size]}\n        bottom={StubOffsetBottom[size]}\n        height={StubHeight[size]}\n        width={50}\n        inverse={color === 'inverse'}\n      />\n    </Box>\n  ) : (\n    <Typo\n      as={tag || TitleTag[size]}\n      display=\"block\"\n      size={TitleSize[size]}\n      height={TitleHeight[size]}\n      weight={TitleWeight[size]}\n      color={TitleColor[color]}\n      align={align}\n      clamp={clamp}\n      children={<Breaker children={children} />}\n    />\n  )\n\nTitle.displayName = 'Title'\n\nTitle.defaultProps = {\n  color: 'default',\n}\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/ts/typography/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/ComponentsListRenderer.tsx",["1137","1138"],[],"import { Box, Spacer } from '@qiwi/pijma-core'\nimport { Link } from '@qiwi/pijma-desktop'\nimport React, { FC, ReactNode } from 'react'\n\ninterface ComponentsListRendererProps {\n  items: Array<{\n    heading: boolean\n    visibleName: string\n    href: string\n    content: ReactNode\n    shouldOpenInNewTab: boolean\n  }>\n}\n\nconst ComponentsListRenderer: FC<ComponentsListRendererProps> = (props) => {\n  const items = props.items.filter((item) => item.visibleName)\n  if (items.length === 0) {\n    return null\n  }\n  return (\n    <Spacer size=\"l\">\n      {items.map(({ visibleName, href, content, shouldOpenInNewTab }, i) => (\n        <Spacer size=\"l\" key={i}>\n          <Link\n            href={href}\n            target={shouldOpenInNewTab ? '_blank' : undefined}\n            children={visibleName}\n          />\n          <Box pl={4}>{content}</Box>\n        </Spacer>\n      ))}\n    </Spacer>\n  )\n}\n\nexport default ComponentsListRenderer\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/ExamplesRenderer.tsx",["1139"],[],"import React, { FC, Fragment, ReactNode } from 'react'\n\ninterface ExamplesRendererProps {\n  children?: ReactNode\n}\n\nconst ExamplesRenderer: FC<ExamplesRendererProps> = (props) => (\n  <Fragment>{props.children}</Fragment>\n)\n\nexport default ExamplesRenderer\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/Heading.tsx",["1140"],[],"import { Heading, HeadingProps } from '@qiwi/pijma-desktop'\nimport React, { FC, ReactNode } from 'react'\n\ninterface HeadingRendererProps {\n  level: '1' | '2' | '3' | '4' | '5' | '6'\n  children?: ReactNode\n}\n\nconst LevelSize: {\n  [level in HeadingRendererProps['level']]: HeadingProps['size']\n} = {\n  1: '1',\n  2: '2',\n  3: '3',\n  4: '4',\n  5: '5',\n  6: '5',\n}\n\nconst HeadingRenderer: FC<HeadingRendererProps> = (props) => (\n  <Heading size={LevelSize[props.level]}>{props.children}</Heading>\n)\n\nexport default HeadingRenderer\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/Link.tsx",["1141"],[],"import { Link, LinkProps } from '@qiwi/pijma-desktop'\nimport React, { FC } from 'react'\n\nconst LinkRenderer: FC<LinkProps> = (props) => <Link {...props} />\n\nexport default LinkRenderer\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/Markdown/MarkdownHeading.tsx",["1142"],[],"import { Box } from '@qiwi/pijma-core'\nimport { Heading, HeadingProps } from '@qiwi/pijma-desktop'\nimport React, { FC, ReactNode } from 'react'\n\ninterface HeadingRendererProps {\n  level: '1' | '2' | '3' | '4' | '5' | '6'\n  children?: ReactNode\n}\n\nconst LevelSize: {\n  [level in HeadingRendererProps['level']]: HeadingProps['size']\n} = {\n  1: '1',\n  2: '2',\n  3: '3',\n  4: '4',\n  5: '5',\n  6: '5',\n}\n\nconst LevelMarginTop: { [level in HeadingRendererProps['level']]: number } = {\n  1: 11,\n  2: 11,\n  3: 8,\n  4: 7,\n  5: 6,\n  6: 6,\n}\n\nconst LevelMarginBottom: { [level in HeadingRendererProps['level']]: number } =\n  {\n    1: 3,\n    2: 3,\n    3: 3,\n    4: 3,\n    5: 3,\n    6: 3,\n  }\n\nconst MardownHeadingRenderer: FC<HeadingRendererProps> = (props) => (\n  <Box\n    mt={LevelMarginTop[props.level]}\n    mb={LevelMarginBottom[props.level]}\n    css={{\n      '&:first-child': { marginTop: 0 },\n      '&:last-child': { marginBottom: 0 },\n    }}\n  >\n    <Heading size={LevelSize[props.level]}>{props.children}</Heading>\n  </Box>\n)\n\nexport default MardownHeadingRenderer\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/Para.tsx",["1143"],[],"import { Box } from '@qiwi/pijma-core'\nimport { Paragraph, ParagraphProps } from '@qiwi/pijma-desktop'\nimport React, { FC, ReactNode } from 'react'\n\nconst SizeMargin: { [size in NonNullable<ParagraphProps['size']>]: number } = {\n  s: 3,\n  m: 4,\n  l: 5,\n}\n\ninterface ParagraphRenderProps {\n  children?: ReactNode\n}\n\nconst ParagraphRenderer: FC<ParagraphRenderProps> = ({ children }) => (\n  <Box\n    my={SizeMargin.m}\n    css={{\n      '&:first-child': { marginTop: 0 },\n      '&:last-child': { marginBottom: 0 },\n    }}\n  >\n    <Paragraph size=\"m\">{children}</Paragraph>\n  </Box>\n)\n\nexport default ParagraphRenderer\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/ReactComponentRenderer.tsx",["1144","1145","1146"],[],"import { Spacer } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n// @ts-ignore\nimport Pathline from 'rsg-components/Pathline'\n\ninterface ReactComponentRendererProps {\n  name: string\n  heading: ReactNode\n  filepath: string\n  pathLine: string\n  tabButtons?: ReactNode\n  tabBody?: ReactNode\n  description?: ReactNode\n  docs?: ReactNode\n  examples: ReactNode\n  isolated: boolean\n}\n\nconst ReactComponentRenderer: FC<ReactComponentRendererProps> = (props) => (\n  <Spacer size=\"xl\">\n    <Spacer size=\"s\">\n      {props.heading}\n      {props.pathLine ? <Pathline>{props.pathLine}</Pathline> : null}\n    </Spacer>\n    <Spacer size=\"m\">\n      {props.description}\n      {props.docs}\n      {props.tabButtons}\n      {props.tabBody}\n    </Spacer>\n    {props.examples}\n  </Spacer>\n)\n\nexport default ReactComponentRenderer\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/SectionHeadingRenderer.tsx",["1147"],[],"import { Heading } from '@qiwi/pijma-desktop'\nimport React, { FC, ReactNode } from 'react'\n\ninterface SectionHeadingRendererProps {\n  toolbar: ReactNode\n  id: string\n  href: string\n  depth: number\n  deprecated: boolean\n  children?: ReactNode\n}\n\nconst SectionHeadingRenderer: FC<SectionHeadingRendererProps> = (props) => (\n  <Heading size=\"1\">{props.children}</Heading>\n)\n\nexport default SectionHeadingRenderer\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/SectionRenderer.tsx",["1148","1149","1150","1151"],[],"import { Spacer } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n// @ts-ignore\nimport SectionHeading from 'rsg-components/SectionHeading'\n// @ts-ignore\n// import Markdown from 'rsg-components/Markdown'\n\ninterface SectionRendererProps {\n  name: string\n  description: string\n  slug: string\n  content: ReactNode\n  components: ReactNode\n  sections: ReactNode\n  isolated: boolean\n  depth: number\n  pagePerSection: boolean\n}\n\nconst SectionRenderer: FC<SectionRendererProps> = (props) => (\n  <Spacer size=\"xl\">\n    {props.name ? (\n      <SectionHeading\n        depth={props.depth}\n        id={props.slug}\n        slotName=\"sectionToolbar\"\n        pagePerSection={props.pagePerSection}\n        slotProps={props}\n        children={props.name}\n      />\n    ) : null}\n    {props.content}\n    {props.sections}\n    {props.components}\n  </Spacer>\n)\n\nexport default SectionRenderer\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/StyleGuideRenderer.tsx",["1152"],[],"import {\n  applyDefaultClickHandler,\n  Box,\n  cache,\n  CacheProvider,\n  Card,\n  Flex,\n  FlexItem,\n  fonts,\n  Global,\n  Icon,\n  reset,\n  ThemeProvider,\n  themes,\n} from '@qiwi/pijma-desktop'\nimport React, { FC, ReactNode } from 'react'\n\napplyDefaultClickHandler()\n\ninterface StyleGuideRendererProps {\n  title: ReactNode\n  toc: ReactNode\n  hasSidebar: boolean\n  children?: ReactNode\n}\n\nconst StyleGuideRenderer: FC<StyleGuideRendererProps> = (props) => (\n  <CacheProvider value={cache}>\n    <ThemeProvider theme={themes.orange}>\n      <Global\n        styles={[\n          reset,\n          fonts,\n          {\n            body: {\n              minWidth: '1024px !important',\n            },\n          },\n        ]}\n      />\n      {props.hasSidebar ? (\n        <Flex minWidth={305} minHeight={1}>\n          <FlexItem width=\"calc(320px + (100% - 1180px) / 2)\">\n            <Card width={1} height={1} bg=\"#fff\">\n              <Box width={80} ml=\"auto\" py={15} pr={15}>\n                <Box width={13} height={13} mb={10}>\n                  <Icon name=\"qiwi\" color=\"#ff8c00\" size={1} />\n                </Box>\n                {props.toc}\n              </Box>\n            </Card>\n          </FlexItem>\n          <FlexItem width=\"calc(860px + (100% - 1180px) / 2)\">\n            <Card width={1} height={1} bg=\"#f5f5f5\">\n              <Box width={215} mr=\"auto\" py={15} pl={15}>\n                {props.children}\n              </Box>\n            </Card>\n          </FlexItem>\n        </Flex>\n      ) : (\n        <Card minHeight={1} bg=\"#f5f5f5\">\n          <Box width={305} mx=\"auto\" px={5} py={15}>\n            {props.children}\n          </Box>\n        </Card>\n      )}\n    </ThemeProvider>\n  </CacheProvider>\n)\n\nexport default StyleGuideRenderer\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/TableOfContentsRenderer.tsx",["1153"],[],"import { Icon, Spacer } from '@qiwi/pijma-core'\nimport { TextField } from '@qiwi/pijma-desktop'\nimport React, { FC, ReactNode } from 'react'\n\ninterface TableOfContentsRendererProps {\n  searchTerm: string\n  onSearchTermChange: (value: string) => void\n  children?: ReactNode\n}\n\nconst TableOfContentsRenderer: FC<TableOfContentsRendererProps> = (props) => (\n  <Spacer size=\"m\">\n    <TextField\n      value={props.searchTerm}\n      placeholder=\"Поиск\"\n      hint={<Icon name=\"search\" color=\"#666\" />}\n      onChange={props.onSearchTermChange}\n    />\n    {props.children}\n  </Spacer>\n)\n\nexport default TableOfContentsRenderer\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/Wrapper.tsx",["1154"],[],"import { ThemeProvider, themes } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\ninterface WrapperProps {\n  children?: ReactNode\n}\n\nconst Wrapper: FC<WrapperProps> = (props) => (\n  <ThemeProvider theme={themes.orange}>{props.children}</ThemeProvider>\n)\n\nexport default Wrapper\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/components/slots/IsolateButton.tsx",["1155","1156","1157","1158"],[],"import React, { FC } from 'react'\n// @ts-ignore\nimport { MdFullscreen, MdFullscreenExit } from 'react-icons/md'\n// @ts-ignore\nimport getUrl from 'react-styleguidist/lib/client/utils/getUrl'\n// @ts-ignore\nimport ToolbarButton from 'rsg-components/ToolbarButton'\n\ninterface IsolateButtonProps {\n  name: string\n  example: number\n  isolated: boolean\n}\n\nconst IsolateButton: FC<IsolateButtonProps> = ({ name, example, isolated }) =>\n  isolated ? (\n    <ToolbarButton\n      href={getUrl({\n        name,\n        hashPath: decodeURI(location.hash).split('/').slice(1, -2),\n      })}\n      title=\"Show all components\"\n    >\n      <MdFullscreenExit />\n    </ToolbarButton>\n  ) : (\n    <ToolbarButton\n      href={getUrl({\n        name,\n        example,\n        hashPath: decodeURI(location.hash).split('/').slice(1, -1),\n      })}\n      title=\"Open isolated\"\n    >\n      <MdFullscreen />\n    </ToolbarButton>\n  )\n\nexport default IsolateButton\n","/home/runner/work/pijma/pijma/packages/desktop/src/main/webapp/require.js",[],[],{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1163","severity":2,"message":"1164","line":19,"column":12,"nodeType":"1165","messageId":"1166","endLine":19,"endColumn":16,"suggestions":"1167"},{"ruleId":"1159","severity":1,"message":"1160","line":9,"column":8,"nodeType":"1161","messageId":"1162","endLine":9,"endColumn":13},{"ruleId":"1163","severity":2,"message":"1164","line":61,"column":15,"nodeType":"1165","messageId":"1166","endLine":61,"endColumn":19,"suggestions":"1168"},{"ruleId":"1163","severity":2,"message":"1164","line":75,"column":13,"nodeType":"1165","messageId":"1166","endLine":75,"endColumn":17,"suggestions":"1169"},{"ruleId":"1159","severity":1,"message":"1160","line":12,"column":8,"nodeType":"1161","messageId":"1162","endLine":12,"endColumn":13},{"ruleId":"1163","severity":2,"message":"1164","line":68,"column":7,"nodeType":"1165","messageId":"1166","endLine":68,"endColumn":11,"suggestions":"1170"},{"ruleId":"1163","severity":2,"message":"1164","line":87,"column":37,"nodeType":"1165","messageId":"1166","endLine":87,"endColumn":41,"suggestions":"1171"},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":9,"column":8,"nodeType":"1161","messageId":"1162","endLine":9,"endColumn":13},{"ruleId":"1172","severity":2,"message":"1173","line":43,"column":29,"nodeType":null,"messageId":"1174","endLine":43,"endColumn":31},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":13,"column":8,"nodeType":"1161","messageId":"1162","endLine":13,"endColumn":13},{"ruleId":"1172","severity":2,"message":"1175","line":77,"column":4,"nodeType":null,"messageId":"1174","endLine":77,"endColumn":6},{"ruleId":"1163","severity":2,"message":"1164","line":120,"column":15,"nodeType":"1165","messageId":"1166","endLine":120,"endColumn":19,"suggestions":"1176"},{"ruleId":"1163","severity":2,"message":"1164","line":179,"column":17,"nodeType":"1165","messageId":"1166","endLine":179,"endColumn":21,"suggestions":"1177"},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1163","severity":2,"message":"1164","line":31,"column":15,"nodeType":"1165","messageId":"1166","endLine":31,"endColumn":19,"suggestions":"1178"},{"ruleId":"1159","severity":1,"message":"1160","line":13,"column":8,"nodeType":"1161","messageId":"1162","endLine":13,"endColumn":13},{"ruleId":"1172","severity":2,"message":"1179","line":79,"column":48,"nodeType":null,"messageId":"1174","endLine":79,"endColumn":50},{"ruleId":"1163","severity":2,"message":"1164","line":111,"column":15,"nodeType":"1165","messageId":"1166","endLine":111,"endColumn":19,"suggestions":"1180"},{"ruleId":"1163","severity":2,"message":"1164","line":117,"column":15,"nodeType":"1165","messageId":"1166","endLine":117,"endColumn":19,"suggestions":"1181"},{"ruleId":"1182","severity":2,"message":"1183","line":138,"column":17,"nodeType":"1184","messageId":"1185","endLine":140,"endColumn":49},{"ruleId":"1182","severity":2,"message":"1183","line":156,"column":17,"nodeType":"1184","messageId":"1185","endLine":158,"endColumn":23},{"ruleId":"1163","severity":2,"message":"1164","line":247,"column":27,"nodeType":"1165","messageId":"1166","endLine":247,"endColumn":31,"suggestions":"1186"},{"ruleId":"1163","severity":2,"message":"1164","line":278,"column":27,"nodeType":"1165","messageId":"1166","endLine":278,"endColumn":31,"suggestions":"1187"},{"ruleId":"1159","severity":1,"message":"1160","line":8,"column":8,"nodeType":"1161","messageId":"1162","endLine":8,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":12,"column":8,"nodeType":"1161","messageId":"1162","endLine":12,"endColumn":13},{"ruleId":"1188","severity":1,"message":"1189","line":18,"column":47,"nodeType":"1190","messageId":"1191","endLine":18,"endColumn":50,"suggestions":"1192"},{"ruleId":"1188","severity":1,"message":"1189","line":18,"column":53,"nodeType":"1190","messageId":"1191","endLine":18,"endColumn":56,"suggestions":"1193"},{"ruleId":"1188","severity":1,"message":"1189","line":35,"column":47,"nodeType":"1190","messageId":"1191","endLine":35,"endColumn":50,"suggestions":"1194"},{"ruleId":"1188","severity":1,"message":"1189","line":35,"column":53,"nodeType":"1190","messageId":"1191","endLine":35,"endColumn":56,"suggestions":"1195"},{"ruleId":"1188","severity":1,"message":"1189","line":54,"column":28,"nodeType":"1190","messageId":"1191","endLine":54,"endColumn":31,"suggestions":"1196"},{"ruleId":"1159","severity":1,"message":"1160","line":11,"column":8,"nodeType":"1161","messageId":"1162","endLine":11,"endColumn":13},{"ruleId":"1172","severity":2,"message":"1197","line":34,"column":4,"nodeType":null,"messageId":"1174","endLine":34,"endColumn":6},{"ruleId":"1198","severity":2,"message":"1199","line":37,"column":8,"nodeType":"1200","messageId":"1166","endLine":37,"endColumn":25,"suggestions":"1201"},{"ruleId":"1163","severity":2,"message":"1164","line":103,"column":15,"nodeType":"1165","messageId":"1166","endLine":103,"endColumn":19,"suggestions":"1202"},{"ruleId":"1159","severity":1,"message":"1160","line":14,"column":8,"nodeType":"1161","messageId":"1162","endLine":14,"endColumn":13},{"ruleId":"1203","severity":2,"message":"1204","line":27,"column":42,"nodeType":"1205","messageId":"1206","endLine":27,"endColumn":44},{"ruleId":"1172","severity":2,"message":"1207","line":44,"column":29,"nodeType":null,"messageId":"1174","endLine":44,"endColumn":31},{"ruleId":"1208","severity":1,"message":"1209","line":118,"column":29,"nodeType":"1210","messageId":"1211","endLine":118,"endColumn":58},{"ruleId":"1163","severity":2,"message":"1164","line":179,"column":27,"nodeType":"1165","messageId":"1166","endLine":179,"endColumn":31,"suggestions":"1212"},{"ruleId":"1163","severity":2,"message":"1164","line":192,"column":33,"nodeType":"1165","messageId":"1166","endLine":192,"endColumn":37,"suggestions":"1213"},{"ruleId":"1163","severity":2,"message":"1164","line":207,"column":33,"nodeType":"1165","messageId":"1166","endLine":207,"endColumn":37,"suggestions":"1214"},{"ruleId":"1163","severity":2,"message":"1164","line":210,"column":27,"nodeType":"1165","messageId":"1166","endLine":210,"endColumn":31,"suggestions":"1215"},{"ruleId":"1188","severity":1,"message":"1189","line":226,"column":15,"nodeType":"1190","messageId":"1191","endLine":226,"endColumn":18,"suggestions":"1216"},{"ruleId":"1188","severity":1,"message":"1189","line":226,"column":23,"nodeType":"1190","messageId":"1191","endLine":226,"endColumn":26,"suggestions":"1217"},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1172","severity":2,"message":"1218","line":39,"column":4,"nodeType":null,"messageId":"1174","endLine":39,"endColumn":6},{"ruleId":"1219","severity":2,"message":"1220","line":49,"column":24,"nodeType":"1165","messageId":"1221","endLine":49,"endColumn":36},{"ruleId":"1222","severity":2,"message":"1223","line":98,"column":31,"nodeType":"1161","messageId":"1224","endLine":98,"endColumn":37,"suggestions":"1225"},{"ruleId":"1163","severity":2,"message":"1164","line":140,"column":19,"nodeType":"1165","messageId":"1166","endLine":140,"endColumn":23,"suggestions":"1226"},{"ruleId":"1159","severity":1,"message":"1160","line":10,"column":8,"nodeType":"1161","messageId":"1162","endLine":10,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1172","severity":2,"message":"1227","line":24,"column":4,"nodeType":null,"messageId":"1174","endLine":24,"endColumn":6},{"ruleId":"1163","severity":2,"message":"1164","line":48,"column":11,"nodeType":"1165","messageId":"1166","endLine":48,"endColumn":15,"suggestions":"1228"},{"ruleId":"1163","severity":2,"message":"1164","line":61,"column":38,"nodeType":"1165","messageId":"1166","endLine":61,"endColumn":42,"suggestions":"1229"},{"ruleId":"1163","severity":2,"message":"1164","line":67,"column":15,"nodeType":"1165","messageId":"1166","endLine":67,"endColumn":19,"suggestions":"1230"},{"ruleId":"1163","severity":2,"message":"1164","line":84,"column":19,"nodeType":"1165","messageId":"1166","endLine":84,"endColumn":23,"suggestions":"1231"},{"ruleId":"1163","severity":2,"message":"1164","line":86,"column":15,"nodeType":"1165","messageId":"1166","endLine":86,"endColumn":19,"suggestions":"1232"},{"ruleId":"1163","severity":2,"message":"1164","line":89,"column":9,"nodeType":"1165","messageId":"1166","endLine":89,"endColumn":13,"suggestions":"1233"},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":12,"column":8,"nodeType":"1161","messageId":"1162","endLine":12,"endColumn":13},{"ruleId":"1198","severity":2,"message":"1199","line":96,"column":11,"nodeType":"1200","messageId":"1166","endLine":96,"endColumn":57,"suggestions":"1234"},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":8,"column":8,"nodeType":"1161","messageId":"1162","endLine":8,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":10,"column":8,"nodeType":"1161","messageId":"1162","endLine":10,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":10,"column":8,"nodeType":"1161","messageId":"1162","endLine":10,"endColumn":13},{"ruleId":"1163","severity":2,"message":"1164","line":83,"column":17,"nodeType":"1165","messageId":"1166","endLine":83,"endColumn":21,"suggestions":"1235"},{"ruleId":"1163","severity":2,"message":"1164","line":90,"column":13,"nodeType":"1165","messageId":"1166","endLine":90,"endColumn":17,"suggestions":"1236"},{"ruleId":"1159","severity":1,"message":"1160","line":19,"column":8,"nodeType":"1161","messageId":"1162","endLine":19,"endColumn":13},{"ruleId":"1203","severity":2,"message":"1204","line":56,"column":41,"nodeType":"1205","messageId":"1206","endLine":56,"endColumn":43},{"ruleId":"1172","severity":2,"message":"1237","line":60,"column":56,"nodeType":null,"messageId":"1174","endLine":60,"endColumn":58},{"ruleId":"1163","severity":2,"message":"1164","line":223,"column":31,"nodeType":"1165","messageId":"1166","endLine":223,"endColumn":35,"suggestions":"1238"},{"ruleId":"1163","severity":2,"message":"1164","line":241,"column":39,"nodeType":"1165","messageId":"1166","endLine":241,"endColumn":43,"suggestions":"1239"},{"ruleId":"1163","severity":2,"message":"1164","line":264,"column":39,"nodeType":"1165","messageId":"1166","endLine":264,"endColumn":43,"suggestions":"1240"},{"ruleId":"1163","severity":2,"message":"1164","line":268,"column":31,"nodeType":"1165","messageId":"1166","endLine":268,"endColumn":35,"suggestions":"1241"},{"ruleId":"1188","severity":1,"message":"1189","line":10,"column":21,"nodeType":"1190","messageId":"1191","endLine":10,"endColumn":24,"suggestions":"1242"},{"ruleId":"1188","severity":1,"message":"1189","line":11,"column":24,"nodeType":"1190","messageId":"1191","endLine":11,"endColumn":27,"suggestions":"1243"},{"ruleId":"1159","severity":1,"message":"1160","line":15,"column":8,"nodeType":"1161","messageId":"1162","endLine":15,"endColumn":13},{"ruleId":"1208","severity":1,"message":"1209","line":242,"column":27,"nodeType":"1210","messageId":"1211","endLine":242,"endColumn":54},{"ruleId":"1159","severity":1,"message":"1160","line":8,"column":8,"nodeType":"1161","messageId":"1162","endLine":8,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1172","severity":2,"message":"1244","line":64,"column":44,"nodeType":null,"messageId":"1174","endLine":64,"endColumn":46},{"ruleId":"1163","severity":2,"message":"1164","line":68,"column":32,"nodeType":"1165","messageId":"1166","endLine":68,"endColumn":36,"suggestions":"1245"},{"ruleId":"1159","severity":1,"message":"1160","line":8,"column":8,"nodeType":"1161","messageId":"1162","endLine":8,"endColumn":13},{"ruleId":"1246","severity":2,"message":"1247","line":46,"column":17,"nodeType":"1184","messageId":"1248","endLine":46,"endColumn":65,"suggestions":"1249"},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1172","severity":2,"message":"1250","line":72,"column":4,"nodeType":null,"messageId":"1174","endLine":72,"endColumn":6},{"ruleId":"1182","severity":2,"message":"1183","line":112,"column":13,"nodeType":"1184","messageId":"1185","endLine":143,"endColumn":17},{"ruleId":"1163","severity":2,"message":"1164","line":127,"column":43,"nodeType":"1165","messageId":"1166","endLine":127,"endColumn":47,"suggestions":"1251"},{"ruleId":"1163","severity":2,"message":"1164","line":143,"column":13,"nodeType":"1165","messageId":"1166","endLine":143,"endColumn":17,"suggestions":"1252"},{"ruleId":"1159","severity":1,"message":"1160","line":13,"column":8,"nodeType":"1161","messageId":"1162","endLine":13,"endColumn":13},{"ruleId":"1172","severity":2,"message":"1253","line":41,"column":4,"nodeType":null,"messageId":"1174","endLine":41,"endColumn":6},{"ruleId":"1163","severity":2,"message":"1164","line":59,"column":21,"nodeType":"1165","messageId":"1166","endLine":59,"endColumn":25,"suggestions":"1254"},{"ruleId":"1163","severity":2,"message":"1164","line":77,"column":17,"nodeType":"1165","messageId":"1166","endLine":77,"endColumn":21,"suggestions":"1255"},{"ruleId":"1163","severity":2,"message":"1164","line":122,"column":23,"nodeType":"1165","messageId":"1166","endLine":122,"endColumn":27,"suggestions":"1256"},{"ruleId":"1163","severity":2,"message":"1164","line":151,"column":19,"nodeType":"1165","messageId":"1166","endLine":151,"endColumn":23,"suggestions":"1257"},{"ruleId":"1163","severity":2,"message":"1164","line":184,"column":19,"nodeType":"1165","messageId":"1166","endLine":184,"endColumn":23,"suggestions":"1258"},{"ruleId":"1163","severity":2,"message":"1164","line":211,"column":19,"nodeType":"1165","messageId":"1166","endLine":211,"endColumn":23,"suggestions":"1259"},{"ruleId":"1159","severity":1,"message":"1160","line":9,"column":8,"nodeType":"1161","messageId":"1162","endLine":9,"endColumn":13},{"ruleId":"1163","severity":2,"message":"1164","line":72,"column":21,"nodeType":"1165","messageId":"1166","endLine":72,"endColumn":25,"suggestions":"1260"},{"ruleId":"1163","severity":2,"message":"1164","line":106,"column":15,"nodeType":"1165","messageId":"1166","endLine":106,"endColumn":19,"suggestions":"1261"},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1188","severity":1,"message":"1189","line":154,"column":38,"nodeType":"1190","messageId":"1191","endLine":154,"endColumn":41,"suggestions":"1262"},{"ruleId":"1159","severity":1,"message":"1160","line":10,"column":8,"nodeType":"1161","messageId":"1162","endLine":10,"endColumn":13},{"ruleId":"1172","severity":2,"message":"1263","line":50,"column":5,"nodeType":null,"messageId":"1174","endLine":50,"endColumn":7},{"ruleId":"1163","severity":2,"message":"1164","line":83,"column":13,"nodeType":"1165","messageId":"1166","endLine":83,"endColumn":17,"suggestions":"1264"},{"ruleId":"1163","severity":2,"message":"1164","line":107,"column":17,"nodeType":"1165","messageId":"1166","endLine":107,"endColumn":21,"suggestions":"1265"},{"ruleId":"1163","severity":2,"message":"1164","line":114,"column":13,"nodeType":"1165","messageId":"1166","endLine":114,"endColumn":17,"suggestions":"1266"},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1172","severity":2,"message":"1267","line":28,"column":52,"nodeType":null,"messageId":"1174","endLine":28,"endColumn":54},{"ruleId":"1246","severity":2,"message":"1247","line":54,"column":19,"nodeType":"1184","messageId":"1248","endLine":54,"endColumn":67,"suggestions":"1268"},{"ruleId":"1159","severity":1,"message":"1160","line":11,"column":8,"nodeType":"1161","messageId":"1162","endLine":11,"endColumn":13},{"ruleId":"1163","severity":2,"message":"1164","line":155,"column":19,"nodeType":"1165","messageId":"1166","endLine":155,"endColumn":23,"suggestions":"1269"},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1163","severity":2,"message":"1164","line":18,"column":60,"nodeType":"1165","messageId":"1166","endLine":18,"endColumn":64,"suggestions":"1270"},{"ruleId":"1163","severity":2,"message":"1164","line":19,"column":59,"nodeType":"1165","messageId":"1166","endLine":19,"endColumn":63,"suggestions":"1271"},{"ruleId":"1163","severity":2,"message":"1164","line":22,"column":9,"nodeType":"1165","messageId":"1166","endLine":22,"endColumn":13,"suggestions":"1272"},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1163","severity":2,"message":"1164","line":23,"column":57,"nodeType":"1165","messageId":"1166","endLine":23,"endColumn":61,"suggestions":"1273"},{"ruleId":"1163","severity":2,"message":"1164","line":70,"column":11,"nodeType":"1165","messageId":"1166","endLine":70,"endColumn":15,"suggestions":"1274"},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1172","severity":2,"message":"1275","line":32,"column":29,"nodeType":null,"messageId":"1174","endLine":32,"endColumn":31},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1172","severity":2,"message":"1276","line":24,"column":64,"nodeType":null,"messageId":"1174","endLine":24,"endColumn":66},{"ruleId":"1159","severity":1,"message":"1160","line":8,"column":8,"nodeType":"1161","messageId":"1162","endLine":8,"endColumn":13},{"ruleId":"1246","severity":2,"message":"1247","line":61,"column":16,"nodeType":"1184","messageId":"1248","endLine":63,"endColumn":19,"suggestions":"1277"},{"ruleId":"1163","severity":2,"message":"1164","line":63,"column":15,"nodeType":"1165","messageId":"1166","endLine":63,"endColumn":19,"suggestions":"1278"},{"ruleId":"1159","severity":1,"message":"1160","line":13,"column":8,"nodeType":"1161","messageId":"1162","endLine":13,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1279","line":20,"column":3,"nodeType":"1161","messageId":"1162","endLine":20,"endColumn":11},{"ruleId":"1172","severity":2,"message":"1280","line":23,"column":4,"nodeType":null,"messageId":"1174","endLine":23,"endColumn":6},{"ruleId":"1208","severity":1,"message":"1209","line":100,"column":31,"nodeType":"1210","messageId":"1211","endLine":100,"endColumn":60},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":12,"column":8,"nodeType":"1161","messageId":"1162","endLine":12,"endColumn":13},{"ruleId":"1188","severity":1,"message":"1189","line":18,"column":41,"nodeType":"1190","messageId":"1191","endLine":18,"endColumn":44,"suggestions":"1281"},{"ruleId":"1188","severity":1,"message":"1189","line":18,"column":47,"nodeType":"1190","messageId":"1191","endLine":18,"endColumn":50,"suggestions":"1282"},{"ruleId":"1188","severity":1,"message":"1189","line":37,"column":41,"nodeType":"1190","messageId":"1191","endLine":37,"endColumn":44,"suggestions":"1283"},{"ruleId":"1188","severity":1,"message":"1189","line":37,"column":47,"nodeType":"1190","messageId":"1191","endLine":37,"endColumn":50,"suggestions":"1284"},{"ruleId":"1188","severity":1,"message":"1189","line":56,"column":28,"nodeType":"1190","messageId":"1191","endLine":56,"endColumn":31,"suggestions":"1285"},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1172","severity":2,"message":"1263","line":30,"column":4,"nodeType":null,"messageId":"1174","endLine":30,"endColumn":6},{"ruleId":"1198","severity":2,"message":"1199","line":33,"column":8,"nodeType":"1200","messageId":"1166","endLine":33,"endColumn":24,"suggestions":"1286"},{"ruleId":"1159","severity":1,"message":"1160","line":18,"column":8,"nodeType":"1161","messageId":"1162","endLine":18,"endColumn":13},{"ruleId":"1188","severity":1,"message":"1189","line":88,"column":41,"nodeType":"1190","messageId":"1191","endLine":88,"endColumn":44,"suggestions":"1287"},{"ruleId":"1188","severity":1,"message":"1189","line":88,"column":47,"nodeType":"1190","messageId":"1191","endLine":88,"endColumn":50,"suggestions":"1288"},{"ruleId":"1208","severity":1,"message":"1209","line":158,"column":31,"nodeType":"1210","messageId":"1211","endLine":158,"endColumn":61},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1163","severity":2,"message":"1164","line":22,"column":74,"nodeType":"1165","messageId":"1166","endLine":22,"endColumn":78,"suggestions":"1289"},{"ruleId":"1163","severity":2,"message":"1164","line":23,"column":69,"nodeType":"1165","messageId":"1166","endLine":23,"endColumn":73,"suggestions":"1290"},{"ruleId":"1163","severity":2,"message":"1164","line":32,"column":9,"nodeType":"1165","messageId":"1166","endLine":32,"endColumn":13,"suggestions":"1291"},{"ruleId":"1163","severity":2,"message":"1164","line":35,"column":9,"nodeType":"1165","messageId":"1166","endLine":35,"endColumn":13,"suggestions":"1292"},{"ruleId":"1163","severity":2,"message":"1164","line":36,"column":69,"nodeType":"1165","messageId":"1166","endLine":36,"endColumn":73,"suggestions":"1293"},{"ruleId":"1159","severity":1,"message":"1160","line":14,"column":8,"nodeType":"1161","messageId":"1162","endLine":14,"endColumn":13},{"ruleId":"1203","severity":2,"message":"1204","line":27,"column":40,"nodeType":"1205","messageId":"1206","endLine":27,"endColumn":42},{"ruleId":"1172","severity":2,"message":"1294","line":30,"column":54,"nodeType":null,"messageId":"1174","endLine":30,"endColumn":56},{"ruleId":"1208","severity":1,"message":"1209","line":112,"column":31,"nodeType":"1210","messageId":"1211","endLine":112,"endColumn":60},{"ruleId":"1163","severity":2,"message":"1164","line":180,"column":27,"nodeType":"1165","messageId":"1166","endLine":180,"endColumn":31,"suggestions":"1295"},{"ruleId":"1163","severity":2,"message":"1164","line":193,"column":33,"nodeType":"1165","messageId":"1166","endLine":193,"endColumn":37,"suggestions":"1296"},{"ruleId":"1163","severity":2,"message":"1164","line":196,"column":27,"nodeType":"1165","messageId":"1166","endLine":196,"endColumn":31,"suggestions":"1297"},{"ruleId":"1188","severity":1,"message":"1189","line":211,"column":15,"nodeType":"1190","messageId":"1191","endLine":211,"endColumn":18,"suggestions":"1298"},{"ruleId":"1188","severity":1,"message":"1189","line":211,"column":23,"nodeType":"1190","messageId":"1191","endLine":211,"endColumn":26,"suggestions":"1299"},{"ruleId":"1159","severity":1,"message":"1160","line":11,"column":8,"nodeType":"1161","messageId":"1162","endLine":11,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":13,"column":8,"nodeType":"1161","messageId":"1162","endLine":13,"endColumn":13},{"ruleId":"1188","severity":1,"message":"1189","line":19,"column":43,"nodeType":"1190","messageId":"1191","endLine":19,"endColumn":46,"suggestions":"1300"},{"ruleId":"1188","severity":1,"message":"1189","line":19,"column":49,"nodeType":"1190","messageId":"1191","endLine":19,"endColumn":52,"suggestions":"1301"},{"ruleId":"1188","severity":1,"message":"1189","line":50,"column":45,"nodeType":"1190","messageId":"1191","endLine":50,"endColumn":48,"suggestions":"1302"},{"ruleId":"1188","severity":1,"message":"1189","line":50,"column":51,"nodeType":"1190","messageId":"1191","endLine":50,"endColumn":54,"suggestions":"1303"},{"ruleId":"1188","severity":1,"message":"1189","line":69,"column":28,"nodeType":"1190","messageId":"1191","endLine":69,"endColumn":31,"suggestions":"1304"},{"ruleId":"1159","severity":1,"message":"1160","line":10,"column":8,"nodeType":"1161","messageId":"1162","endLine":10,"endColumn":13},{"ruleId":"1172","severity":2,"message":"1197","line":51,"column":4,"nodeType":null,"messageId":"1174","endLine":51,"endColumn":6},{"ruleId":"1159","severity":1,"message":"1160","line":6,"column":8,"nodeType":"1161","messageId":"1162","endLine":6,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1172","severity":2,"message":"1275","line":86,"column":4,"nodeType":null,"messageId":"1174","endLine":86,"endColumn":6},{"ruleId":"1198","severity":2,"message":"1199","line":89,"column":8,"nodeType":"1200","messageId":"1166","endLine":89,"endColumn":50,"suggestions":"1305"},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1172","severity":2,"message":"1306","line":94,"column":4,"nodeType":null,"messageId":"1174","endLine":94,"endColumn":6},{"ruleId":"1198","severity":2,"message":"1199","line":97,"column":8,"nodeType":"1200","messageId":"1166","endLine":97,"endColumn":50,"suggestions":"1307"},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1172","severity":2,"message":"1308","line":92,"column":4,"nodeType":null,"messageId":"1174","endLine":92,"endColumn":6},{"ruleId":"1163","severity":2,"message":"1164","line":94,"column":51,"nodeType":"1165","messageId":"1166","endLine":94,"endColumn":55,"suggestions":"1309"},{"ruleId":"1198","severity":2,"message":"1199","line":96,"column":10,"nodeType":"1200","messageId":"1166","endLine":96,"endColumn":52,"suggestions":"1310"},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":3,"column":8,"nodeType":"1161","messageId":"1162","endLine":3,"endColumn":13},{"ruleId":"1163","severity":2,"message":"1164","line":18,"column":12,"nodeType":"1165","messageId":"1166","endLine":18,"endColumn":16,"suggestions":"1311"},{"ruleId":"1159","severity":1,"message":"1160","line":1,"column":8,"nodeType":"1161","messageId":"1162","endLine":1,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":3,"column":8,"nodeType":"1161","messageId":"1162","endLine":3,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":3,"column":8,"nodeType":"1161","messageId":"1162","endLine":3,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1312","severity":2,"message":"1313","line":3,"column":1,"nodeType":"1314","messageId":"1315","endLine":3,"endColumn":14},{"ruleId":"1163","severity":2,"message":"1164","line":23,"column":65,"nodeType":"1165","messageId":"1166","endLine":23,"endColumn":69,"suggestions":"1316"},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1312","severity":2,"message":"1313","line":3,"column":1,"nodeType":"1314","messageId":"1315","endLine":3,"endColumn":14},{"ruleId":"1312","severity":2,"message":"1313","line":5,"column":1,"nodeType":"1314","messageId":"1315","endLine":5,"endColumn":14},{"ruleId":"1163","severity":2,"message":"1164","line":31,"column":9,"nodeType":"1165","messageId":"1166","endLine":31,"endColumn":13,"suggestions":"1317"},{"ruleId":"1159","severity":1,"message":"1160","line":16,"column":8,"nodeType":"1161","messageId":"1162","endLine":16,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":3,"column":8,"nodeType":"1161","messageId":"1162","endLine":3,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1161","messageId":"1162","endLine":2,"endColumn":13},{"ruleId":"1159","severity":1,"message":"1160","line":1,"column":8,"nodeType":"1161","messageId":"1162","endLine":1,"endColumn":13},{"ruleId":"1312","severity":2,"message":"1313","line":2,"column":1,"nodeType":"1314","messageId":"1315","endLine":2,"endColumn":14},{"ruleId":"1312","severity":2,"message":"1313","line":4,"column":1,"nodeType":"1314","messageId":"1315","endLine":4,"endColumn":14},{"ruleId":"1312","severity":2,"message":"1313","line":6,"column":1,"nodeType":"1314","messageId":"1315","endLine":6,"endColumn":14},"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","unicorn/no-null","Use `undefined` instead of `null`.","Literal","error",["1318","1319"],["1320"],["1321"],["1322"],["1323"],"sonarjs/cognitive-complexity","Refactor this function to reduce its Cognitive Complexity from 16 to the 15 allowed.","refactorFunction","Refactor this function to reduce its Cognitive Complexity from 49 to the 15 allowed.",["1324"],["1325"],["1326"],"Refactor this function to reduce its Cognitive Complexity from 126 to the 15 allowed.",["1327"],["1328"],"unicorn/no-nested-ternary","Do not nest ternary expressions.","ConditionalExpression","too-deep",["1329"],["1330"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["1331","1332"],["1333","1334"],["1335","1336"],["1337","1338"],["1339","1340"],"Refactor this function to reduce its Cognitive Complexity from 34 to the 15 allowed.","unicorn/no-new-array","Do not use `new Array()`.","NewExpression",["1341","1342"],["1343"],"@typescript-eslint/ban-types","Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead.","TSTypeLiteral","bannedTypeMessage","Refactor this function to reduce its Cognitive Complexity from 36 to the 15 allowed.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["1344"],["1345"],["1346"],["1347"],["1348","1349"],["1350","1351"],"Refactor this function to reduce its Cognitive Complexity from 41 to the 15 allowed.","sonarjs/no-duplicate-string","Define a constant instead of duplicating this literal 4 times.","defineConstant","unicorn/prefer-spread","Prefer the spread operator over `Array#concat(…)`.","array-concat",["1352","1353","1354"],["1355"],"Refactor this function to reduce its Cognitive Complexity from 56 to the 15 allowed.",["1356"],["1357"],["1358"],["1359"],["1360"],["1361"],["1362","1363"],["1364"],["1365"],"Refactor this function to reduce its Cognitive Complexity from 92 to the 15 allowed.",["1366"],["1367"],["1368"],["1369"],["1370","1371"],["1372","1373"],"Refactor this function to reduce its Cognitive Complexity from 38 to the 15 allowed.",["1374"],"unicorn/prefer-logical-operator-over-ternary","Prefer using a logical operator over a ternary.","prefer-logical-operator-over-ternary/error",["1375","1376"],"Refactor this function to reduce its Cognitive Complexity from 43 to the 15 allowed.",["1377"],["1378"],"Refactor this function to reduce its Cognitive Complexity from 91 to the 15 allowed.",["1379"],["1380"],["1381"],["1382"],["1383"],["1384"],["1385"],["1386"],["1387","1388"],"Refactor this function to reduce its Cognitive Complexity from 20 to the 15 allowed.",["1389"],["1390"],["1391"],"Refactor this function to reduce its Cognitive Complexity from 19 to the 15 allowed.",["1392","1393"],["1394"],["1395"],["1396"],["1397"],["1398"],["1399"],"Refactor this function to reduce its Cognitive Complexity from 18 to the 15 allowed.","Refactor this function to reduce its Cognitive Complexity from 37 to the 15 allowed.",["1400","1401"],["1402"],"'tabIndex' is assigned a value but never used.","Refactor this function to reduce its Cognitive Complexity from 22 to the 15 allowed.",["1403","1404"],["1405","1406"],["1407","1408"],["1409","1410"],["1411","1412"],["1413","1414"],["1415","1416"],["1417","1418"],["1419"],["1420"],["1421"],["1422"],["1423"],"Refactor this function to reduce its Cognitive Complexity from 47 to the 15 allowed.",["1424"],["1425"],["1426"],["1427","1428"],["1429","1430"],["1431","1432"],["1433","1434"],["1435","1436"],["1437","1438"],["1439","1440"],["1441","1442"],"Refactor this function to reduce its Cognitive Complexity from 28 to the 15 allowed.",["1443","1444"],"Refactor this function to reduce its Cognitive Complexity from 29 to the 15 allowed.",["1445"],["1446","1447"],["1448","1449"],"@typescript-eslint/ban-ts-comment","Do not use \"@ts-ignore\" because it alters compilation errors.","Line","tsDirectiveComment",["1450"],["1451"],{"messageId":"1452","fix":"1453","data":"1454","desc":"1455"},{"messageId":"1456","fix":"1457","data":"1458","desc":"1459"},{"messageId":"1456","fix":"1460","data":"1461","desc":"1459"},{"messageId":"1456","fix":"1462","data":"1463","desc":"1459"},{"messageId":"1456","fix":"1464","data":"1465","desc":"1459"},{"messageId":"1456","fix":"1466","data":"1467","desc":"1459"},{"messageId":"1456","fix":"1468","data":"1469","desc":"1459"},{"messageId":"1456","fix":"1470","data":"1471","desc":"1459"},{"messageId":"1456","fix":"1472","data":"1473","desc":"1459"},{"messageId":"1456","fix":"1474","data":"1475","desc":"1459"},{"messageId":"1456","fix":"1476","data":"1477","desc":"1459"},{"messageId":"1456","fix":"1478","data":"1479","desc":"1459"},{"messageId":"1456","fix":"1480","data":"1481","desc":"1459"},{"messageId":"1482","fix":"1483","desc":"1484"},{"messageId":"1485","fix":"1486","desc":"1487"},{"messageId":"1482","fix":"1488","desc":"1484"},{"messageId":"1485","fix":"1489","desc":"1487"},{"messageId":"1482","fix":"1490","desc":"1484"},{"messageId":"1485","fix":"1491","desc":"1487"},{"messageId":"1482","fix":"1492","desc":"1484"},{"messageId":"1485","fix":"1493","desc":"1487"},{"messageId":"1482","fix":"1494","desc":"1484"},{"messageId":"1485","fix":"1495","desc":"1487"},{"messageId":"1496","fix":"1497","data":"1498","desc":"1499"},{"messageId":"1500","fix":"1501","data":"1502","desc":"1503"},{"messageId":"1456","fix":"1504","data":"1505","desc":"1459"},{"messageId":"1456","fix":"1506","data":"1507","desc":"1459"},{"messageId":"1456","fix":"1508","data":"1509","desc":"1459"},{"messageId":"1456","fix":"1510","data":"1511","desc":"1459"},{"messageId":"1456","fix":"1512","data":"1513","desc":"1459"},{"messageId":"1482","fix":"1514","desc":"1484"},{"messageId":"1485","fix":"1515","desc":"1487"},{"messageId":"1482","fix":"1516","desc":"1484"},{"messageId":"1485","fix":"1517","desc":"1487"},{"messageId":"1518","fix":"1519","data":"1520","desc":"1521"},{"messageId":"1522","fix":"1523","data":"1524","desc":"1525"},{"messageId":"1526","fix":"1527","data":"1528","desc":"1529"},{"messageId":"1456","fix":"1530","data":"1531","desc":"1459"},{"messageId":"1456","fix":"1532","data":"1533","desc":"1459"},{"messageId":"1456","fix":"1534","data":"1535","desc":"1459"},{"messageId":"1456","fix":"1536","data":"1537","desc":"1459"},{"messageId":"1456","fix":"1538","data":"1539","desc":"1459"},{"messageId":"1456","fix":"1540","data":"1541","desc":"1459"},{"messageId":"1456","fix":"1542","data":"1543","desc":"1459"},{"messageId":"1496","fix":"1544","data":"1545","desc":"1499"},{"messageId":"1500","fix":"1546","data":"1547","desc":"1503"},{"messageId":"1456","fix":"1548","data":"1549","desc":"1459"},{"messageId":"1456","fix":"1550","data":"1551","desc":"1459"},{"messageId":"1456","fix":"1552","data":"1553","desc":"1459"},{"messageId":"1456","fix":"1554","data":"1555","desc":"1459"},{"messageId":"1456","fix":"1556","data":"1557","desc":"1459"},{"messageId":"1456","fix":"1558","data":"1559","desc":"1459"},{"messageId":"1482","fix":"1560","desc":"1484"},{"messageId":"1485","fix":"1561","desc":"1487"},{"messageId":"1482","fix":"1562","desc":"1484"},{"messageId":"1485","fix":"1563","desc":"1487"},{"messageId":"1456","fix":"1564","data":"1565","desc":"1459"},{"messageId":"1566","data":"1567","fix":"1568","desc":"1569"},{"messageId":"1566","data":"1570","fix":"1571","desc":"1572"},{"messageId":"1456","fix":"1573","data":"1574","desc":"1459"},{"messageId":"1456","fix":"1575","data":"1576","desc":"1459"},{"messageId":"1456","fix":"1577","data":"1578","desc":"1459"},{"messageId":"1456","fix":"1579","data":"1580","desc":"1459"},{"messageId":"1456","fix":"1581","data":"1582","desc":"1459"},{"messageId":"1456","fix":"1583","data":"1584","desc":"1459"},{"messageId":"1456","fix":"1585","data":"1586","desc":"1459"},{"messageId":"1456","fix":"1587","data":"1588","desc":"1459"},{"messageId":"1456","fix":"1589","data":"1590","desc":"1459"},{"messageId":"1456","fix":"1591","data":"1592","desc":"1459"},{"messageId":"1482","fix":"1593","desc":"1484"},{"messageId":"1485","fix":"1594","desc":"1487"},{"messageId":"1456","fix":"1595","data":"1596","desc":"1459"},{"messageId":"1456","fix":"1597","data":"1598","desc":"1459"},{"messageId":"1456","fix":"1599","data":"1600","desc":"1459"},{"messageId":"1566","data":"1601","fix":"1602","desc":"1569"},{"messageId":"1566","data":"1603","fix":"1604","desc":"1572"},{"messageId":"1456","fix":"1605","data":"1606","desc":"1459"},{"messageId":"1456","fix":"1607","data":"1608","desc":"1459"},{"messageId":"1456","fix":"1609","data":"1610","desc":"1459"},{"messageId":"1456","fix":"1611","data":"1612","desc":"1459"},{"messageId":"1456","fix":"1613","data":"1614","desc":"1459"},{"messageId":"1456","fix":"1615","data":"1616","desc":"1459"},{"messageId":"1566","data":"1617","fix":"1618","desc":"1569"},{"messageId":"1566","data":"1619","fix":"1620","desc":"1572"},{"messageId":"1456","fix":"1621","data":"1622","desc":"1459"},{"messageId":"1482","fix":"1623","desc":"1484"},{"messageId":"1485","fix":"1624","desc":"1487"},{"messageId":"1482","fix":"1625","desc":"1484"},{"messageId":"1485","fix":"1626","desc":"1487"},{"messageId":"1482","fix":"1627","desc":"1484"},{"messageId":"1485","fix":"1628","desc":"1487"},{"messageId":"1482","fix":"1629","desc":"1484"},{"messageId":"1485","fix":"1630","desc":"1487"},{"messageId":"1482","fix":"1631","desc":"1484"},{"messageId":"1485","fix":"1632","desc":"1487"},{"messageId":"1496","fix":"1633","data":"1634","desc":"1499"},{"messageId":"1500","fix":"1635","data":"1636","desc":"1503"},{"messageId":"1482","fix":"1637","desc":"1484"},{"messageId":"1485","fix":"1638","desc":"1487"},{"messageId":"1482","fix":"1639","desc":"1484"},{"messageId":"1485","fix":"1640","desc":"1487"},{"messageId":"1456","fix":"1641","data":"1642","desc":"1459"},{"messageId":"1456","fix":"1643","data":"1644","desc":"1459"},{"messageId":"1456","fix":"1645","data":"1646","desc":"1459"},{"messageId":"1456","fix":"1647","data":"1648","desc":"1459"},{"messageId":"1456","fix":"1649","data":"1650","desc":"1459"},{"messageId":"1456","fix":"1651","data":"1652","desc":"1459"},{"messageId":"1456","fix":"1653","data":"1654","desc":"1459"},{"messageId":"1456","fix":"1655","data":"1656","desc":"1459"},{"messageId":"1482","fix":"1657","desc":"1484"},{"messageId":"1485","fix":"1658","desc":"1487"},{"messageId":"1482","fix":"1659","desc":"1484"},{"messageId":"1485","fix":"1660","desc":"1487"},{"messageId":"1482","fix":"1661","desc":"1484"},{"messageId":"1485","fix":"1662","desc":"1487"},{"messageId":"1482","fix":"1663","desc":"1484"},{"messageId":"1485","fix":"1664","desc":"1487"},{"messageId":"1482","fix":"1665","desc":"1484"},{"messageId":"1485","fix":"1666","desc":"1487"},{"messageId":"1482","fix":"1667","desc":"1484"},{"messageId":"1485","fix":"1668","desc":"1487"},{"messageId":"1482","fix":"1669","desc":"1484"},{"messageId":"1485","fix":"1670","desc":"1487"},{"messageId":"1496","fix":"1671","data":"1672","desc":"1499"},{"messageId":"1500","fix":"1673","data":"1674","desc":"1503"},{"messageId":"1496","fix":"1675","data":"1676","desc":"1499"},{"messageId":"1500","fix":"1677","data":"1678","desc":"1503"},{"messageId":"1456","fix":"1679","data":"1680","desc":"1459"},{"messageId":"1496","fix":"1681","data":"1682","desc":"1499"},{"messageId":"1500","fix":"1683","data":"1684","desc":"1503"},{"messageId":"1452","fix":"1685","data":"1686","desc":"1455"},{"messageId":"1456","fix":"1687","data":"1688","desc":"1459"},{"messageId":"1456","fix":"1689","data":"1690","desc":"1459"},{"messageId":"1456","fix":"1691","data":"1692","desc":"1459"},"remove",{"range":"1693","text":"1694"},{},"Remove `null`.","replace",{"range":"1693","text":"1695"},{},"Replace `null` with `undefined`.",{"range":"1696","text":"1695"},{},{"range":"1697","text":"1695"},{},{"range":"1698","text":"1695"},{},{"range":"1699","text":"1695"},{},{"range":"1700","text":"1695"},{},{"range":"1701","text":"1695"},{},{"range":"1702","text":"1695"},{},{"range":"1703","text":"1695"},{},{"range":"1704","text":"1695"},{},{"range":"1705","text":"1695"},{},{"range":"1706","text":"1695"},{},"suggestUnknown",{"range":"1707","text":"1708"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"1707","text":"1709"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"1710","text":"1708"},{"range":"1710","text":"1709"},{"range":"1711","text":"1708"},{"range":"1711","text":"1709"},{"range":"1712","text":"1708"},{"range":"1712","text":"1709"},{"range":"1713","text":"1708"},{"range":"1713","text":"1709"},"array-length",{"range":"1714","text":"1715"},{},"The argument is the length of array.","only-element",{"range":"1714","text":"1716"},{},"The argument is the only element of array.",{"range":"1717","text":"1695"},{},{"range":"1718","text":"1695"},{},{"range":"1719","text":"1695"},{},{"range":"1720","text":"1695"},{},{"range":"1721","text":"1695"},{},{"range":"1722","text":"1708"},{"range":"1722","text":"1709"},{"range":"1723","text":"1708"},{"range":"1723","text":"1709"},"argument-is-spreadable",{"range":"1724","text":"1725"},{},"First argument is an `array`.","argument-is-not-spreadable",{"range":"1726","text":"1727"},{},"First argument is not an `array`.","test-argument",{"range":"1728","text":"1729"},{},"Test first argument with `Array.isArray(…)`.",{"range":"1730","text":"1695"},{},{"range":"1731","text":"1695"},{},{"range":"1732","text":"1695"},{},{"range":"1733","text":"1695"},{},{"range":"1734","text":"1695"},{},{"range":"1735","text":"1695"},{},{"range":"1736","text":"1695"},{},{"range":"1737","text":"1738"},{},{"range":"1737","text":"1739"},{},{"range":"1740","text":"1695"},{},{"range":"1741","text":"1695"},{},{"range":"1742","text":"1695"},{},{"range":"1743","text":"1695"},{},{"range":"1744","text":"1695"},{},{"range":"1745","text":"1695"},{},{"range":"1746","text":"1708"},{"range":"1746","text":"1709"},{"range":"1747","text":"1708"},{"range":"1747","text":"1709"},{"range":"1748","text":"1695"},{},"prefer-logical-operator-over-ternary/suggestion",{"operator":"1749"},{"range":"1750","text":"1751"},"Switch to `??` operator.",{"operator":"1752"},{"range":"1750","text":"1753"},"Switch to `||` operator.",{"range":"1754","text":"1695"},{},{"range":"1755","text":"1695"},{},{"range":"1756","text":"1695"},{},{"range":"1757","text":"1695"},{},{"range":"1758","text":"1695"},{},{"range":"1759","text":"1695"},{},{"range":"1760","text":"1695"},{},{"range":"1761","text":"1695"},{},{"range":"1762","text":"1695"},{},{"range":"1763","text":"1695"},{},{"range":"1764","text":"1708"},{"range":"1764","text":"1709"},{"range":"1765","text":"1695"},{},{"range":"1766","text":"1695"},{},{"range":"1767","text":"1695"},{},{"operator":"1749"},{"range":"1768","text":"1751"},{"operator":"1752"},{"range":"1768","text":"1753"},{"range":"1769","text":"1695"},{},{"range":"1770","text":"1695"},{},{"range":"1771","text":"1695"},{},{"range":"1772","text":"1695"},{},{"range":"1773","text":"1695"},{},{"range":"1774","text":"1695"},{},{"operator":"1749"},{"range":"1775","text":"1776"},{"operator":"1752"},{"range":"1775","text":"1777"},{"range":"1778","text":"1695"},{},{"range":"1779","text":"1708"},{"range":"1779","text":"1709"},{"range":"1780","text":"1708"},{"range":"1780","text":"1709"},{"range":"1781","text":"1708"},{"range":"1781","text":"1709"},{"range":"1782","text":"1708"},{"range":"1782","text":"1709"},{"range":"1783","text":"1708"},{"range":"1783","text":"1709"},{"range":"1784","text":"1785"},{},{"range":"1784","text":"1786"},{},{"range":"1787","text":"1708"},{"range":"1787","text":"1709"},{"range":"1788","text":"1708"},{"range":"1788","text":"1709"},{"range":"1789","text":"1695"},{},{"range":"1790","text":"1695"},{},{"range":"1791","text":"1695"},{},{"range":"1792","text":"1695"},{},{"range":"1793","text":"1695"},{},{"range":"1794","text":"1695"},{},{"range":"1795","text":"1695"},{},{"range":"1796","text":"1695"},{},{"range":"1797","text":"1708"},{"range":"1797","text":"1709"},{"range":"1798","text":"1708"},{"range":"1798","text":"1709"},{"range":"1799","text":"1708"},{"range":"1799","text":"1709"},{"range":"1800","text":"1708"},{"range":"1800","text":"1709"},{"range":"1801","text":"1708"},{"range":"1801","text":"1709"},{"range":"1802","text":"1708"},{"range":"1802","text":"1709"},{"range":"1803","text":"1708"},{"range":"1803","text":"1709"},{"range":"1804","text":"1805"},{},{"range":"1804","text":"1806"},{},{"range":"1807","text":"1808"},{},{"range":"1807","text":"1809"},{},{"range":"1810","text":"1695"},{},{"range":"1811","text":"1805"},{},{"range":"1811","text":"1806"},{},{"range":"1812","text":"1694"},{},{"range":"1812","text":"1695"},{},{"range":"1813","text":"1695"},{},{"range":"1814","text":"1695"},{},[495,499],"","undefined",[1326,1330],[1804,1808],[1656,1660],[2266,2270],[2720,2724],[4764,4768],[745,749],[2388,2392],[2595,2599],[7541,7545],[8931,8935],[389,392],"unknown","never",[395,398],[936,939],[942,945],[1591,1594],[611,628],"Array.from({length})","[length]",[2932,2936],[6299,6303],[6914,6918],[7605,7609],[7707,7711],[7987,7990],[7995,7998],[2541,2583],"[...([] as DetailsText[]), ...item.content]",[2541,2583],"[...([] as DetailsText[]), item.content]",[2541,2583],"[...([] as DetailsText[]), ...(Array.isArray(item.content) ? item.content : [item.content])]",[3971,3975],[1249,1253],[1733,1737],[1920,1924],[2587,2591],[2632,2636],[2681,2685],[2340,2386],"Array.from({length: typeof stub === 'number' ? stub : 6})","[typeof stub === 'number' ? stub : 6]",[2329,2333],[2570,2574],[7891,7895],[8869,8873],[10052,10056],[10202,10206],[413,416],[441,444],[1307,1311],"??",[1050,1098],"props.active ?? renderProps.active","||","props.active || renderProps.active",[3155,3159],[3599,3603],[1496,1500],[2139,2143],[3445,3449],[4524,4528],[5569,5573],[6552,6556],[1809,1813],[2731,2735],[3247,3250],[1747,1751],[2541,2545],[2755,2759],[1398,1446],[3691,3695],[536,540],[600,604],[650,654],[559,563],[1876,1880],[1909,1965],"props.hint ?? null","props.hint || null",[1961,1965],[365,368],[371,374],[991,994],[997,1000],[1644,1647],[622,638],"Array.from({length: count})","[count]",[2167,2170],[2173,2176],[503,507],[577,581],[823,827],[922,926],[996,1000],[6548,6552],[7165,7169],[7267,7271],[7528,7531],[7536,7539],[389,392],[395,398],[1334,1337],[1340,1343],[1989,1992],[1477,1519],"Array.from({length: clamp === undefined ? 1 : clamp})","[clamp === undefined ? 1 : clamp]",[1689,1731],"Array.from({length: clamp === undefined ? 3 : clamp})","[clamp === undefined ? 3 : clamp]",[1833,1837],[1891,1933],[497,501],[606,610],[773,777]]
